; Williams Defender arcade game disassembly, created by Aaron Bottegal.
; This disassembly is a work in progress.


;PCB Registers

PALETTE_ENTRY_0x0                        = 0xC000
PALETTE_ENTRY_0x1                        = 0xC001
PALETTE_ENTRY_0x2                        = 0xC002
PALETTE_ENTRY_0x3                        = 0xC003
PALETTE_ENTRY_0x4                        = 0xC004
PALETTE_ENTRY_0x5                        = 0xC005
PALETTE_ENTRY_0x6                        = 0xC006
PALETTE_ENTRY_0x7                        = 0xC007
PALETTE_ENTRY_0x8                        = 0xC008
PALETTE_ENTRY_0x9                        = 0xC009
PALETTE_ENTRY_0xA                        = 0xC00A
PALETTE_ENTRY_0xB                        = 0xC00B
PALETTE_ENTRY_0xC                        = 0xC00C
PALETTE_ENTRY_0xD                        = 0xC00D
PALETTE_ENTRY_0xE                        = 0xC00E
PALETTE_ENTRY_0xF                        = 0xC00F
SCREEN_CONTROL                           = 0xC010
WATCHDOG                                 = 0xC3FC ;to 0xC3FF
VIDEO_COUNTER_BITS                       = 0xC800 ;to 0xCBFF
PIA_ROM_DATA_A                           = 0xCC00
PIA_ROM_CTRL_A                           = 0xCC01
PIA_ROM_DATA_B                           = 0xCC02
PIA_ROM_CTRL_B                           = 0xCC03
PIA_WGT_DATA_A                           = 0xCC04
PIA_WGT_CTRL_A                           = 0xCC05
PIA_WGT_DATA_B                           = 0xCC06
PIA_WGT_CTRL_B                           = 0xCC07
BANKSWITCH                               = 0xD000


;RAM Variables

	.org $0000
R_0000:                                  .rs 0x01 ;0x0000


	.org $0036
BANK_VAL_DP:                             .rs 0x01 ;0x0036


	.org $003D
TEXT_PTR_TO_CODE_JSR:                    .rs 0x02 ;0x003D to 003E
TEXT_PTR_TO_CODE_JMP:                    .rs 0x02 ;0x003F to 0040

	.org $004C
TEXT_DATA_SPACING_XXYY?:                 .rs 0x02 ;0x004C to 004D
SENTENCE_CURR_SCR_LOC_CR_XXYY?:          .rs 0x02 ;0x004E to 004F
SENTENCE_CURR_SCR_LOC_XXYY:              .rs 0x02 ;0x0050 to 0051
SENTENCE_PTR_WORD_ON:                    .rs 0x02 ;0x0052 to 0053
SENTENCE_PTR_TO_WORD:                    .rs 0x01 ;0x0054


	.org $0056
SENTENCE_END_PTR:                        .rs 0x01 ;0x0056


	.org $0058
SENTENCE_FLAG_58:                        .rs 0x01 ;0x0058

TEXT_PTR_UNK:                            .rs 0x02 ;0x0059 to 005A

	.org $01ED
R_01ED:                                  .rs 0x01 ;0x01ED


	.org $0ADE
R_0ADE:                                  .rs 0x01 ;0x0ADE


	.org $29F3
R_29F3:                                  .rs 0x01 ;0x29F3


	.org $3997
R_3997:                                  .rs 0x01 ;0x3997


	.org $467E
R_467E:                                  .rs 0x01 ;0x467E


	.org $6666
R_6666:                                  .rs 0x01 ;0x6666


	.org $7BEB
R_7BEB:                                  .rs 0x01 ;0x7BEB


	.org $8888
R_8888:                                  .rs 0x01 ;0x8888


	.org $967E
R_967E:                                  .rs 0x01 ;0x967E


	.org $9730
R_9730:                                  .rs 0x01 ;0x9730


	.org $9C00
R_9C00:                                  .rs 0x01 ;0x9C00


	.org $9C40
R_9C40:                                  .rs 0x01 ;0x9C40


	.org $A002
R_A002:                                  .rs 0x01 ;0xA002


	.org $A063
R_A063:                                  .rs 0x01 ;0xA063


	.org $A077
R_A077:                                  .rs 0x01 ;0xA077


	.org $A097
R_A097:                                  .rs 0x01 ;0xA097


	.org $A0ED
R_A0ED:                                  .rs 0x01 ;0xA0ED


	.org $A0EF
R_A0EF:                                  .rs 0x01 ;0xA0EF


	.org $A100
R_A100:                                  .rs 0x01 ;0xA100

R_A101:                                  .rs 0x01 ;0xA101

R_A102:                                  .rs 0x01 ;0xA102

R_A103:                                  .rs 0x01 ;0xA103


	.org $A105
R_A105:                                  .rs 0x01 ;0xA105

R_A106:                                  .rs 0x01 ;0xA106

R_A107:                                  .rs 0x01 ;0xA107

R_A108:                                  .rs 0x01 ;0xA108


	.org $A10A
R_A10A:                                  .rs 0x01 ;0xA10A

R_A10B:                                  .rs 0x01 ;0xA10B

R_A10C:                                  .rs 0x01 ;0xA10C

R_A10D:                                  .rs 0x01 ;0xA10D

R_A10E:                                  .rs 0x01 ;0xA10E

R_A10F:                                  .rs 0x01 ;0xA10F

R_A110:                                  .rs 0x01 ;0xA110

R_A111:                                  .rs 0x01 ;0xA111

R_A112:                                  .rs 0x01 ;0xA112

R_A113:                                  .rs 0x01 ;0xA113

R_A114:                                  .rs 0x01 ;0xA114

R_A115:                                  .rs 0x01 ;0xA115

R_A116:                                  .rs 0x01 ;0xA116

R_A117:                                  .rs 0x01 ;0xA117

R_A118:                                  .rs 0x01 ;0xA118

R_A119:                                  .rs 0x01 ;0xA119


	.org $A162
R_A162:                                  .rs 0x01 ;0xA162

R_A163:                                  .rs 0x01 ;0xA163

R_A164:                                  .rs 0x01 ;0xA164

R_A165:                                  .rs 0x01 ;0xA165

R_A166:                                  .rs 0x01 ;0xA166

R_A167:                                  .rs 0x01 ;0xA167

R_A168:                                  .rs 0x01 ;0xA168


	.org $A16A
R_A16A:                                  .rs 0x01 ;0xA16A

R_A16B:                                  .rs 0x01 ;0xA16B


	.org $A16D
R_A16D:                                  .rs 0x01 ;0xA16D


	.org $A16F
R_A16F:                                  .rs 0x01 ;0xA16F


	.org $A171
R_A171:                                  .rs 0x01 ;0xA171


	.org $A173
R_A173:                                  .rs 0x01 ;0xA173


	.org $A175
R_A175:                                  .rs 0x01 ;0xA175

R_A176:                                  .rs 0x01 ;0xA176

R_A177:                                  .rs 0x01 ;0xA177

R_A178:                                  .rs 0x01 ;0xA178

R_A179:                                  .rs 0x01 ;0xA179

R_A17A:                                  .rs 0x01 ;0xA17A

R_A17B:                                  .rs 0x01 ;0xA17B


	.org $A17D
R_A17D:                                  .rs 0x01 ;0xA17D

R_A17E:                                  .rs 0x01 ;0xA17E

R_A17F:                                  .rs 0x01 ;0xA17F


	.org $A181
R_A181:                                  .rs 0x01 ;0xA181


	.org $A183
R_A183:                                  .rs 0x01 ;0xA183

R_A184:                                  .rs 0x01 ;0xA184

R_A185:                                  .rs 0x01 ;0xA185

R_A186:                                  .rs 0x01 ;0xA186

R_A187:                                  .rs 0x01 ;0xA187


	.org $A189
R_A189:                                  .rs 0x01 ;0xA189


	.org $A18B
R_A18B:                                  .rs 0x01 ;0xA18B


	.org $A18D
R_A18D:                                  .rs 0x01 ;0xA18D


	.org $A18F
R_A18F:                                  .rs 0x01 ;0xA18F

R_A190:                                  .rs 0x01 ;0xA190


	.org $A192
R_A192:                                  .rs 0x01 ;0xA192


	.org $A194
R_A194:                                  .rs 0x01 ;0xA194


	.org $A196
R_A196:                                  .rs 0x01 ;0xA196


	.org $A198
R_A198:                                  .rs 0x01 ;0xA198


	.org $A1C6
R_A1C6:                                  .rs 0x01 ;0xA1C6


	.org $A1C8
R_A1C8:                                  .rs 0x01 ;0xA1C8

R_A1C9:                                  .rs 0x01 ;0xA1C9


	.org $A1CB
R_A1CB:                                  .rs 0x01 ;0xA1CB


	.org $A206
R_A206:                                  .rs 0x01 ;0xA206


	.org $A208
R_A208:                                  .rs 0x01 ;0xA208


	.org $BDD0
R_BDD0:                                  .rs 0x01 ;0xBDD0



;Program ROM code

;Laid out as:
;	0xD000-0xFFFF
;	0xC000 Bank 1
;	0xC000 Bank 2
;	0xC000 Bank 3
;	0xC000 Bank 7

	.org $D000

    DECA
U=$63,A>U+4,X>U+2: ; 0x000001, $D001
    LDU   $63
    STA   4,U
    STX   2,U
    JMP   L_001856
L_00000A: ; 0x00000A, $D00A
    LDX   $63 ; Get X
    BSR   LIST_FIND_X
    LEAU  X
    JMP   L_001856
LIST_FIND_IN_X: ; 0x000013, $D013
    LDX   6,X ; Seed X with ptr in ptr
LIST_FIND_X: ; 0x000015, $D015
    PSHS  U,B,A ; Save
    LDU   #$A05F ; Load list start.
TEST_LIST_MATCH: ; 0x00001A, $D01A
    CMPX  U ; Is X next?
    BNE   X_NOT_NEXT ; If X doesn't match
    LDD   X ; Get X.next
    STD   U ; Store to U.next
    LDA   6,X ; Get data at X
    BEQ   PTR_6_NULL ; If next is NULL
    LDD   $69 ; Save obj
    STX   $69
    BRA   STD@X,U>X,LEAVE
PTR_6_NULL: ; 0x00002C, $D02C
    LDD   $61 ; Save ptr
    STX   $61 ; Store X ptr
STD@X,U>X,LEAVE: ; 0x000030, $D030
    STD   X ; Store D to X.next
    LEAX  U ; X is now obj U
    PULS  A,B,U,PC ; RTS
X_NOT_NEXT: ; 0x000036, $D036
    LDU   U ; Get next location
    BNE   TEST_LIST_MATCH ; if !=NULL
NOP+JMP_SETUP_STUFF?: ; 0x00003A, $D03A
    NOP ; Hmm...
    JMP   DEFENDER_GAME_START?
L_00003E: ; 0x00003E, $D03E
    PSHS  U,Y,A
    LDU   $69 ; Get U
    BNE   U_!NULL
    .db $BD ; JSR NOP+JMP
U_!NULL: ; 0x000045, $D045
    .db $D0 ; SUBB $DP3A
    .db $3A
    LDY   U ; Get Y from U
    STY   $69 ; Store
    LDA   #$01
    STA   6,U ; Store @U+6
    LDA   S
    BRA   U_SETUP+MAKE_HEAD ; Goto
L_000055: ; 0x000055, $D055
    PSHS  U,Y,A
    LDU   $61
    BNE   L_00005E
    JSR   NOP+JMP_SETUP_STUFF?
L_00005E: ; 0x00005E, $D05E
    LDY   U
    STY   $61
    CLR   6,U
U_SETUP+MAKE_HEAD: ; 0x000066, $D066
    STX   2,U ; X to obj
    STA   5,U ; A to obj
    LDA   #$01
    STA   4,U ; Setup obj
    LDX   [R_A063] ; Remember
    STU   [R_A063] ; Store to list
    STX   U ; Store next in new head.
    LEAX  U ; U->X
    PULS  A,Y,U,PC ; RTS
FIND_IDK: ; 0x00007C, $D07C
    PSHS  X,A ; Save
    LDX   #$A05F ; Index
MATCHED_VAL: ; 0x000081, $D081
    LDX   X ; Get first ptr
    BEQ   X_NULL
    CMPX  $63 ; CMP to
    BEQ   MATCHED_VAL ; Can't match
    LDA   5,X ; Get obj data
    CMPA  #$02
    BEQ   MATCHED_VAL ; Can't be val
    BSR   LIST_FIND_X ; Go into list?
    BRA   MATCHED_VAL ; Always traverse.
X_NULL: ; 0x000093, $D093
    PULS  A,X,PC ; RTS
L_000095: ; 0x000095, $D095
    BSR   $67_PTR_STUFF
    PSHS  U,Y,B,A
    STU   6,X
    LDU   6,S
    PULU  A,B,Y
    STD   2,X
    STY   8,X
    PULU  A,B
    STD   18,X
    STU   6,S
    PULS  A,B,Y,U,PC
$67_PTR_STUFF: ; 0x0000AD, $D0AD
    PSHS  U,B,A ; Save
    LDX   $67 ; Get ptr
    BNE   VALID_X_PTR ; If valid
    JSR   NOP+JMP_SETUP_STUFF? ; sets up stuff.
VALID_X_PTR: ; 0x0000B6, $D0B6
    LDD   X ; Get data at X
    STD   $67 ; Store to DP
    LDD   $65 ; Get other DP
    STD   X ; Store in X
    CLRA ; CLD
    CLRB
    STD   4,X ; Clear
    STA   20,X ; Set obj info.
    PULS  A,B,U,PC ; RTS
REMOVE_X_FROM_LIST: ; 0x0000C7, $D0C7
    PSHS  U,Y,X ; Save
    LDU   #$A065 ; Ptr
CMP_NEXT_LOOP_A065: ; 0x0000CC, $D0CC
    CMPX  U ; CMP X to U.next
    BNE   X_NOT_NEXT ; X not next
REMOVE_U.NEXT: ; 0x0000D0, $D0D0
    LDY   [U] ; Get U.next->next
    STY   U ; Store to U.next, removing X.
    LDY   $67 ; Get ptr
    STX   $67 ; store removed to loc
    STY   X ; Store Y to removed
    PULS  X,Y,U,PC ; RTS
X_NOT_NEXT: ; 0x0000E0, $D0E0
    LDU   U ; Next ptr
    BNE   CMP_NEXT_LOOP_A065 ; LOOP
    LDU   #$A06B ; Try other list.
CMP_NEXT_LOOP_GENERIC: ; 0x0000E7, $D0E7
    CMPX  U
    BEQ   REMOVE_U.NEXT ; If U.next = X, goto
    LDU   U ; U=U.next
    BNE   CMP_NEXT_LOOP_GENERIC ; loop
    JSR   NOP+JMP_SETUP_STUFF? ; Do this
L_0000F2: ; 0x0000F2, $D0F2
    PSHS  U,Y,X ; Save
    LDU   #$A06D ; Ptr
    BRA   CMP_NEXT_LOOP_GENERIC ; Goto
    PSHS  X,DP ; Save obj and page. Not gotten to?
    STS   $77
    BHS   L_000102
    LEAY  2,Y
L_000102: ; 0x000102, $D102
    LDS   2,Y
    ADDB  #$08
    TFR   D>U
    BRA   L_000159
    PSHS  X,DP
    ADDB  #$08
    TFR   D>U
    LDD   #$0000
    LDX   #$0000
    LEAY  X
    TFR   A>DP
    ANDCC #$00
    BRA   L_000189
    PSHS  X,DP
    ADDB  #$08
    TFR   D>U
    LDD   #$0000
    LDX   #$0000
    LEAY  X
    TFR   A>DP
    ANDCC #$00
    PSHU  Y,X,DP,B,A,CC
    LEAU  264,U
    BRA   L_00017D
    PSHS  X,DP
    STS   $77
    BHS   L_000142
    LEAY  2,Y
L_000142: ; 0x000142, $D142
    LDS   2,Y
    ADDB  #$08
    TFR   D>U
L_000149: ; 0x000149, $D149
    PULS  CC,A,B,DP,X,Y
    PSHU  Y,X,DP,B,A,CC
    LEAU  264,U
    PULS  CC,A,B,DP,X,Y
    PSHU  Y,X,DP,B,A,CC
    LEAU  264,U
L_000159: ; 0x000159, $D159
    PULS  CC,A,B,DP,X,Y
    PSHU  Y,X,DP,B,A,CC
    LEAU  264,U
    PULS  CC,A,B,DP,X,Y
    PSHU  Y,X,DP,B,A,CC
    LDS   R_A077
    PULS  DP,X,PC
    PSHS  X,DP
    ADDB  #$08
    TFR   D>U
    LDD   #$0000
    LDX   #$0000
    LEAY  X
    TFR   A>DP
    ANDCC #$00
L_00017D: ; 0x00017D, $D17D
    PSHU  Y,X,DP,B,A,CC
    LEAU  264,U
    PSHU  Y,X,DP,B,A,CC
    LEAU  264,U
L_000189: ; 0x000189, $D189
    PSHU  Y,X,DP,B,A,CC
    LEAU  264,U
    PSHU  Y,X,DP,B,A,CC
    PULS  DP,X,PC
    PSHS  X,DP
    STS   $77
    BHS   L_00019C
    LEAY  2,Y
L_00019C: ; 0x00019C, $D19C
    LDS   2,Y
    ADDB  #$08
    TFR   D>U
    PULS  CC,A,B,DP,X,Y
    PSHU  Y,X,DP,B,A,CC
    LEAU  264,U
    BRA   L_000149
    BHS   L_0001B1
    LEAY  2,Y
L_0001B1: ; 0x0001B1, $D1B1
    LDY   2,Y
    TFR   D>U
    LDD   Y
    STD   U
    LDD   2,Y
    STD   2,U
    LDD   4,Y
    STD   256,U
    LDD   6,Y
    STD   258,U
    LDD   8,Y
    STD   512,U
    LDD   10,Y
    STD   514,U
    RTS
    TFR   D>U
    LDD   #$0000
    STD   U
    STD   2,U
    STD   256,U
    STD   258,U
    STD   512,U
    STD   514,U
    RTS
    BHS   L_0001F5
    LEAY  2,Y
L_0001F5: ; 0x0001F5, $D1F5
    LDY   2,Y
    TFR   D>U
    LDD   Y
    STD   U
    LDD   2,Y
    STA   2,U
    STB   256,U
    LDD   4,Y
    STD   257,U
    RTS
    TFR   D>U
    LDD   #$0000
    STD   U
    STA   2,U
    STD   256,U
    STA   258,U
    RTS
    PSHS  U,X,B,A
    STS   $77
    BHS   L_000228
    LEAY  2,Y
L_000228: ; 0x000228, $D228
    LDS   2,Y
    ADDB  #$04
    TFR   D>U
    PULS  A,B,X
    PSHU  X,B,A
    LEAU  260,U
    PULS  A,B,X
    PSHU  X,B,A
    LEAU  260,U
    PULS  A,B,X
    PSHU  X,B,A
    LEAU  260,U
    PULS  A,B,X
    PSHU  X,B,A
    LEAU  260,U
    PULS  A,B,X
    PSHU  X,B,A
    LEAU  260,U
    PULS  A,B,X
    PSHU  X,B,A
    LDS   $77
    PULS  A,B,X,U,PC ; RTS
    PSHS  U,X,B,A
    ADDB  #$04
    TFR   D>U
    LDD   #$0000
    LDX   #$0000
    PSHU  X,B,A
    LEAU  260,U
    PSHU  X,B,A
    LEAU  260,U
    PSHU  X,B,A
    LEAU  260,U
    PSHU  X,B,A
    LEAU  260,U
    PSHU  X,B,A
    LEAU  260,U
    PSHU  X,B,A
    PULS  A,B,X,U,PC
L_00028E: ; 0x00028E, $D28E
    PSHS  X
    STS   $77
    BHS   L_000297
    LEAY  2,Y
L_000297: ; 0x000297, $D297
    LDS   2,Y
    ADDB  #$06
    TFR   D>U
    PULS  A,B,X,Y
    PSHU  Y,X,B,A
    LEAU  262,U
    PULS  A,B,X,Y
    PSHU  Y,X,B,A
    LEAU  262,U
L_0002AE: ; 0x0002AE, $D2AE
    PULS  A,B,X,Y
    PSHU  Y,X,B,A
    LEAU  262,U
L_0002B6: ; 0x0002B6, $D2B6
    PULS  A,B,X,Y
    PSHU  Y,X,B,A
    LEAU  262,U
    PULS  A,B,X,Y
    PSHU  Y,X,B,A
    LEAU  262,U
    PULS  A,B,X,Y
    PSHU  Y,X,B,A
    LEAU  262,U
    PULS  A,B,X,Y
    PSHU  Y,X,B,A
    LEAU  262,U
    PULS  A,B,X,Y
    PSHU  Y,X,B,A
    LDS   $77
    PULS  X,PC
L_0002DF: ; 0x0002DF, $D2DF
    PSHS  X
    ADDB  #$06
    TFR   D>U
    LDD   #$0000
    LDX   #$0000
    LEAY  X
    PSHU  Y,X,B,A
    LEAU  262,U
    PSHU  Y,X,B,A
    LEAU  262,U
L_0002F9: ; 0x0002F9, $D2F9
    PSHU  Y,X,B,A
    LEAU  262,U
L_0002FF: ; 0x0002FF, $D2FF
    PSHU  Y,X,B,A
    LEAU  262,U
    PSHU  Y,X,B,A
    LEAU  262,U
    PSHU  Y,X,B,A
    LEAU  262,U
    PSHU  Y,X,B,A
    LEAU  262,U
    PSHU  Y,X,B,A
    PULS  X,PC
    PSHS  X
    STS   $77
    BHS   L_000324
    LEAY  2,Y
L_000324: ; 0x000324, $D324
    LDS   2,Y
    ADDB  #$06
    TFR   D>U
    BRA   L_0002B6
    PSHS  X
    ADDB  #$06
    TFR   D>U
    LDD   #$0000
    LDX   #$0000
    LEAY  X
    BRA   L_0002FF
    PSHS  X
    STS   $77
    BHS   L_000346
    LEAY  2,Y
L_000346: ; 0x000346, $D346
    LDS   2,Y
    ADDB  #$06
    TFR   D>U
    JMP   L_0002AE
L_000350: ; 0x000350, $D350
    PSHS  X
    ADDB  #$06
    TFR   D>U
    LDD   #$0000
    LDX   #$0000
    LEAY  X
    BRA   L_0002F9
L_000360: ; 0x000360, $D360
    PSHS  U,Y,X,B,A
    ORCC  #$01
    ROL   $8A
    LSRA
    PSHS  A
    LDA   #$00
    BHS   L_000375
    ASLB
    ROLA
    ASLB
    ROLA
    ASLB
    ROLA
    ASLB
    ROLA
L_000375: ; 0x000375, $D375
    JSR   L_0006FE
    STD   $73
    LDB   #$03
    SUBB  S+
    LDA   B,X
    ADDA  $74
    DAA
    STA   B,X
    DECB
    BMI   L_000396
L_000388: ; 0x000388, $D388
    LDA   B,X
    ADCA  $73
    DAA
    STA   B,X
    LDA   #$00
    STA   $73
    DECB
    BPL   L_000388
L_000396: ; 0x000396, $D396
    LDD   $AB
    BEQ   L_0003C5
    LEAX  1,X
    LEAY  3,X
    BSR   L_0003CA
    BLO   L_0003C5
    LDA   1,Y
    ADDA  $AC
    DAA
    STA   1,Y
    LDA   Y
    ADCA  $AB
    DAA
    STA   Y
    INC   6,X
    INC   8,X
    JSR   L_000629
    JSR   L_000680
    LDD   #$D4B0
    JSR   L_00054D
    LDB   #$05
    JSR   GOTO_B3-C00F
L_0003C5: ; 0x0003C5, $D3C5
    BSR   L_0003D9
    PULS  A,B,X,Y,U
    RTS
L_0003CA: ; 0x0003CA, $D3CA
    PSHS  B,A
    LDD   X
    CMPD  Y
    BNE   L_0003D7
    LDA   2,X
    CMPA  2,Y
L_0003D7: ; 0x0003D7, $D3D7
    PULS  A,B,PC
L_0003D9: ; 0x0003D9, $D3D9
    LDA   $8B
L_0003DB: ; 0x0003DB, $D3DB
    PSHS  A
    DECA
    BNE   L_0003E8
    LDX   #$0F1C
    LDU   #$A1C3
    BRA   L_0003EE
L_0003E8: ; 0x0003E8, $D3E8
    LDX   #$711C
    LDU   #$A200
L_0003EE: ; 0x0003EE, $D3EE
    CLR   $73
    LDB   #$06
    LDA   BANK_VAL_DP
    PSHS  A
    LDA   #$02
    STA   BANK_VAL_DP
    STA   BANKSWITCH
L_0003FD: ; 0x0003FD, $D3FD
    LDA   U+
    LDY   PALETTE_ENTRY_0x0
    BITB  #$01
    BNE   L_00040D
    LEAU  -1,U
    LSRA
    LSRA
    LSRA
    LSRA
L_00040D: ; 0x00040D, $D40D
    ANDA  #$0F
    BNE   L_000420
    CMPB  #$02
    BLS   L_000420
    TST   $73
    BNE   L_000420
    EXG   X-D
    JSR   L_00257B
    BRA   L_00042B
L_000420: ; 0x000420, $D420
    INC   $73
    ASLA
    ASLA
    LEAY  A,Y
    EXG   X-D
    JSR   TEXT_CHAR_TO_SCREEN
L_00042B: ; 0x00042B, $D42B
    EXG   X-D
    LEAX  1024,X
    DECB
    BNE   L_0003FD
    PULS  A
    STA   BANK_VAL_DP
    STA   BANKSWITCH
    PULS  A,PC
    LDA   $BA
    BPL   L_00046B
    JSR   BANKSWITCH_TO_3
    JSR   $C033
    INC   R_A162
    BRA   L_00046B
    LDA   $BA
    BPL   L_00046B
    ORCC  #$90
    CLR   BANKSWITCH
    LDA   #$04
    STA   PIA_ROM_CTRL_B
    LDA   PIA_ROM_DATA_B
    JSR   BANKSWITCH_TO_3
    LDA   $79
    LSRA
    BLO   L_000468
    JMP   $C027
L_000468: ; 0x000468, $D468
    JMP   $C021
L_00046B: ; 0x00046B, $D46B
    JMP   L_00000A
    LDX   #$A07F
    LDB   #$12
    BRA   L_000481
    LDX   #$A080
    LDB   #$15
    BRA   L_000481
    LDX   #$A081
    LDB   #$18
L_000481: ; 0x000481, $D481
    LDA   $7E
    BNE   L_00046B
    LDA   X
    BNE   L_00046B
    LDA   #$16
    STA   X
    LDA   #$C0
    STD   9,U
    LDA   #$0A
    LDX   #$D499
    JMP   U=$63,A>U+4,X>U+2
    LDA   $7E
    BNE   L_00046B
    LDD   #$D4AB
    JSR   L_00054D
    JSR   BANKSWITCH_TO_3
    JSR   [9,U]
    BRA   L_00046B
    .db $FF
    .db $01
    .db $18
    .db $19
    .db $00
    .db $FF
    .db $01
    .db $20
    .db $1E
    .db $00
    .db $F0
    .db $02
    .db $08
    .db $11
    .db $01
    .db $20
    .db $17
    .db $00
    .db $F0
    .db $01
    .db $40
    .db $0A
    .db $00
    .db $F0
    .db $01
    .db $10
    .db $0B
    .db $00
    .db $E8
    .db $01
    .db $04
    .db $14
    .db $02
    .db $06
    .db $11
    .db $02
    .db $0A
    .db $17
    .db $00
    .db $E8
    .db $06
    .db $04
    .db $11
    .db $01
    .db $10
    .db $17
    .db $00
    .db $E0
    .db $03
    .db $0A
    .db $08
    .db $00
    .db $E0
    .db $01
    .db $18
    .db $1F
    .db $00
    .db $E0
    .db $01
    .db $18
    .db $11
    .db $00
    .db $D8
    .db $01
    .db $10
    .db $1A
    .db $00
    .db $D0
    .db $01
    .db $30
    .db $15
    .db $00
    .db $D0
    .db $01
    .db $10
    .db $05
    .db $00
    .db $D0
    .db $01
    .db $08
    .db $17
    .db $00
    .db $D0
    .db $01
    .db $08
    .db $07
    .db $00
    .db $D0
    .db $01
    .db $0A
    .db $01
    .db $00
    .db $D0
    .db $01
    .db $0A
    .db $06
    .db $00
    .db $D0
    .db $01
    .db $10
    .db $0B
    .db $00
    .db $C8
    .db $0A
    .db $01
    .db $0E
    .db $00
    .db $C0
    .db $01
    .db $08
    .db $07
    .db $00
    .db $C0
    .db $01
    .db $30
    .db $14
    .db $00
    .db $C0
    .db $01
    .db $20
    .db $18
    .db $00
    .db $C0
    .db $01
    .db $08
    .db $03
    .db $00
    .db $C0
    .db $01
    .db $30
    .db $09
    .db $00
    .db $C0
    .db $01
    .db $08
    .db $03
    .db $00
    .db $C0
    .db $01
    .db $18
    .db $0C
    .db $00
L_000539: ; 0x000539, $D539
    PSHS  B,A,CC
    ORCC  #$FF
    CLR   BANKSWITCH
    LDA   #$3F
    STA   PIA_ROM_DATA_B
    COMB
    ANDB  #$3F
    STB   PIA_ROM_DATA_B
    PULS  CC,A,B,PC
L_00054D: ; 0x00054D, $D54D
    PSHS  X,B,A,CC
    CLR   $AD
    TFR   D>X
    LDA   X
    CMPA  $B2
    BLO   L_000566
    STA   $B2
    LEAX  -2,X
    ORCC  #$10
    STX   $B0
    LDD   #$0101
    STD   $B3
L_000566: ; 0x000566, $D566
    PULS  CC,A,B,X,PC
L_000568: ; 0x000568, $D568
    LDA   $B3
    BEQ   L_000580
    DEC   $B3
    BNE   L_0005A8
    LDX   $B0
    DEC   $B4
    BNE   L_0005A2
    LEAX  3,X
    STX   $B0
    LDA   X
    BNE   L_0005A0
    STA   $B2
L_000580: ; 0x000580, $D580
    LDA   $7B
    BITA  #$02
    BNE   L_000590
    LDA   $AD
    BEQ   L_0005A8
    CLR   $AD
    LDB   #$0F
    BRA   L_0005A6
L_000590: ; 0x000590, $D590
    LDA   $AD
    BNE   L_0005A8
    LDA   $BA
    BITA  #$98
    BNE   L_0005A8
    LDB   #$16
    STB   $AD
    BRA   L_0005A6
L_0005A0: ; 0x0005A0, $D5A0
    STA   $B4
L_0005A2: ; 0x0005A2, $D5A2
    LDD   1,X
    STA   $B3
L_0005A6: ; 0x0005A6, $D5A6
    BSR   L_000539
L_0005A8: ; 0x0005A8, $D5A8
    LDA   PIA_ROM_CTRL_A
    BITA  #$40
    BEQ   L_0005B3
    LDA   #$3C
    STA   $7E
L_0005B3: ; 0x0005B3, $D5B3
    LDA   $7E
    BEQ   L_0005B9
    DEC   $7E
L_0005B9: ; 0x0005B9, $D5B9
    LDA   $7F
    BEQ   L_0005BF
    DEC   $7F
L_0005BF: ; 0x0005BF, $D5BF
    LDA   $81
    BEQ   L_0005C5
    DEC   $81
L_0005C5: ; 0x0005C5, $D5C5
    LDA   $80
    BEQ   L_0005CB
    DEC   $80
L_0005CB: ; 0x0005CB, $D5CB
    LDA   $7B
    ORA   $7C
    COMA
    LDB   $7B
    STB   $7C
    LDB   PIA_WGT_DATA_A
    STB   $7B
    LDB   PIA_WGT_DATA_B
    STB   $7D
    ANDA  $7B
    BEQ   L_0005FD
    LDU   #$F882
L_0005E5: ; 0x0005E5, $D5E5
    CLRB
L_0005E6: ; 0x0005E6, $D5E6
    ADDB  #$04
    LSRA
    BHS   L_0005E6
    LEAU  B,U
    PULU  A,B,X
    LDU   $82
    BNE   L_0005F8
    STD   $82
    STX   $84
    RTS
L_0005F8: ; 0x0005F8, $D5F8
    STD   $86
    STX   $88
    RTS
L_0005FD: ; 0x0005FD, $D5FD
    LDA   $79
    ORA   $7A
    COMA
    LDB   $79
    STB   $7A
    LDB   PIA_ROM_DATA_A
    ANDB  #$3F
    STB   $79
    BITA  $79
    BEQ   L_000628
    LDX   #$0078
L_000614: ; 0x000614, $D614
    LEAX  -1,X
    BNE   L_000614
    LDB   PIA_ROM_DATA_A
    ANDB  $79
    STB   $79
    ANDA  $79
    BEQ   L_000628
    LDU   #$F8A2
    BSR   L_0005E5
L_000628: ; 0x000628, $D628
    RTS
L_000629: ; 0x000629, $D629
    PSHS  U,Y,X,B,A
    LDX   #$0F14
    LDA   R_A1C9
    BSR   L_000642
    LDA   $8C
    DECA
    BEQ   L_000640
    LDX   #$7114
    LDA   R_A206
    BSR   L_000642
L_000640: ; 0x000640, $D640
    PULS  A,B,X,Y,U,PC
L_000642: ; 0x000642, $D642
    CMPA  #$05
    BLS   L_000648
    LDA   #$05
L_000648: ; 0x000648, $D648
    PSHS  A
    LDD   #$2006
    JSR   SAVE_UXBA+BANK_UNK
    LDA   S
    BEQ   L_000663
    LDY   #$F9D5
    TFR   X>D
L_00065A: ; 0x00065A, $D65A
    JSR   TEXT_CHAR_TO_SCREEN
    ADDA  #$06
    DEC   S
    BNE   L_00065A
L_000663: ; 0x000663, $D663
    PULS  A,PC
L_000665: ; 0x000665, $D665
    PSHS  U,Y,X,B,A
    LDD   #$4020
    LDX   #$3008
    JSR   SAVE_UXBA+BANK_UNK
    BSR   L_0006BC
    BSR   L_000629
    BSR   L_000680
    LDA   $8C
L_000678: ; 0x000678, $D678
    JSR   L_0003DB
    DECA
    BNE   L_000678
    PULS  A,B,X,Y,U,PC
L_000680: ; 0x000680, $D680
    PSHS  U,Y,X,B,A
    LDX   #$291B
    LDA   R_A1CB
    BSR   L_000699
    LDA   $8C
    DECA
    BEQ   L_000697
    LDX   #$8B1B
    LDA   R_A208
    BSR   L_000699
L_000697: ; 0x000697, $D697
    PULS  A,B,X,Y,U,PC
L_000699: ; 0x000699, $D699
    CMPA  #$03
    BLS   L_00069F
    LDA   #$03
L_00069F: ; 0x00069F, $D69F
    PSHS  A
    LDD   #$030B
    JSR   SAVE_UXBA+BANK_UNK
    LDA   S
    BEQ   L_0006BA
    LDY   #$F9D9
    TFR   X>D
L_0006B1: ; 0x0006B1, $D6B1
    JSR   TEXT_CHAR_TO_SCREEN
    ADDB  #$04
    DEC   S
    BNE   L_0006B1
L_0006BA: ; 0x0006BA, $D6BA
    PULS  A,PC
L_0006BC: ; 0x0006BC, $D6BC
    LDD   #$5555
    LDX   #$0028
L_0006C2: ; 0x0006C2, $D6C2
    STD   X
    LEAX  256,X
    CMPX  #$9C00
    BLO   L_0006C2
    LDX   #$2F08
L_0006D0: ; 0x0006D0, $D6D0
    STD   16640,X
    STD   X++
    CMPX  #$2F28
    BNE   L_0006D0
    LDX   #$2F07
L_0006DE: ; 0x0006DE, $D6DE
    STA   X
    LEAX  256,X
    CMPX  #$7107
    BNE   L_0006DE
    LDX   #$4C07
    LDD   #$9999
L_0006EF: ; 0x0006EF, $D6EF
    STD   X
    STD   33,X
    LEAX  256,X
    CMPX  #$5407
    BNE   L_0006EF
    RTS
L_0006FE: ; 0x0006FE, $D6FE
    PSHS  A
    LDA   $8B
L_000702: ; 0x000702, $D702
    LDX   #$A1C2
    DECA
    BEQ   L_00070B
    LDX   #$A1FF
L_00070B: ; 0x00070B, $D70B
    PULS  A,PC
L_00070D: ; 0x00070D, $D70D
    PSHS  A
    BRA   L_000702
L_000711: ; 0x000711, $D711
    PSHS  B
    LDB   $DF
    LDA   #$03
    MUL
    ADDB  #$11
    LDA   $E1
    LSRA
    LSRA
    LSRA
    EORA  $E1
    LSRA
    ROR   $E0
    ROR   $E1
    ADDB  $E1
    ADCB  $E0
    STB   $DF
    LDA   $DF
    PULS  B,PC
PIA_DATA_730: ; 0x000730, $D730
    .db $C0 ; TODO: Figure PIA_DATA here
    .db $FF
    .db $00
    .db $00
    .db $14 ; TODO: Figure PIA_CTRL here.
    .db $05
    .db $34
    .db $3E
DEFENDER_GAME_START?: ; 0x000738, $D738
    ORCC  #$FF ; Mask all
    LDS   #$BFFF ; Set S to top of RAM.
    LDA   #$A0
    TFR   A>DP ; DP=$A0
    CLR   BANKSWITCH ; Bank 0.
    LDB   #$04 ; 3 loops
    LDU   #$CC00 ; IO PIAs
    LDX   #$D730 ; PIA_DATA_730
PIA_SET_LOOP: ; 0x00074D, $D74D
    CLR   1,U ; Clear CTRL
    LDA   X+ ; Get data from X
    STA   U++ ; Store at DATA
    LDA   3,X ; Get other setup
    STA   -1,U ; Store to PIA.
    DECB ; Loop count
    BNE   PIA_SET_LOOP
    JSR   CLEAR_ALL_SCREEN ; Clear screen.
    LDX   #$9C00 ; Set to start of usable RAM
CLEAR_X_TO_$C000: ; 0x000760, $D760
    CLR   X+
    LDB   #$38
    STB   WATCHDOG
    CMPX  #$C000 ; Go to $C000
    BNE   CLEAR_X_TO_$C000 ; Loop
    CLR   PIA_ROM_DATA_A
    CLR   PIA_ROM_DATA_B
    LDX   #$C47D ; SRAM pointer
    JSR   GET_DATA_FROM_SRAM@X_IN_B,X++
    TFR   B>A ; Put to A
    CMPA  #$20 ; Blank? Space?
    BHI   IS_HIGHER ; If above
    ANDA  #$0F ; Less than
    CMPA  #$09
    BLS   LESS_OR_EQ_TO_9
IS_HIGHER: ; 0x000784, $D784
    CLRB
LESS_OR_EQ_TO_9: ; 0x000785, $D785
    STB   $37 ; Set some vars
    LDD   #$A55A
    STD   $E0
    LDD   #$FF70
    STD   $A1
    CLR   $A3
    LDB   #$FF
    STD   $79
    JSR   WATCHDOG_PTR_ETC
    JSR   BANKSWITCH_TO_3
    JSR   $C033
    BSR   L_0007C6
    BSR   L_0007B6
    JSR   SETUP_DP_52_49_36_48_59
    LDX   #$D825
    LDA   #$01
    JSR   L_000055
    COM   $BA
    ANDCC #$00
    JMP   L_0017BE
L_0007B6: ; 0x0007B6, $D7B6
    BSR   L_0007F5
    JSR   L_00169F
    JSR   L_001052
    BSR   L_000805
    JSR   L_00154B
    JMP   L_001149
L_0007C6: ; 0x0007C6, $D7C6
    PSHS  X,B,A
    CLRA
    CLRB
    LDX   #$AAC5
    STX   $61
L_0007CF: ; 0x0007CF, $D7CF
    LEAX  15,X
    STX   -15,X
    CMPX  #$AF1B
    BNE   L_0007CF
    STD   X
    STD   $5F
    LDX   #$AF2A
    STX   $69
L_0007E1: ; 0x0007E1, $D7E1
    LEAX  23,X
    STX   -23,X
    CMPX  #$AF86
    BNE   L_0007E1
    STD   X
    LDX   #$A05F
    STX   $63
    PULS  A,B,X,PC
L_0007F5: ; 0x0007F5, $D7F5
    LDX   #$F8BE
    LDU   #$A026
    LDB   #$10
L_0007FD: ; 0x0007FD, $D7FD
    LDA   X+
    STA   U+
    DECB
    BNE   L_0007FD
    RTS
L_000805: ; 0x000805, $D805
    PSHS  X,B,A,CC
    ORCC  #$FF
    LDX   #$A23C
    STX   $67
L_00080E: ; 0x00080E, $D80E
    LEAX  23,X
    STX   -23,X
    CMPX  #$AAAE
    BNE   L_00080E
    CLRA
    CLRB
    STD   X
    STD   $6B
    STD   $65
    STD   $6D
    PULS  CC,A,B,X,PC
L_000825: ; 0x000825, $D825
    JSR   BANKSWITCH_TO_1
    JMP   PALETTE_ENTRY_0x0
L_00082B: ; 0x00082B, $D82B
    LDX   #$C495
    JSR   GET_DATA_FROM_SRAM_@X
    DECA
    BNE   L_000838
    LDA   #$02
    STA   $37
L_000838: ; 0x000838, $D838
    RTS
    LDA   $BA
    BPL   L_00084B
    BSR   L_00082B
    LDA   $37
    BEQ   L_00084B
    LDD   #$D4BD
L_000846: ; 0x000846, $D846
    JSR   L_00054D
    BSR   L_000861
L_00084B: ; 0x00084B, $D84B
    JMP   L_00000A
    LDA   $BA
    BPL   L_00084B
    BSR   L_00082B
    LDA   $37
    CMPA  #$02
    BLO   L_00084B
    BSR   L_000861
    LDD   #$D4C2
    BRA   L_000846
L_000861: ; 0x000861, $D861
    CLR   $38
    NOP
    LDA   $B7
    BEQ   L_0008DB
    LDA   $BA
    BPL   L_0008C4
    JSR   FIND_IDK
    JSR   CLEAR_ALL_SCREEN
    LDA   #$7F
    STA   $BA
    LDA   #$01
    STA   $8B
    STA   $25
    CLR   $8C
    LDX   #$A1C2
L_000881: ; 0x000881, $D881
    CLR   X+
    CMPX  #$A23C
    BNE   L_000881
    LDX   #$C485
    JSR   GET_DATA_FROM_SRAM_@X
    ANDA  #$0F
    STA   R_A1C9
    LDB   #$0A
    STD   R_A1CB
    CLR   $39
    NOP
    LDX   #$A1C2
    JSR   L_000E7C
    LDX   #$C481
    JSR   GET_DATA_FROM_SRAM@X_IN_AB
    STD   $AB
    STD   R_A1C6
    CLR   R_A1C8
    LDX   #$A1C2
L_0008B2: ; 0x0008B2, $D8B2
    LDA   X+
    STA   60,X
    CMPX  #$A1FF
    BNE   L_0008B2
    LDX   #$D919
    LDA   #$00
    JSR   L_000055
L_0008C4: ; 0x0008C4, $D8C4
    INC   $8C
    LDA   $37
    ADDA  #$99
    DAA
    STA   $37
    LDX   #$C47D
    JSR   STORE_A_TO_SRAM_@X_BANKED
    LDA   $8C
    DECA
    BEQ   L_0008DB
    JSR   L_000665
L_0008DB: ; 0x0008DB, $D8DB
    RTS
WATCHDOG_PTR_ETC: ; 0x0008DC, $D8DC
    PSHS  X,A
    LDA   BANK_VAL_DP
    PSHS  A
SET_XAB: ; 0x0008E2, $D8E2
    LDX   #$DF17
    LDD   #$383C ; A=Watchdog, B=Ctrl
    BRA   STORE_X_WATCHDOG_MORE
L_0008EA: ; 0x0008EA, $D8EA
    PSHS  X,A
    LDA   BANK_VAL_DP
    PSHS  A
    CLRA
    JSR   BANKSWITCH_TO_A
    LDA   PIA_WGT_DATA_B ; Get widget data.
    BPL   SET_XAB ; If top bit set, load different data.
    LDX   #$DFC3
    LDD   #$3934 ; A=Watchdog, B=Ctrl
STORE_X_WATCHDOG_MORE: ; 0x0008FF, $D8FF
    STX   $90
    CLR   BANK_VAL_DP
    CLR   BANKSWITCH
    STB   PIA_WGT_CTRL_B ; Store to widget ctrl.
    STA   WATCHDOG ; Store to watchdog.
    LDA   #$7E
    STA   $8F
    PULS  A ; Pull stack
    STA   BANK_VAL_DP ; Switch
    STA   BANKSWITCH
    PULS  A,X,PC ; Restore/RTS
L_000919: ; 0x000919, $D919
    LDB   #$07
    JSR   GOTO_B3-C00F
L_00091E: ; 0x00091E, $D91E
    JSR   L_0007B6
    JSR   FIND_IDK
    LDA   #$7F
    STA   $BA
    LDX   $63
    CMPX  $5F
    BNE   L_000932
    LDX   X
    BEQ   L_000942
L_000932: ; 0x000932, $D932
    LDA   #$0F
    LDX   #$D93A
    JMP   U=$63,A>U+4,X>U+2
    LDA   $7F
    ORA   $80
    ORA   $7F
    BNE   L_000932
L_000942: ; 0x000942, $D942
    JSR   L_0007C6
    LDX   #$D950
    LDA   #$00
    JSR   L_000055
    JMP   L_0017BE
    CLRA
    JSR   BANKSWITCH_TO_A
    LDA   PIA_WGT_DATA_B
    BPL   L_00096E
    JSR   CLEAR_ALL_SCREEN
    LDA   $8B
    DECA
    BNE   L_000966
    JSR   WATCHDOG_PTR_ETC
    BRA   L_000968
L_000966: ; 0x000966, $D966
    BSR   L_0008EA
L_000968: ; 0x000968, $D968
    LDA   #$FF
    STA   $7B
    STA   $7C
L_00096E: ; 0x00096E, $D96E
    CLRA
    CLRB
    STD   $20
    STD   $22
    JSR   BANKSWITCH_TO_7
    JSR   PALETTE_ENTRY_0x6
    JSR   PALETTE_ENTRY_0x0
    JSR   CLEAR_GAME_SCREEN
    LDD   #$0300
    STD   $BD
    STD   $BB
    CLR   $AD
    CLR   $B5
    CLR   $8A
    CLR   $AF
    CLR   $9A
    CLR   $99
    LDX   #$A11A
    STX   $9B
    JSR   L_0006FE
    STX   $8D
    LDA   8,X
    ANDA  #$07
    LDU   #$DB53
    LDA   A,U
    STA   $2B
    DEC   7,X
    JSR   L_000665
    LDD   #$2080
    STD   $C1
    STD   $BF
    LDD   #$2000
    STD   $C3
    LDD   #$0800
    ADDD  $20
    STD   $CC
    LDD   #$8000
    STD   $C5
    CLRA
    CLRB
    STD   $C7
    STA   $C9
    STD   $CA
    LDX   #$E9E3
    LDA   #$00
    JSR   L_000055
    LDX   #$E782
    LDA   #$00
    JSR   L_000055
    LDX   #$F493
    LDA   #$00
    JSR   L_000055
    LDX   #$E9BF
    LDA   #$00
    JSR   L_000055
    LDX   #$F464
    LDA   #$00
    JSR   L_000055
    LDX   #$F43D
    LDA   #$00
    JSR   L_000055
    LDA   $25
    BEQ   L_000A1F
    LDB   $8C
    DECB
    BEQ   L_000A1F
    LDU   #$C0EF
    LDA   $8B
    DECA
    BEQ   L_000A11
    LDU   #$C0F1
L_000A11: ; 0x000A11, $DA11
    LDX   #$3C80
    JSR   PSH_ALL_GOTO_B2-C002
    LDA   #$80
    LDX   #$DA1F
    JMP   U=$63,A>U+4,X>U+2
L_000A1F: ; 0x000A1F, $DA1F
    JSR   CLEAR_GAME_SCREEN
    LDB   #$05
    LDX   $8D
    LDA   10,X
    BSR   L_000A3F
    LDA   #$60
    LDX   #$DA32
    JMP   U=$63,A>U+4,X>U+2
    JSR   L_000C1E
    BSR   L_000A3C
    CLR   $25
    JMP   L_000CD9
L_000A3C: ; 0x000A3C, $DA3C
    CLRB
L_000A3D: ; 0x000A3D, $DA3D
    LDA   $FA
L_000A3F: ; 0x000A3F, $DA3F
    BNE   L_000A43
    ORB   #$02
L_000A43: ; 0x000A43, $DA43
    STB   $BA
    RTS
L_000A46: ; 0x000A46, $DA46
    LDB   #$58
    BSR   L_000A3D
    LDD   $20
    STD   $22
    LDX   $BF
    LDD   #$0806
    JSR   SAVE_UXBA+BANK_UNK
    JSR   L_000BB6
    LDD   #$D4B5
    JSR   L_00054D
    LDY   #$F9C1
    LDA   $BB
    BPL   L_000A6B
    LDY   #$F9CB
L_000A6B: ; 0x000A6B, $DA6B
    LDX   #$DB4B
    STX   7,U
    LDU   #$AFDD
    JSR   L_000B5C
    TFR   U>X
    LDU   $63
    STX   11,U
    LDD   $C1
    LDY   11,U
    JSR   L_00257B
    LDA   #$02
    LDX   #$DA8C
    JMP   U=$63,A>U+4,X>U+2
    LDD   $C1
    LDY   11,U
    JSR   TEXT_CHAR_TO_SCREEN
    LDX   7,U
    LDA   X+
    BEQ   L_000AA8
    STA   $31
    CLR   $26
    STX   7,U
    LDA   #$02
    LDX   #$DA7C
    JMP   U=$63,A>U+4,X>U+2
L_000AA8: ; 0x000AA8, $DAA8
    LDA   #$7F
    STA   $BA
    LDA   #$FF
    STA   $26
    LDA   #$02
    LDX   #$DAB8
    JMP   U=$63,A>U+4,X>U+2
    CLR   $26
    JSR   FIND_IDK
    LDX   $C1
    LEAX  1027,X
    JSR   BANKSWITCH_TO_7
    JSR   PALETTE_ENTRY_0xE
    JSR   L_0003D9
    CLR   $B3
    LDB   #$13
    JSR   L_000539
    JSR   L_000DAE
    BNE   L_000ADE
    JSR   L_000DEC
    JSR   CLEAR_GAME_SCREEN
L_000ADE: ; 0x000ADE, $DADE
    LDA   $8B
    LDX   $8D
    LDB   7,X
    BNE   L_000B15
    LDB   $8C
    DECB
    BEQ   L_000B2C
    EORA  #$03
    JSR   L_00070D
    LDB   7,X
    BEQ   L_000B2C
    LDU   #$C0EF
    CMPA  #$02
    BEQ   L_000AFE
    LDU   #$C0F1
L_000AFE: ; 0x000AFE, $DAFE
    LDX   #$3C78
    JSR   PSH_ALL_GOTO_B2-C002
    LDU   #$C075
    LDX   #$3E88
    JSR   PSH_ALL_GOTO_B2-C002
    LDA   #$60
    LDX   #$DB15
    JMP   U=$63,A>U+4,X>U+2
L_000B15: ; 0x000B15, $DB15
    LDA   $8B
L_000B17: ; 0x000B17, $DB17
    INCA
    CMPA  $8C
    BLS   L_000B1E
    LDA   #$01
L_000B1E: ; 0x000B1E, $DB1E
    JSR   L_00070D
    LDB   7,X
    BEQ   L_000B17
    STA   $8B
    INC   $25
    JMP   L_000919
L_000B2C: ; 0x000B2C, $DB2C
    LDU   #$C075
    LDX   #$3E80
    LDA   #$FF
    STA   $BA
    JSR   PSH_ALL_GOTO_B2-C002
    CLR   $B3
    LDB   #$13
    JSR   L_000539
    LDA   #$28
    LDX   #$DB48
    JMP   U=$63,A>U+4,X>U+2
    JMP   L_000825
    ASR   $07
    ASR   $0F
    SWI1
    CLR   BANKSWITCH
    NEG   $81
    BVC   L_000B5E
    LBRA  R_0ADE
    .db $15 ; Not an inst, so data?
    .db $00
L_000B5C: ; 0x000B5C, $DB5C
    PSHS  U,X,B,A
L_000B5E: ; 0x000B5E, $DB5E
    JSR   BANKSWITCH_TO_2
    LDD   Y
    STD   U
    MUL
    LEAX  10,U
    STX   2,U
    LEAX  D,X
    STX   4,U
    PSHS  X
    LEAX  D,X
    PSHS  X
    LDD   6,Y
    STD   6,U
    LDD   8,Y
    STD   8,U
    LDX   2,Y
    LEAU  10,U
    BSR   L_000B90
    LDX   4,Y
    LDU   2,S
    LDD   S
    STD   2,S
    BSR   L_000B90
    LEAS  4,S
    PULS  A,B,X,U,PC
L_000B90: ; 0x000B90, $DB90
    LDD   X++
    BITA  #$F0
    BEQ   L_000B98
    ORA   #$F0
L_000B98: ; 0x000B98, $DB98
    BITA  #$0F
    BEQ   L_000B9E
    ORA   #$0F
L_000B9E: ; 0x000B9E, $DB9E
    BITB  #$F0
    BEQ   L_000BA4
    ORB   #$F0
L_000BA4: ; 0x000BA4, $DBA4
    BITB  #$0F
    BEQ   L_000BAA
    ORB   #$0F
L_000BAA: ; 0x000BAA, $DBAA
    ANDA  #$BB
    ANDB  #$BB
    STD   U++
    CMPU  4,S
    BLO   L_000B90
    RTS
L_000BB6: ; 0x000BB6, $DBB6
    PSHS  U,X,B,A
    LDU   $8D
    LEAU  10,U
    LDA   #$33
L_000BBE: ; 0x000BBE, $DBBE
    CLR   U+
    DECA
    BNE   L_000BBE
    LDU   $8D
    LDA   $FA
    STA   10,U
    LEAU  11,U
    LDX   #$A0FB
L_000BCE: ; 0x000BCE, $DBCE
    LDA   X+
    CMPX  #$A100
    BHI   L_000BD8
    ADDA  22,X
L_000BD8: ; 0x000BD8, $DBD8
    STA   U+
    CMPX  #$A112
    BNE   L_000BCE
    PULS  A,B,X,U,PC
L_000BE1: ; 0x000BE1, $DBE1
    PSHS  B,A
    STA   $74
L_000BE5: ; 0x000BE5, $DBE5
    JSR   L_000095
    ADCB  R_01ED
    NEG   R_6666
    JSR   L_000711
    LDD   $E0
    ANDA  #$1F
    ADDA  1,S
    STD   10,X
    LSRB
    BHS   L_000C01
    LDD   #$F915
    STD   2,X
L_000C01: ; 0x000C01, $DC01
    LDA   #$E0
    STA   12,X
    LDA   #$10
    STA   20,X
    CLRA
    CLRB
    STD   16,X
    STD   14,X
    STD   6,X
    STX   $65
    STX   Y++
    DEC   $74
    BNE   L_000BE5
    PULS  A,B,PC
    INC   $8E
    LDD   -31232,U
    JSR   L_000055
    LDU   #$A11A
    LEAY  U
    STU   7,X
L_000C2D: ; 0x000C2D, $DC2D
    CLR   U+
    CMPU  #$A142
    BNE   L_000C2D
    LDU   $8D
    LDA   10,U
    STA   $FA
    BEQ   L_000C5D
    CMPA  #$07
    BLS   L_000C51
    LSRA
    LSRA
    CLRB
L_000C44: ; 0x000C44, $DC44
    BSR   L_000BE1
    ADDB  #$40
    BNE   L_000C44
    ASLA
    ASLA
    NEGA
    ADDA  10,U
    BEQ   L_000C5D
L_000C51: ; 0x000C51, $DC51
    STA   $73
L_000C53: ; 0x000C53, $DC53
    LDB   $E0
    LDA   #$01
    BSR   L_000BE1
    DEC   $73
    BNE   L_000C53
L_000C5D: ; 0x000C5D, $DC5D
    LDU   $8D
    LEAU  11,U
    LDX   #$A0FB
L_000C64: ; 0x000C64, $DC64
    LDA   U+
    STA   X+
    CMPX  #$A112
    BNE   L_000C64
    LDX   #$A112
L_000C70: ; 0x000C70, $DC70
    CLR   X+
    CMPX  #$A11A
    BNE   L_000C70
L_000C77: ; 0x000C77, $DC77
    JSR   $67_PTR_STUFF
    LDA   $DF
    LSRA
    ADDA  #$2A
    STA   12,X
    JSR   L_000711
    ANDA  #$3F
    ADDA  #$80
    ADDD  $20
    STD   10,X
    LDA   $FF
    BEQ   L_000CA9
    CMPA  #$06
    BLS   L_000C96
    LDA   #$06
L_000C96: ; 0x000C96, $DC96
    LEAY  X
    JSR   L_001B9E
    LDX   $67
    STX   Y
    STY   $67
    NEGA
    ADDA  $FF
    STA   $FF
    BNE   L_000C77
L_000CA9: ; 0x000CA9, $DCA9
    LDA   $FE
    BEQ   L_000CB2
    JSR   L_001F15
    CLR   $FE
L_000CB2: ; 0x000CB2, $DCB2
    LDA   $FD
    STA   R_A114
    BEQ   L_000CBE
    CLR   $FD
    JSR   L_001B36
L_000CBE: ; 0x000CBE, $DCBE
    LDA   $FC
    STA   R_A113
    BEQ   L_000CD8
L_000CC5: ; 0x000CC5, $DCC5
    CMPA  #$03
    BLS   L_000CCB
    LDA   #$03
L_000CCB: ; 0x000CCB, $DCCB
    PSHS  A
    JSR   L_00229D
    LDA   $FC
    SUBA  S+
    STA   $FC
    BNE   L_000CC5
L_000CD8: ; 0x000CD8, $DCD8
    RTS
L_000CD9: ; 0x000CD9, $DCD9
    LDU   $63
    LDA   #$28
    STA   7,U
    LDA   R_A10F
    STA   R_A118
    LDA   #$01
    STA   R_A117
    LDA   $BA
    BITA  #$08
    BNE   L_000D6C
    JSR   L_000DAE
    BNE   L_000D09
    LDA   #$77
    STA   $BA
    JSR   FIND_IDK
    JSR   L_000BB6
    JSR   L_000DEC
    LDX   $8D
    INC   7,X
    JMP   L_00091E
L_000D09: ; 0x000D09, $DD09
    CMPA  #$08
    BHI   L_000D1F
    LDB   R_A10F
    LSRB
    CMPA  #$03
    BHI   L_000D16
    LSRB
L_000D16: ; 0x000D16, $DD16
    INCB
    CMPB  R_A118
    BHS   L_000D1F
    STB   R_A118
L_000D1F: ; 0x000D1F, $DD1F
    DEC   R_A118
    BNE   L_000D40
    CMPA  #$04
    LDA   R_A10F
    BHS   L_000D30
    LSRA
    LSRA
    JSR   L_000D9E
L_000D30: ; 0x000D30, $DD30
    STA   R_A118
    LDA   R_A119
    CMPA  #$0C
    BHS   L_000D40
    JSR   L_001A80
    INC   R_A119
L_000D40: ; 0x000D40, $DD40
    DEC   R_A117
    BEQ   L_000D4A
    LDA   R_A112
    BNE   L_000D6C
L_000D4A: ; 0x000D4A, $DD4A
    LDA   R_A100
    STA   R_A117
    LDA   $FB
    BEQ   L_000D6C
    LDA   R_A112
    CMPA  #$08
    BHS   L_000D6C
    LDA   R_A101
    CMPA  $FB
    BLS   L_000D64
    LDA   $FB
L_000D64: ; 0x000D64, $DD64
    JSR   L_001F9C
    NEGA
    ADDA  $FB
    STA   $FB
L_000D6C: ; 0x000D6C, $DD6C
    LDA   $AE
    CMPA  #$10
    BHS   L_000D74
    INC   $AE
L_000D74: ; 0x000D74, $DD74
    LDA   $24
    INCA
    CMPA  #$F0
    BLS   L_000D81
    LDB   #$06
    JSR   GOTO_B3-C00F
    CLRA
L_000D81: ; 0x000D81, $DD81
    STA   $24
    LDU   $63
    DEC   7,U
    BNE   L_000D96
    LDB   #$02
    LDY   #$A0FB
    JSR   L_000EEC
    LDA   #$28
    STA   7,U
L_000D96: ; 0x000D96, $DD96
    LDA   #$0F
    LDX   #$DCEA
    JMP   U=$63,A>U+4,X>U+2
L_000D9E: ; 0x000D9E, $DD9E
    PSHS  A
    JSR   L_000711
L_000DA3: ; 0x000DA3, $DDA3
    CMPA  S
    BLS   L_000DAA
    LSRA
    BRA   L_000DA3
L_000DAA: ; 0x000DAA, $DDAA
    INCA
    LEAS  1,S
    RTS
L_000DAE: ; 0x000DAE, $DDAE
    LDA   R_A112
    ADDA  $FB
    ADDA  R_A113
    ADDA  R_A114
    ADDA  R_A116
    ADDA  R_A115
    ADDA  $FE
    RTS
L_000DC2: ; 0x000DC2, $DDC2
    PSHS  B
    CLRB
L_000DC5: ; 0x000DC5, $DDC5
    CMPA  #$10
    BLO   L_000DCF
    ADDB  #$0A
    SUBA  #$10
    BRA   L_000DC5
L_000DCF: ; 0x000DCF, $DDCF
    PSHS  B
    ADDA  S+
    PULS  B,PC
L_000DD5: ; 0x000DD5, $DDD5
    PSHS  B
    TFR   A>B
    CLRA
L_000DDA: ; 0x000DDA, $DDDA
    CMPB  #$0A
    BLO   L_000DE5
    ADDA  #$10
    DAA
    SUBB  #$0A
    BRA   L_000DDA
L_000DE5: ; 0x000DE5, $DDE5
    PSHS  B
    ADDA  S+
    DAA
    PULS  B,PC
L_000DEC: ; 0x000DEC, $DDEC
    CLR   $26
    LDU   $63
    PULS  X
    STX   13,U
    JSR   CLEAR_GAME_SCREEN
    LDU   #$C0F9
    LDX   #$3850
    JSR   PSH_ALL_GOTO_B2-C002
    LDX   $8D
    LDA   8,X
    BSR   L_000DD5
    TFR   A>B
    CLRA
    LDX   SENTENCE_CURR_SCR_LOC_XXYY
    JSR   PALETTE_ENTRY_0xE
    LDX   #$3D60
    LDU   #$C0FB
    JSR   PSH_ALL_GOTO_B2-C002
    LDU   #$C0F3
    LDX   #$3C90
    JSR   PSH_ALL_GOTO_B2-C002
    LDX   $8D
    CLRB
    LDA   8,X
    CMPA  #$05
    BLS   L_000E2B
    LDA   #$05
L_000E2B: ; 0x000E2B, $DE2B
    LDX   SENTENCE_CURR_SCR_LOC_XXYY
    JSR   PALETTE_ENTRY_0xE
    LDU   $63
    LDX   #$3CA0
    LDA   $FA
    STA   9,U
    BEQ   L_000E6C
L_000E3B: ; 0x000E3B, $DE3B
    TFR   X>D
    LDY   #$F915
    JSR   TEXT_CHAR_TO_SCREEN
    LEAX  1024,X
    LDA   #$01
    LDY   $8D
    LDB   8,Y
    CMPB  #$05
    BLO   L_000E55
    LDB   #$05
L_000E55: ; 0x000E55, $DE55
    ASLB
    ASLB
    ASLB
    ASLB
    JSR   L_000360
    STX   7,U
    LDA   #$04
    LDX   #$DE66
    JMP   U=$63,A>U+4,X>U+2
    LDX   7,U
    DEC   9,U
    BNE   L_000E3B
L_000E6C: ; 0x000E6C, $DE6C
    LDX   $8D
    JSR   L_000E7C
    LDA   #$80
    LDX   #$DE79
    JMP   U=$63,A>U+4,X>U+2
    JMP   [13,U]
L_000E7C: ; 0x000E7C, $DE7C
    PSHS  U,X,B,A
    INC   8,X
    LDX   #$C49D
    JSR   GET_DATA_FROM_SRAM_@X
    STA   $73
    LDX   2,S
    TSTA
    BEQ   L_000E99
    LDA   8,X
L_000E8F: ; 0x000E8F, $DE8F
    SUBA  $73
    BLO   L_000E99
    BNE   L_000E8F
    LDA   #$0A
    STA   10,X
L_000E99: ; 0x000E99, $DE99
    JSR   BANKSWITCH_TO_7
    LDA   8,X
    PSHS  A
    CMPA  #$04
    BLS   L_000EA6
    LDA   #$04
L_000EA6: ; 0x000EA6, $DEA6
    LDU   $C011
    ADDA  #$03
    LEAX  11,X
L_000EAD: ; 0x000EAD, $DEAD
    LDB   A,U
    STB   X+
    LEAU  8,U
    CMPU  $C013
    BNE   L_000EAD
    PULS  A
    SUBA  #$04
    BHS   L_000EC0
    CLRA
L_000EC0: ; 0x000EC0, $DEC0
    STA   $73
    LDX   #$C497
    JSR   GET_DATA_FROM_SRAM@X_IN_AB
    JSR   L_000DC2
    ADDA  $73
    STA   $73
    BEQ   L_000EEA
    TFR   B>A
    JSR   L_000DC2
    CMPA  $73
    BHS   L_000EDC
    STA   $73
L_000EDC: ; 0x000EDC, $DEDC
    LDA   $73
L_000EDE: ; 0x000EDE, $DEDE
    LDB   #$03
    JSR   L_0006FE
    LEAY  11,X
    BSR   L_000EEC
    DECA
    BNE   L_000EDE
L_000EEA: ; 0x000EEA, $DEEA
    PULS  A,B,X,U,PC
L_000EEC: ; 0x000EEC, $DEEC
    PSHS  Y,X,A
    JSR   BANKSWITCH_TO_7
    LDX   $C011
L_000EF4: ; 0x000EF4, $DEF4
    LDA   B,X
    BMI   L_000F02
    ADDA  Y
    BLO   L_000F0C
    CMPA  X
    BHI   L_000F0C
    BRA   L_000F0A
L_000F02: ; 0x000F02, $DF02
    ADDA  Y
    BHS   L_000F0C
    CMPA  1,X
    BLO   L_000F0C
L_000F0A: ; 0x000F0A, $DF0A
    STA   Y
L_000F0C: ; 0x000F0C, $DF0C
    LEAY  1,Y
    LEAX  8,X
    CMPX  $C013
    BNE   L_000EF4
    PULS  A,X,Y,PC
    CLR   BANKSWITCH
    LDA   #$A0
    TFR   A>DP
    LDA   #$04
    STA   PIA_ROM_CTRL_B
    LDA   PIA_ROM_DATA_B
    LDA   VIDEO_COUNTER_BITS
    CMPA  #$80
    BLO   L_000F5D
    LDA   $92
    BNE   L_000FAC
    INC   $92
    JSR   L_000568
    JSR   L_001263
    JSR   L_00107E
    LDA   VIDEO_COUNTER_BITS
    SUBA  #$08
    CMPA  #$A8
    BLS   L_000F47
    LDA   #$A8
L_000F47: ; 0x000F47, $DF47
    STA   $A2
    LDA   #$02
    STA   BANKSWITCH
    LDD   $A2
    JSR   L_00139F
    LDD   $A2
    JSR   L_001213
    JSR   L_001453
    BRA   L_000FAC
L_000F5D: ; 0x000F5D, $DF5D
    LDB   $92
    BEQ   L_000FAC
    CLR   $92
    INC   $5D
    LDB   #$38
    STB   WATCHDOG
    CMPA  #$08
    BHI   L_000F89
    LDU   #$C010
    LDD   $30
    LDX   $32
    LDY   $34
    PSHU  Y,X,B,A
    LDD   $2A
    LDX   $2C
    LDY   $2E
    PSHU  Y,X,B,A
    LDD   $26
    LDX   $28
    PSHU  X,B,A
L_000F89: ; 0x000F89, $DF89
    JSR   L_0005FD
    LDA   #$07
    STA   BANKSWITCH
    LDA   $BA
    BITA  #$02
    BNE   L_000F9A
    JSR   PALETTE_ENTRY_0x3
L_000F9A: ; 0x000F9A, $DF9A
    LDA   #$02
    STA   BANKSWITCH
    LDD   $A1
    JSR   L_001213
    LDD   $A1
    JSR   L_00139F
    JSR   L_001376
L_000FAC: ; 0x000FAC, $DFAC
    ORCC  #$FF
    CLR   BANKSWITCH
    LDA   #$05
    STA   PIA_ROM_CTRL_B
    LDA   BANK_VAL_DP
    STA   BANKSWITCH
    LDA   S
    ANDA  #$6F
    STA   S
    PULS  CC,A,B,DP,X,Y,U,PC
    CLR   BANKSWITCH
    LDA   #$A0
    TFR   A>DP
    LDA   #$04
    STA   PIA_ROM_CTRL_B
    LDA   PIA_ROM_DATA_B
    LDA   VIDEO_COUNTER_BITS
    CMPA  #$58
    BLO   L_001005
    LDB   $92
    BNE   L_000FAC
    INC   $92
    COMA
    NOP
    STA   $A2
    JSR   L_0005FD
    LDA   #$07
    STA   BANKSWITCH
    LDA   $BA
    BITA  #$02
    BNE   L_000FF4
    JSR   PALETTE_ENTRY_0x3
L_000FF4: ; 0x000FF4, $DFF4
    LDA   #$02
    STA   BANKSWITCH
    LDD   $A1
    JSR   L_001213
    LDD   $A1
    JSR   L_00139F
    BRA   L_000FAC
L_001005: ; 0x001005, $E005
    LDB   $92
    BEQ   L_000FAC
    CLR   $92
    INC   $5D
    LDB   #$39
    STB   WATCHDOG
    CMPA  #$04
    BHI   L_001031
    LDU   #$C010
    LDD   $30
    LDX   $32
    LDY   $34
    PSHU  Y,X,B,A
    LDD   $2A
    LDX   $2C
    LDY   $2E
    PSHU  Y,X,B,A
    LDD   $26
    LDX   $28
    PSHU  X,B,A
L_001031: ; 0x001031, $E031
    JSR   L_000568
    JSR   L_001263
    JSR   L_00107E
    LDA   #$02
    STA   BANKSWITCH
    LDD   $A2
    JSR   L_001213
    LDD   $A2
    JSR   L_00139F
    JSR   L_001453
    JSR   L_001376
    JMP   L_000FAC
L_001052: ; 0x001052, $E052
    LDX   #$AF9D
    LDB   #$10
    STB   $AE
    CLRB
L_00105A: ; 0x00105A, $E05A
    JSR   L_000711
    CMPA  #$9C
    BHS   L_00105A
    STA   X
L_001063: ; 0x001063, $E063
    JSR   L_000711
    CMPA  #$A8
    BHI   L_001063
    CMPA  #$2A
    BLS   L_001063
    STA   1,X
    STB   2,X
    ADDB  #$11
    ANDB  #$77
    LEAX  4,X
    CMPX  #$AFDD
    BNE   L_00105A
L_00107D: ; 0x00107D, $E07D
    RTS
L_00107E: ; 0x00107E, $E07E
    LDA   $BA
    BITA  #$20
    BNE   L_00107D
    LDX   #$AF9D
    LDD   $20
    ANDB  #$80
    STD   $6F
    LDD   $22
    ANDB  #$80
    SUBD  $6F
    ASLB
    ROLA
    STA   $6F
    LDB   #$F0
    LDA   $21
    BITA  #$40
    BNE   L_0010A0
    COMB
L_0010A0: ; 0x0010A0, $E0A0
    STB   $71
    CLRA
    STA   [X]
    STA   [4,X]
    STA   [8,X]
    STA   [12,X]
    STA   [16,X]
    STA   [20,X]
    STA   [24,X]
    STA   [28,X]
    STA   [32,X]
    STA   [36,X]
    STA   [40,X]
    STA   [44,X]
    STA   [48,X]
    STA   [52,X]
    STA   [56,X]
    STA   [60,X]
    LDB   $AE
L_0010D4: ; 0x0010D4, $E0D4
    LDA   X
    ADDA  $6F
    CMPA  #$9C
    BLO   L_0010E6
    CMPA  #$C0
    BLS   L_0010E4
    LDA   #$9B
    BRA   L_0010E6
L_0010E4: ; 0x0010E4, $E0E4
    LDA   #$00
L_0010E6: ; 0x0010E6, $E0E6
    STA   X
    LDA   2,X
    ANDA  $71
    STA   [0,X]
    LEAX  4,X
    DECB
    BNE   L_0010D4
    LDB   $DF
    ANDB  #$3C
    LDX   #$AF9D
    ABX
    LDA   2,X
    ADDA  #$11
    ANDA  #$77
    STA   2,X
    LDA   $DF
    BITA  #$01
    BNE   L_001148
    CMPA  #$98
    BLO   L_001132
    LDU   #$A102
    LEAU  -74,U
    LDU   U
    CMPU  #$6245
    BEQ   L_001130
    TST   $BA
    BMI   L_001130
    CMPA  #$A0
    BLO   L_001130
    CMPA  #$A1
    BHS   L_001130
    LDB   $E1
    TFR   D>X
    LDB   $E0
    STB   X
L_001130: ; 0x001130, $E130
    SUBA  #$84
L_001132: ; 0x001132, $E132
    CLR   [0,X]
    STA   X
    LDA   $BA
    BITA  #$02
    BEQ   L_001148
    LDA   $E1
    ANDA  #$3F
    LDB   #$03
    MUL
    ADDB  #$2A
    STB   1,X
L_001148: ; 0x001148, $E148
    RTS
L_001149: ; 0x001149, $E149
    LDX   #$A162
    STX   $9F
L_00114E: ; 0x00114E, $E14E
    JSR   L_000711
    STA   32,X
    STA   X+
    CMPX  #$A183
    BNE   L_00114E
    RTS
L_00115C: ; 0x00115C, $E15C
    LDX   $9F
    LDU   $BF
    LEAU  -255,U
    LDD   X
    STD   U
    LDA   5,X
    LDB   9,X
    STD   2,U
    LDA   12,X
    STA   4,U
    LDA   $7B
    BITA  #$02
    BEQ   L_00119A
    LDA   3,X
    LDB   6,X
    STD   -255,U
    LDA   10,X
    STA   -253,U
    LDA   4,X
    LDB   7,X
    STD   -511,U
    LDA   11,X
    STA   -509,U
    LDA   8,X
    STA   -766,U
L_00119A: ; 0x00119A, $E19A
    RTS
L_00119B: ; 0x00119B, $E19B
    LDU   $9F
    LDX   $BF
    LEAX  2049,X
    PULU  A,B,Y
    STD   X
    STY   2,X
    PULU  A,B,Y
    STA   4,X
    LDA   $7B
    BITA  #$02
    BEQ   L_0011CC
    STB   257,X
    STY   258,X
    PULU  A,B,Y
    STY   513,X
    STA   515,X
    STB   770,X
L_0011CC: ; 0x0011CC, $E1CC
    RTS
L_0011CD: ; 0x0011CD, $E1CD
    LDU   $BF
    CLRB
    LDX   #$0000
    LEAY  X
    LEAU  2054,U
    PSHU  Y,X,B
    STX   257,U
    STB   259,U
    STX   513,U
    STB   515,U
    STB   770,U
    RTS
L_0011F0: ; 0x0011F0, $E1F0
    LDU   $BF
    CLRB
    LDX   #$0000
    LEAY  X
    LEAU  -250,U
    PSHU  Y,X,B
    STX   -255,U
    STB   -253,U
    STX   -511,U
    STB   -509,U
    STB   -766,U
    RTS
L_001213: ; 0x001213, $E213
    STA   $77
    LDA   $BA
    BITA  #$10
    BNE   L_001243
    LDA   $77
    CMPA  $C0
    BLS   L_001243
    CMPB  $C0
    BHI   L_001243
    LDA   $BD
    BMI   L_001231
    JSR   L_00125E
    JSR   L_0011F0
    BRA   L_001237
L_001231: ; 0x001231, $E231
    JSR   L_00125E
    JSR   L_0011CD
L_001237: ; 0x001237, $E237
    LDD   $BB
    STD   $BD
    BMI   L_001244
    JSR   L_00124A
    JSR   L_00115C
L_001243: ; 0x001243, $E243
    RTS
L_001244: ; 0x001244, $E244
    JSR   L_001258
    JMP   L_00119B
L_00124A: ; 0x00124A, $E24A
    LDY   #$F9C1
L_00124E: ; 0x00124E, $E24E
    LDA   $C4
    ASLA
    LDD   $C1
    STD   $BF
    JMP   L_00028E
L_001258: ; 0x001258, $E258
    LDY   #$F9CB
    BRA   L_00124E
L_00125E: ; 0x00125E, $E25E
    LDD   $BF
    JMP   L_0002DF
L_001263: ; 0x001263, $E263
    LDA   $BA
    BITA  #$40
    LBNE  L_001375
    CLR   $6F
    LDD   $C7
    COMA
    COMB
    ADDD  #$0001
    BPL   L_001278
    COM   $6F
L_001278: ; 0x001278, $E278
    ASLB
    ROLA
    ASLB
    ROLA
    ADDD  $C8
    STD   $C8
    LDA   $6F
    ADCA  $C7
    STA   $C7
    LDD   $C7
    LDA   $7B
    BITA  #$02
    BEQ   L_0012A0
    CLR   $6F
    LDD   $BD
    BPL   L_001296
    COM   $6F
L_001296: ; 0x001296, $E296
    ADDD  $C8
    STD   $C8
    LDA   $6F
    ADCA  $C7
    STA   $C7
L_0012A0: ; 0x0012A0, $E2A0
    LDD   $C7
    ASRA
    RORB
    ASRA
    RORB
    CLRA
    ASRB
    RORA
    STA   $94
    STB   $93
    LDA   $BD
    BMI   L_0012B8
    LDA   #$20
    TSTB
    BMI   L_0012BD
    BRA   L_0012C1
L_0012B8: ; 0x0012B8, $E2B8
    LDA   #$70
    TSTB
    BMI   L_0012C1
L_0012BD: ; 0x0012BD, $E2BD
    CLR   $94
    CLR   $93
L_0012C1: ; 0x0012C1, $E2C1
    LDB   $94
    ADDA  $93
    STA   $93
    SUBD  $C3
    BEQ   L_0012F1
    BLO   L_0012DF
    CMPD  #$0100
    BLS   L_0012F1
    LDD   #$0040
    STD   $95
    LDD   #$0100
    ADDD  $C3
    BRA   L_0012F7
L_0012DF: ; 0x0012DF, $E2DF
    CMPD  #$FF00
    BGT   L_0012F1
    LDD   #$FFC0
    STD   $95
    LDD   #$FF00
    ADDD  $C3
    BRA   L_0012F7
L_0012F1: ; 0x0012F1, $E2F1
    CLRA
    CLRB
    STD   $95
    LDD   $93
L_0012F7: ; 0x0012F7, $E2F7
    STD   $C3
    STA   $C1
    LDD   $20
    STD   $22
    LDD   $C7
    CMPD  #$0100
    BLT   L_00130A
    LDD   #$0100
L_00130A: ; 0x00130A, $E30A
    CMPD  #$FF00
    BGT   L_001313
    LDD   #$FF00
L_001313: ; 0x001313, $E313
    STD   $C7
    ADDD  $20
    SUBD  $95
    STD   $20
    LDD   $C3
    LSRA
    RORB
    LSRA
    RORB
    ANDB  #$E0
    ADDD  $20
    STD   $CC
    LDB   $C5
    LDA   $7D
    LSRA
    BLO   L_001337
    LDA   $7B
    BMI   L_001352
    LDD   #$0000
    BRA   L_00136D
L_001337: ; 0x001337, $E337
    CMPB  #$2B
    BLS   L_001375
    LDD   $CA
    BPL   L_00134D
    ADDD  #$FFF8
    CMPD  #$FE00
    BGE   L_00136D
    LDD   #$FE00
    BRA   L_00136D
L_00134D: ; 0x00134D, $E34D
    LDD   #$FF00
    BRA   L_00136D
L_001352: ; 0x001352, $E352
    CMPB  #$EE
    BHS   L_001375
    LDD   $CA
    BLE   L_001368
    ADDD  #$0008
    CMPD  #$0200
    BLS   L_00136D
    LDD   #$0200
    BRA   L_00136D
L_001368: ; 0x001368, $E368
    LDD   #$0100
    BRA   L_00136D
L_00136D: ; 0x00136D, $E36D
    STD   $CA
    ADDD  $C5
    STD   $C5
    STA   $C2
L_001375: ; 0x001375, $E375
    RTS
L_001376: ; 0x001376, $E376
    LDA   $BA
    BITA  #$20
    BNE   L_00139E
    LDX   #$A065
    BRA   L_00139A
L_001381: ; 0x001381, $E381
    LDD   10,X
    ADDD  14,X
    STD   10,X
    LDD   12,X
    ADDD  16,X
    CMPA  #$2A
    BHS   L_001392
    LDA   #$F0
L_001392: ; 0x001392, $E392
    CMPA  #$F0
    BLS   L_001398
    LDA   #$2A
L_001398: ; 0x001398, $E398
    STD   12,X
L_00139A: ; 0x00139A, $E39A
    LDX   X
    BNE   L_001381
L_00139E: ; 0x00139E, $E39E
    RTS
L_00139F: ; 0x00139F, $E39F
    PSHS  B,A
    LDA   $BA
    BITA  #$20
    BNE   L_0013F1
    LDX   #$A065
    BRA   L_0013ED
L_0013AC: ; 0x0013AC, $E3AC
    LDD   4,X
    BEQ   L_0013C2
    CMPB  S
    BHI   L_0013ED
    CMPB  1,S
    BLS   L_0013ED
    LDY   2,X
    JSR   [8,Y]
    CLRA
    CLRB
    STD   4,X
L_0013C2: ; 0x0013C2, $E3C2
    LDB   12,X
    CMPB  S
    BHI   L_0013ED
    CMPB  1,S
    BLS   L_0013ED
    LDD   10,X
    SUBD  $20
    CMPD  #$2580
    BHS   L_0013ED
    LDY   2,X
    ASLB
    ROLA
    ASLB
    ROLA
    ADDA  Y
    CMPA  #$9C
    BHI   L_0013ED
    SUBA  Y
    ASLB
    LDB   12,X
    STD   4,X
    JSR   [6,Y]
L_0013ED: ; 0x0013ED, $E3ED
    LDX   X
    BNE   L_0013AC
L_0013F1: ; 0x0013F1, $E3F1
    PULS  A,B,PC
L_0013F3: ; 0x0013F3, $E3F3
    PSHS  U,Y,B,A
    LDA   $99
    CMPA  #$14
    BHS   L_00144A
    LDD   10,X
    SUBD  $20
    CMPD  #$2580
    BHS   L_00144A
    ASLB
    ROLA
    ASLB
    ROLA
    LDB   12,X
    CMPB  #$2A
    BLS   L_00144A
    LDX   $67
    BEQ   L_00144A
    STD   4,X
    STD   10,X
    EXG   A-B
    STD   12,X
    STU   6,X
    CLRA
    CLRB
    STD   14,X
    STD   16,X
    LDU   6,S
    PULU  A,B,Y
    STD   18,X
    STY   2,X
    PULU  A,B
    STU   6,S
    STD   8,X
    LDA   #$14
    STA   21,X
    STA   22,X
    LDD   X
    STD   $67
    LDD   $6D
    STD   X
    INC   $99
    STX   $6D
    PULS  A,B,Y,U,PC
L_00144A: ; 0x00144A, $E44A
    LDU   6,S
    LEAU  6,U
    STU   6,S
    CLRA
    PULS  A,B,Y,U,PC
L_001453: ; 0x001453, $E453
    LDA   $BA
    BITA  #$20
    BNE   L_001497
    LDD   $20
    ANDB  #$E0
    STD   $9D
    LDD   $22
    ANDB  #$E0
    SUBD  $9D
    ASLB
    ROLA
    ASLB
    ROLA
    STD   $9D
    LDX   #$A06D
    BRA   L_001493
L_001470: ; 0x001470, $E470
    LDY   4,X
    LDD   16,X
    ADDD  12,X
    CMPA  #$2A
    BLS   L_0014C6
    STD   12,X
    LDD   14,X
    ADDD  $9D
    ADDD  10,X
    CMPA  #$98
    BHS   L_0014C6
    STD   10,X
    LDB   12,X
    STD   4,X
    LDU   4,X
    JMP   [18,X]
L_001493: ; 0x001493, $E493
    LDX   X
    BNE   L_001470
L_001497: ; 0x001497, $E497
    RTS
    LDU   $A6
    LDB   11,X
    BPL   L_0014A0
    LEAU  6,U
L_0014A0: ; 0x0014A0, $E4A0
    LDD   #$0000
    STD   Y
    STA   2,Y
    STD   256,Y
    STA   258,Y
    LDY   4,X
    LDD   U
    STD   Y
    LDD   2,U
    STA   2,Y
    STB   256,Y
    LDD   4,U
    STD   257,Y
    BRA   L_001493
L_0014C6: ; 0x0014C6, $E4C6
    CLRA
    CLRB
    STA   22,X
    STD   Y
    STA   2,Y
    STD   256,Y
    STA   258,Y
    BRA   L_001493
    LDU   $A8
    LDB   11,X
    ASLB
    LDD   #$0000
    STD   Y
    STA   2,Y
    STD   256,Y
    STA   258,Y
    LDY   4,X
    BLO   L_001507
    LDD   U
    ANDA  #$0F
    STD   Y
    LDD   2,U
    ANDA  #$0F
    STA   2,Y
    ANDB  #$F0
    STB   257,Y
    JMP   L_001493
L_001507: ; 0x001507, $E507
    LDD   U
    ANDB  #$0F
    STB   1,Y
    ANDA  #$F0
    STA   258,Y
    LDD   2,U
    ANDA  #$F0
    STD   256,Y
    JMP   L_001493
    LDD   #$0025
    JSR   L_000360
    DEC   $99
    JSR   L_0000F2
    JSR   L_0023FE
    LDD   10,X
    LSRA
    RORB
    LSRA
    RORB
    ADDD  $20
    STD   10,X
    LDA   12,X
    SUBA  #$02
    STA   12,X
    LDD   #$F951
    STD   2,X
    JSR   L_002C63
    LDD   #$D4E4
    JMP   L_00054D
    .db $5E ; Data?
L_00154B: ; 0x00154B, $E54B
    LDX   #$A1A2
    STX   $A8
L_001550: ; 0x001550, $E550
    LDB   #$0A
    JSR   L_000711
    BMI   L_001559
    LDB   #$09
L_001559: ; 0x001559, $E559
    LSRA
    BLO   L_001560
    ADDB  #$A0
    BRA   L_001562
L_001560: ; 0x001560, $E560
    ADDB  #$90
L_001562: ; 0x001562, $E562
    STB   X+
    CMPX  #$A1C2
    BNE   L_001550
    RTS
L_00156A: ; 0x00156A, $E56A
    LDX   #$A06D
    BRA   L_00158A
L_00156F: ; 0x00156F, $E56F
    LDA   22,X
    BEQ   L_001579
    DEC   21,X
    BNE   L_00158A
L_001579: ; 0x001579, $E579
    LDU   X
    STU   Y
    LDU   $67
    STU   X
    STX   $67
    JSR   L_0023FE
    DEC   $99
    LEAX  Y
L_00158A: ; 0x00158A, $E58A
    LEAY  X
    LDX   X
    BNE   L_00156F
    RTS
    LDA   $B5
    CMPA  #$04
    BHS   L_0015A8
    INC   $B5
    LDD   #$D51B
    JSR   L_00054D
    LDX   $C1
    LDA   $BB
    BPL   L_0015C1
    JMP   L_001630
L_0015A8: ; 0x0015A8, $E5A8
    JMP   L_00000A
L_0015AB: ; 0x0015AB, $E5AB
    PSHS  U,B,A
    LDA   #$02
    STA   BANK_VAL_DP
    STA   BANKSWITCH
    PULS  A,B
    NOP ; Removed something?
    NOP
    NOP
    LDU   #$F96F
    JSR   L_0016BA
    PULS  U,PC
L_0015C1: ; 0x0015C1, $E5C1
    LEAX  1796,X
    STX   7,U
    STX   9,U
    STX   11,U
    LDA   $BA
    BITA  #$40
    BNE   L_001621
    LDA   #$04
    LDX   7,U
    LDB   #$11
    CMPX  #$9800
    BHS   L_001621
L_0015DC: ; 0x0015DC, $E5DC
    STB   X
    LEAX  256,X
    DECA
    BNE   L_0015DC
    LDB   #$99
    STB   X
    STX   7,U
    LDY   $A4
    CMPY  #$A15F
    BLO   L_0015F8
    LDY   #$A142
L_0015F8: ; 0x0015F8, $E5F8
    LDX   9,U
    LDA   #$03
L_0015FC: ; 0x0015FC, $E5FC
    LDB   Y+
    STB   X
    LEAX  256,X
    DECA
    BNE   L_0015FC
    STY   $A4
    STX   9,U
    CLR   [11,U]
    INC   11,U
    LDD   7,U
    SUBA  #$06
    BSR   L_0015AB
    BNE   L_001621
    LDA   #$01
    LDX   #$E5CB
    JMP   U=$63,A>U+4,X>U+2
L_001621: ; 0x001621, $E621
    LDX   11,U
    CLRA
L_001624: ; 0x001624, $E624
    STA   X
    LEAX  256,X
    CMPX  7,U
    BLS   L_001624
    BRA   L_00169A
L_001630: ; 0x001630, $E630
    LEAX  4,X
    STX   7,U
    STX   9,U
    STX   11,U
    LDA   $BA
    BITA  #$40
    BNE   L_00168D
    LDA   #$04
    LDX   7,U
    LDB   #$11
    CMPX  #$0500
    BLS   L_00168D
L_001649: ; 0x001649, $E649
    STB   X
    LEAX  -256,X
    DECA
    BNE   L_001649
    LDB   #$99
    STB   X
    STX   7,U
    LDY   $A4
    CMPY  #$A15F
    BLO   L_001665
    LDY   #$A142
L_001665: ; 0x001665, $E665
    LDX   9,U
    LDA   #$03
L_001669: ; 0x001669, $E669
    LDB   Y+
    STB   X
    LEAX  -256,X
    DECA
    BNE   L_001669
    STY   $A4
    STX   9,U
    CLR   [11,U]
    DEC   11,U
    LDD   7,U
    JSR   L_0015AB
    BNE   L_00168D
    LDA   #$01
    LDX   #$E638
    JMP   U=$63,A>U+4,X>U+2
L_00168D: ; 0x00168D, $E68D
    LDX   11,U
    CLRA
L_001690: ; 0x001690, $E690
    STA   X
    LEAX  -256,X
    CMPX  7,U
    BHS   L_001690
L_00169A: ; 0x00169A, $E69A
    DEC   $B5
    JMP   L_00000A
L_00169F: ; 0x00169F, $E69F
    LDX   #$A142
    STX   $A4
L_0016A4: ; 0x0016A4, $E6A4
    JSR   L_000711
    CLRB
    LSRA
    BHS   L_0016AD
    ADDB  #$01
L_0016AD: ; 0x0016AD, $E6AD
    LSRA
    BHS   L_0016B2
    ADDB  #$10
L_0016B2: ; 0x0016B2, $E6B2
    STB   X+
    CMPX  #$A162
    BNE   L_0016A4
    RTS
L_0016BA: ; 0x0016BA, $E6BA
    LDX   #$A065
L_0016BD: ; 0x0016BD, $E6BD
    STD   $D6
    ADDD  U
    STD   $D8
    BRA   L_0016DC
L_0016C5: ; 0x0016C5, $E6C5
    LDD   4,X
    BEQ   L_0016DC
    CMPA  $D8
    BHS   L_0016DC
    CMPB  $D9
    BHS   L_0016DC
    ADDD  [2,X]
    CMPA  $D6
    BLS   L_0016DC
    CMPB  $D7
    BHI   L_0016E1
L_0016DC: ; 0x0016DC, $E6DC
    LDX   X
    BNE   L_0016C5
    RTS
L_0016E1: ; 0x0016E1, $E6E1
    STU   $DC
    LDY   2,X
    SUBD  Y
    STD   $73
    CLRA
    CLRB
    STD   $D0
    STD   $D2
    LDD   $73
    SUBB  $D7
    BHI   L_0016FB
    NEGB
    STB   $D1
    BRA   L_0016FD
L_0016FB: ; 0x0016FB, $E6FB
    STB   $D3
L_0016FD: ; 0x0016FD, $E6FD
    SUBA  $D6
    BHI   L_001706
    NEGA
    STA   $D0
    BRA   L_001708
L_001706: ; 0x001706, $E706
    STA   $D2
L_001708: ; 0x001708, $E708
    LDD   $73
    ADDD  Y
    SUBB  $D9
    BHI   L_001711
    CLRB
L_001711: ; 0x001711, $E711
    SUBA  $D8
    BHI   L_001716
    CLRA
L_001716: ; 0x001716, $E716
    STD   $DA
    LDD   Y
    SUBD  $D0
    SUBD  $DA
    STD   $CE
    LDA   1,U
    STA   $D5
    LDB   $D2
    MUL
    LDU   2,U
    LEAU  D,U
    LDA   1,Y
    STA   $D4
    LDY   2,Y
    LDB   $D0
    MUL
    LEAY  D,Y
    LDA   $D1
    LEAY  A,Y
    LDA   $D3
    LEAU  A,U
L_00173F: ; 0x00173F, $E73F
    LDB   $CF
    DECB
L_001742: ; 0x001742, $E742
    LDA   B,U
    BEQ   L_001770
    LDA   B,Y
    BEQ   L_001770
    LEAY  B,Y
    TFR   Y>D
    LDU   2,X
    SUBD  2,U
    LDY   4,X
L_001755: ; 0x001755, $E755
    SUBB  1,U
    SBCA  #$00
    BLO   L_001761
    LEAY  256,Y
    BRA   L_001755
L_001761: ; 0x001761, $E761
    ADDB  1,U
    ADCA  #$00
    LEAY  B,Y
    STY   $F8
    JSR   [8,X]
    LDA   #$01
    RTS
L_001770: ; 0x001770, $E770
    DECB
    BPL   L_001742
    LDD   $D4
    LEAY  A,Y
    LEAU  B,U
    DEC   $CE
    BNE   L_00173F
    LDU   $DC
    JMP   L_0016DC
L_001782: ; 0x001782, $E782
    CLR   $B6
    LDX   #$E799
    LDA   $B6
    LDB   A,X
    BEQ   L_001782
    INC   $B6
    STB   $27
    LDA   #$02
    LDX   #$E784
    JMP   U=$63,A>U+4,X>U+2
    .db $38
    .db $39
    .db $3A
    .db $3B
    .db $3C
    .db $3D
    .db $3E
    .db $3F
    .db $37
    .db $2F
    .db $27
    .db $1F
    .db $17
    .db $47
    .db $47
    .db $87
    .db $87
    .db $C7
    .db $C7
    .db $C6
    .db $C5
    .db $CC
    .db $CB
    .db $CA
    .db $DA
    .db $E8
    .db $F8
    .db $F9
    .db $FA
    .db $FB
    .db $FD
    .db $FF
    .db $BF
    .db $3F
    .db $3E
    .db $3C
    .db $00
L_0017BE: ; 0x0017BE, $E7BE
    LDX   #$A05F
    STX   $63
L_0017C3: ; 0x0017C3, $E7C3
    LDA   $5D
    BEQ   L_0017C3
    CLR   $5D
    LDB   $BA
    BITB  #$7D
    BEQ   L_0017D3
    CLR   $5E
    BRA   L_00181A
L_0017D3: ; 0x0017D3, $E7D3
    ASLA
    ADDA  $5E
    SUBA  #$04
    BPL   L_0017DB
    CLRA
L_0017DB: ; 0x0017DB, $E7DB
    STA   $5E
    CMPA  #$02
    BLO   L_00181A
    LDB   #$03
    STB   $AE
    CMPA  #$02
    BLS   L_00181A
    LDA   #$02
    STA   $5E
L_0017ED: ; 0x0017ED, $E7ED
    LDY   #$A065
L_0017F1: ; 0x0017F1, $E7F1
    LDX   Y
    BEQ   L_00181A
    LDA   20,X
    BEQ   L_0017FE
    LEAY  X
    BRA   L_0017F1
L_0017FE: ; 0x0017FE, $E7FE
    LDU   X
    STU   Y
    LDD   $DF
    ANDA  #$3F
    ADDA  #$60
    ADDD  10,X
    STD   10,X
    JSR   L_0023FE
    LDD   #$0000
    STD   4,X
    LDU   $6B
    STX   $6B
    STU   X
L_00181A: ; 0x00181A, $E81A
    LDA   #$02
    STA   BANK_VAL_DP
    STA   BANKSWITCH
    BSR   L_001861
    JSR   L_002C66
    JSR   L_000711
L_001829: ; 0x001829, $E829
    LDX   $82
    BNE   L_001839
    LDX   $86
    BEQ   L_001848
    LDD   $88
    CLR   $86
    CLR   $87
    BRA   L_00183F
L_001839: ; 0x001839, $E839
    LDD   $84
    CLR   $82
    CLR   $83
L_00183F: ; 0x00183F, $E83F
    ANDB  $BA
    BNE   L_001829
    JSR   L_000055
    BRA   L_001829
L_001848: ; 0x001848, $E848
    LDU   #$A05F
    BRA   L_001856
L_00184D: ; 0x00184D, $E84D
    DEC   4,U
    BNE   L_001856
    STU   $63
    JMP   [2,U]
L_001856: ; 0x001856, $E856
    LDU   U
    BNE   L_00184D
    LDS   #$BFFF
    JMP   L_0017BE
L_001861: ; 0x001861, $E861
    LDA   $BA
    BITA  #$10
    BNE   L_001894
    LDD   $BF
    LDU   #$F9C1
    TST   $BD
    BPL   L_001873
    LDU   #$F9CB
L_001873: ; 0x001873, $E873
    PSHS  U,B,A
    INC   $DE
    JSR   L_0016BA
    PULS  A,B,U
    BNE   L_001886
    LDX   #$A06D
    JSR   L_0016BD
    BEQ   L_001894
L_001886: ; 0x001886, $E886
    LDX   #$DA46
    LDA   #$00
    JSR   L_000055
    LDA   $BA
    ORA   #$08
    STA   $BA
L_001894: ; 0x001894, $E894
    CLR   $DE
    RTS
    LDA   $AF
    BNE   L_0018BE
    INC   $AF
    LDD   $BD
    COMB
    COMA
    ADDD  #$0001
    STD   $BB
L_0018A6: ; 0x0018A6, $E8A6
    LDA   #$02
    LDX   #$E8AE
    JMP   U=$63,A>U+4,X>U+2
    LDA   $7B
    BITA  #$40
    BNE   L_0018A6
    LDA   #$05
    LDX   #$E8BC
    JMP   U=$63,A>U+4,X>U+2
    CLR   $AF
L_0018BE: ; 0x0018BE, $E8BE
    JMP   L_00000A
    LDA   $9A
    BNE   L_00191C
    LDX   $8D
    LDA   9,X
    BEQ   L_00191C
    INC   $9A
    DEC   9,X
    JSR   L_000680
    LDD   #$D4D2
    JSR   L_00054D
L_0018D8: ; 0x0018D8, $E8D8
    LDX   $65
L_0018DA: ; 0x0018DA, $E8DA
    BEQ   L_0018F0
    LDD   4,X
    BEQ   L_0018EC
    LDA   20,X
    CMPA  #$02
    BHS   L_0018EC
    JSR   [8,X]
    BRA   L_0018D8
L_0018EC: ; 0x0018EC, $E8EC
    LDX   X
    BRA   L_0018DA
L_0018F0: ; 0x0018F0, $E8F0
    LDU   $63
    LDA   #$04
    STA   7,U
L_0018F6: ; 0x0018F6, $E8F6
    COM   $26
    LDA   #$02
    LDX   #$E900
    JMP   U=$63,A>U+4,X>U+2
    DEC   7,U
    BNE   L_0018F6
L_001904: ; 0x001904, $E904
    LDA   #$0A
    LDX   #$E90C
    JMP   U=$63,A>U+4,X>U+2
    LDA   $7B
    BITA  #$04
    BNE   L_001904
    LDA   #$0A
    LDX   #$E91A
    JMP   U=$63,A>U+4,X>U+2
    CLR   $9A
L_00191C: ; 0x00191C, $E91C
    JMP   L_00000A
    LDA   $BA
    BITA  #$FD
    LBNE  L_0019BC
    LDA   #$77
    STA   $BA
    JSR   CLEAR_GAME_SCREEN
    LDA   #$0F
    LDX   #$E936
    JMP   U=$63,A>U+4,X>U+2
L_001936: ; 0x001936, $E936
    LDX   $6D
    BEQ   L_00193F
    JSR   L_0000F2
    BRA   L_001936
L_00193F: ; 0x00193F, $E93F
    CLR   $99
    LDD   $DF
    STD   $20
    STD   $22
    LSRB
    BHS   L_001952
    LDD   #$2000
    LDX   #$0300
    BRA   L_001958
L_001952: ; 0x001952, $E952
    LDX   #$FD00
    LDD   #$7000
L_001958: ; 0x001958, $E958
    STD   $C3
    STX   $BB
    LDB   $E0
    LSRB
    ADDB  #$2A
    STB   $C5
    STD   $C1
    CLRA
    CLRB
    STA   $C9
    STD   $C7
    STD   $CA
    JSR   GOTO_B7-C000
    LDB   #$50
    JSR   L_000A3D
    JSR   L_000095
    ADCB  $C1ED
    CMPX  R_0000
    LDD   #$0000
    STD   14,X
    STD   16,X
    LDD   $C5
    STD   12,X
    LDD   $C3
    LSRA
    RORB
    LSRA
    RORB
    ADDD  $20
    STD   10,X
    LDA   $BB
    BPL   L_00199D
    LDU   #$F9CB
    STU   2,X
L_00199D: ; 0x00199D, $E99D
    LDU   $63
    STX   7,U
    JSR   L_002C60
    LDA   #$28
    LDX   #$E9AC
    JMP   U=$63,A>U+4,X>U+2
    LDX   7,U
    JSR   L_0023FB
    JSR   L_000A3C
    LDA   $E1
    CMPA  #$C0
    LBHI  L_000A46
L_0019BC: ; 0x0019BC, $E9BC
    JMP   L_00000A
    LDX   $9F
    LEAX  1,X
    CMPX  #$A182
    BLS   L_0019CB
    LDX   #$A162
L_0019CB: ; 0x0019CB, $E9CB
    STX   $9F
    LDX   $A8
    LEAX  1,X
    CMPX  #$A1BA
    BLS   L_0019D9
    LDX   #$A1A2
L_0019D9: ; 0x0019D9, $E9D9
    STX   $A8
    LDA   #$04
    LDX   #$E9BF
    JMP   U=$63,A>U+4,X>U+2
    JSR   L_001A33
    LDA   #$02
    LDX   #$E9EE
    JMP   U=$63,A>U+4,X>U+2
    JSR   L_001A0A
    JSR   L_00156A
    LDA   #$02
    LDX   #$E9FC
    JMP   U=$63,A>U+4,X>U+2
    JSR   BANKSWITCH_TO_1
    JSR   PALETTE_ENTRY_0x3
    LDA   #$04
    LDX   #$E9E3
    JMP   U=$63,A>U+4,X>U+2
L_001A0A: ; 0x001A0A, $EA0A
    LDD   $20
    SUBD  #$0C80
    STD   $73
    LDX   #$A065
    BRA   L_001A2C
L_001A16: ; 0x001A16, $EA16
    LDD   10,X
    SUBD  $73
    CMPD  #$3E80
    BLO   L_001A2C
    LDU   X
    STU   Y
    LDU   $6B
    STU   X
    STX   $6B
    LEAX  Y
L_001A2C: ; 0x001A2C, $EA2C
    LEAY  X
    LDX   X
    BNE   L_001A16
    RTS
L_001A33: ; 0x001A33, $EA33
    LDD   $20
    SUBD  #$0C80
    STD   $73
    LDX   #$A06B
    BRA   L_001A78
L_001A3F: ; 0x001A3F, $EA3F
    LDD   16,X
    ASLB
    ROLA
    ASLB
    ROLA
    ASLB
    ROLA
    ADDD  12,X
    CMPA  #$2A
    BHS   L_001A50
    LDA   #$F0
L_001A50: ; 0x001A50, $EA50
    CMPA  #$F0
    BLS   L_001A56
    LDA   #$2A
L_001A56: ; 0x001A56, $EA56
    STD   12,X
    LDD   14,X
    ASLB
    ROLA
    ASLB
    ROLA
    ASLB
    ROLA
    ADDD  10,X
    STD   10,X
    SUBD  $73
    CMPD  #$3E80
    BHS   L_001A78
    LDU   X
    STU   Y
    LDU   $65
    STU   X
    STX   $65
    LEAX  Y
L_001A78: ; 0x001A78, $EA78
    LEAY  X
    LDX   X
    BNE   L_001A3F
    RTS
    NEGA
L_001A80: ; 0x001A80, $EA80
    LDX   #$EAB4
    LDA   #$00
    JSR   L_000055
    LEAU  X
    JSR   L_000095
    .db $F9
    .db $A3
    .db $EB
    .db $2B
    .db $33
    .db $33
    STX   7,U
    STU   6,X
    LDD   $DF
    ANDA  #$1F
    ADDD  $20
    STD   10,X
    LSRB
    ADDB  #$2A
    STB   12,X
    CLRA
    CLRB
    STD   16,X
    STD   14,X
    LDA   #$08
    STA   9,U
    BSR   L_001AF5
    JMP   L_002C60
    LDX   7,U
    LDD   2,X
    CMPD  #$F8EC
    BEQ   L_001AE6
    DEC   9,U
    BNE   L_001AD5
    LDA   R_A110
    JSR   L_000D9E
    STA   9,U
    JSR   L_001EBA
    BEQ   L_001AD5
    LDD   #$D52F
    JSR   L_00054D
L_001AD5: ; 0x001AD5, $EAD5
    LDU   2,X
    LEAU  10,U
    CMPU  #$F9B7
    BLS   L_001AE4
    LDU   #$F9A3
    BSR   L_001AEE
L_001AE4: ; 0x001AE4, $EAE4
    STU   2,X
L_001AE6: ; 0x001AE6, $EAE6
    LDA   #$06
    LDX   #$EAB4
    JMP   U=$63,A>U+4,X>U+2
L_001AEE: ; 0x001AEE, $EAEE
    LDA   $DF
    CMPA  R_A111
    BLS   L_001B2A
L_001AF5: ; 0x001AF5, $EAF5
    LDD   #$4001
    STD   $73
    LDD   10,X
    SUBD  $CC
    BMI   L_001B02
    NEG   $73
L_001B02: ; 0x001B02, $EB02
    ADDD  #$0280
    CMPD  #$0500
    BLS   L_001B12
    LDB   $73
    SEX
    ADDD  $C7
    STD   14,X
L_001B12: ; 0x001B12, $EB12
    LDA   12,X
    SUBA  $C0
    BMI   L_001B1A
    NEG   $74
L_001B1A: ; 0x001B1A, $EB1A
    ADDA  #$0A
    CMPA  #$14
    BLS   L_001B2A
    CLRB
    LDA   $74
    ADDD  $CA
    ASRA
    RORB
    STD   16,X
L_001B2A: ; 0x001B2A, $EB2A
    RTS
    DEC   R_A119
    JSR   L_002416
    .db $01 ; Illegal instruction. 1 byte.
    .db $20
    .db $D4
    .db $FD
    .db $39
L_001B36: ; 0x001B36, $EB36
    STA   $73
L_001B38: ; 0x001B38, $EB38
    JSR   L_000095
    EORB  $F7EB
    LSR   $CCCC
    JSR   L_000711
    LDD   $E0
    ANDA  #$3F
    ADDA  #$10
    STD   10,X
    LSRB
    ADDB  #$2A
    STB   12,X
    LDB   $DF
    ANDB  #$3F
    ADDB  #$E0
    SEX
    STD   14,X
    LDB   $E1
    ANDB  #$7F
    SUBB  #$40
    SEX
    BMI   L_001B67
    ORB   #$20
    BRA   L_001B69
L_001B67: ; 0x001B67, $EB67
    ANDB  #$DF
L_001B69: ; 0x001B69, $EB69
    STD   16,X
    JSR   L_002C60
    DEC   $73
    BNE   L_001B38
    RTS
    JSR   L_00241D
    .db $02
    .db $10
    .db $D4
    .db $F3
    LDA   #$06
    JSR   L_000D9E
    LEAY  X
    JSR   L_001B9E
    DEC   R_A114
    RTS
L_001B89: ; 0x001B89, $EB89
    JSR   L_000711
    LDB   $DF
    SEX
    ASLB
    ROLA
    STD   16,X
    LDB   $E1
    ANDB  #$3F
    ADDB  #$E0
    SEX
    STD   14,X
    RTS
L_001B9E: ; 0x001B9E, $EB9E
    PSHS  U,Y,X,B,A
    STA   $73
L_001BA2: ; 0x001BA2, $EBA2
    LDA   R_A116
    INCA
    CMPA  #$14
    BHI   L_001BE7
    STA   R_A116
L_001BAD: ; 0x001BAD, $EBAD
    LDX   #$EC17
L_001BB0: ; 0x001BB0, $EBB0
    LDA   #$00
    JSR   L_000055
    LEAU  X
    JSR   L_000095
    ADCB  R_7BEB
    ADCB  4,Y
    BHS   L_001BAD
    BPL   L_001BB0
    DEC   $EC
    BGE   L_001BB4
    INC   $AF
    ASRA
    STU   6,X
    BSR   L_001B89
    LDD   $E0
    ANDB  R_A10E
    STB   9,U
    ANDA  #$1F
    STA   4,U
    LDA   R_A10D
    JSR   L_000D9E
    STA   11,U
    STX   $65
    DEC   $73
    BNE   L_001BA2
L_001BE7: ; 0x001BE7, $EBE7
    PULS  A,B,X,Y,U,PC
    DEC   R_A116
    JSR   L_0023FB
    PSHS  X
    JSR   LIST_FIND_IN_X
    PULS  X
    LDD   10,X
    SUBD  #$0040
    STD   10,X
    LDD   12,X
    SUBA  #$02
    STA   12,X
    LDU   #$F8E2
    STU   2,X
    JSR   L_002C63
    LDD   #$0115
    JSR   L_000360
    LDD   #$D516
    JMP   L_00054D
L_001C17: ; 0x001C17, $EC17
    LDX   7,U
    LDB   R_A10C
    LDY   $CC
    CMPY  10,X
    BHS   L_001C25
    NEGB
L_001C25: ; 0x001C25, $EC25
    SEX
    STD   14,X
    BRA   L_001C7E
    LDB   9,U
    LDX   7,U
    LDA   $C0
    CMPA  12,X
    BHI   L_001C35
    NEGB
L_001C35: ; 0x001C35, $EC35
    SEX
    ADDD  16,X
    CMPD  #$0200
    BLT   L_001C42
    LDD   #$0200
L_001C42: ; 0x001C42, $EC42
    CMPD  #$FE00
    BGT   L_001C4B
    LDD   #$FE00
L_001C4B: ; 0x001C4B, $EC4B
    STD   16,X
    COMA
    COMB
    ASLB
    ROLA
    ASLB
    ROLA
    TFR   A>B
    SEX
    ADDD  16,X
    STD   16,X
    LDB   $DF
    ANDB  #$1F
    ADDB  #$F0
    SEX
    ADDD  16,X
    STD   16,X
    LDD   $CC
    SUBD  10,X
    ADDD  #$12C0
    CMPD  #$2580
    BHI   L_001C17
    DEC   11,U
    BNE   L_001C7E
    JSR   L_001C86
L_001C7E: ; 0x001C7E, $EC7E
    LDA   #$03
    LDX   #$EC2A
    JMP   U=$63,A>U+4,X>U+2
L_001C86: ; 0x001C86, $EC86
    PSHS  X
    LDD   $CC
    SUBD  10,X
    EORA  14,X
    BMI   L_001CBF
    LEAY  X
    JSR   L_0013F3
    ANDB  [-1701,U]
    BITB  -2,X
    BEQ   L_001CBF
    LDD   14,Y
    ASLB
    ROLA
    ASLB
    ROLA
    ASLB
    ROLA
    STD   14,X
    LDD   #$D534
    JSR   L_00054D
    CLRB
    LDA   $C0
    SUBA  12,X
    ASRA
    RORB
    ASRA
    RORB
    ASRA
    RORB
    ASRA
    RORB
    ASRA
    RORB
    STD   16,X
L_001CBF: ; 0x001CBF, $ECBF
    LDA   R_A10D
    JSR   L_000D9E
    STA   11,U
    PULS  X,PC
    LDX   7,U
    LEAX  2,X
    CMPX  #$A13A
    BLO   L_001CD5
    LDX   #$A11A
L_001CD5: ; 0x001CD5, $ECD5
    STX   7,U
    LDX   X
    BEQ   L_001D51
    LDD   4,X
    BEQ   L_001D51
    LDD   8,X
    CMPD  #$ED70
    BNE   L_001D51
    LDD   2,X
    CMPD  #$F90B
    BHI   L_001D1E
    LDA   $DF
    CMPA  #$08
    BLS   L_001D45
    JSR   L_001D59
    ADDA  #$04
    CMPA  #$E8
    BLS   L_001D00
    LDA   #$E8
L_001D00: ; 0x001D00, $ED00
    LDB   #$01
    CMPA  12,X
    BEQ   L_001D0D
    BHI   L_001D09
    NEGB
L_001D09: ; 0x001D09, $ED09
    ADDB  12,X
    STB   12,X
L_001D0D: ; 0x001D0D, $ED0D
    LDU   2,X
    LEAU  10,U
    CMPU  #$F90B
    BLS   L_001D1A
L_001D17: ; 0x001D17, $ED17
    LDU   #$F901
L_001D1A: ; 0x001D1A, $ED1A
    LDB   #$E0
    BRA   L_001D4A
L_001D1E: ; 0x001D1E, $ED1E
    LDA   $DF
    CMPA  #$08
    BLS   L_001D17
    BSR   L_001D59
    ADDA  #$0F
    CMPA  #$E8
    BLS   L_001D2E
    LDA   #$E8
L_001D2E: ; 0x001D2E, $ED2E
    LDB   #$01
    CMPA  12,X
    BEQ   L_001D3B
    BHI   L_001D37
    NEGB
L_001D37: ; 0x001D37, $ED37
    ADDB  12,X
    STB   12,X
L_001D3B: ; 0x001D3B, $ED3B
    LDU   2,X
    LEAU  10,U
    CMPU  #$F91F
    BLS   L_001D48
L_001D45: ; 0x001D45, $ED45
    LDU   #$F915
L_001D48: ; 0x001D48, $ED48
    LDB   #$20
L_001D4A: ; 0x001D4A, $ED4A
    STU   2,X
    SEX
    ADDD  10,X
    STD   10,X
L_001D51: ; 0x001D51, $ED51
    LDA   #$02
    LDX   #$ECC9
    JMP   U=$63,A>U+4,X>U+2
L_001D59: ; 0x001D59, $ED59
    PSHS  X,B
    LDD   10,X
    LSRA
    RORB
    LSRA
    RORB
    LSRA
    RORB
    LSRA
    RORB
    LSRA
    RORB
    LSRA
    RORB
    LDX   #$B300
    LDA   D,X
    PULS  B,X,PC
L_001D70: ; 0x001D70, $ED70
    LDA   $DE
    BEQ   L_001D77
    CLRA
    PULS  A,B,PC
L_001D77: ; 0x001D77, $ED77
    BSR   L_001DC4
    JSR   L_0023FB
    LDD   #$F8D8
    STD   2,X
    LDD   10,X
    SUBD  #$0040
    STD   10,X
    JSR   L_002C63
    LDD   #$D4E4
    JMP   L_00054D
    LDU   6,X
    BEQ   L_001D70
    LDA   $DE
    BEQ   L_001DBF
    LDD   2,U
    CMPD  #$F24C
    BEQ   L_001DB7
    LDD   #$D4DA
    JSR   L_00054D
    PSHS  X
    LDX   #$EE73
    LDA   #$00
    JSR   L_000055
    LEAY  X
    PULS  X
    STX   7,Y
L_001DB7: ; 0x001DB7, $EDB7
    LDD   #$F24C
    STD   2,U
    CLRA
    PULS  A,B,PC
L_001DBF: ; 0x001DBF, $EDBF
    BSR   L_001D77
    JMP   LIST_FIND_IN_X
L_001DC4: ; 0x001DC4, $EDC4
    LEAY  X
    PSHS  U,X,A
    LDU   #$A11A
    LDA   #$40
L_001DCD: ; 0x001DCD, $EDCD
    CMPY  U++
    BEQ   L_001DD8
    DECA
    BNE   L_001DCD
    JSR   NOP+JMP_SETUP_STUFF?
L_001DD8: ; 0x001DD8, $EDD8
    CLRA
    CLRB
    STD   -2,U
    DEC   $FA
    BNE   L_001DE8
    LDX   #$EDEA
    LDA   #$00
    JSR   L_000055
L_001DE8: ; 0x001DE8, $EDE8
    PULS  A,X,U,PC
    LDA   $BA
    ORA   #$02
    STA   $BA
    CLR   7,U
    JSR   BANKSWITCH_TO_7
    JSR   PALETTE_ENTRY_0x9
    LDX   #$B125
    LDU   #$0000
    LDA   #$40
L_001E00: ; 0x001E00, $EE00
    STU   [X++]
    DECA
    BNE   L_001E00
L_001E05: ; 0x001E05, $EE05
    LDX   $67
    LDD   #$F9F1
    STD   2,X
    LDB   #$02
    STB   $73
L_001E10: ; 0x001E10, $EE10
    JSR   L_000711
    ANDA  #$3F
    ADDD  $20
    STD   10,X
    JSR   L_001D59
    STA   12,X
    SUBA  #$0A
    JSR   L_002C63
    DEC   $73
    BNE   L_001E10
    LDA   $DF
    ANDA  #$1F
    LDX   #$E799
    LDA   A,X
    STA   $26
    LDD   #$D4E4
    JSR   L_00054D
    LDX   #$EE44
    LDA   #$02
L_001E3D: ; 0x001E3D, $EE3D
    LDB   #$08
    STB   $5E
    JMP   U=$63,A>U+4,X>U+2
    CLR   $26
    LDA   7,U
    LSRA
    LSRA
    LSRA
    INCA
    JSR   L_000D9E
    LDX   #$EE54
    BRA   L_001E3D
    INC   7,U
    LDA   7,U
    CMPA  #$10
    BNE   L_001E05
    LDD   #$D4C7
    JSR   L_00054D
    JMP   L_00000A
    JSR   L_000095
    ADCB  L_000DED
    CMPX  R_0000
    LDD   #$0125
    BRA   L_001E7F
    JSR   L_000095
    ADCB  L_0017ED
    CMPX  R_0000
    LDD   #$0150
L_001E7F: ; 0x001E7F, $EE7F
    JSR   L_000360
    LDY   7,U
    LDD   $C7
    STD   14,X
    LDD   #$0000
    STD   16,X
    LDA   #$11
    STA   20,X
    LDD   10,Y
    STD   10,X
    LDD   12,Y
    BMI   L_001EA1
    ADDD  #$1800
    BRA   L_001EA4
L_001EA1: ; 0x001EA1, $EEA1
    SUBD  #$2000
L_001EA4: ; 0x001EA4, $EEA4
    STD   12,X
    STX   $65
    STX   7,U
    LDA   #$32
    LDX   #$EEB2
    JMP   U=$63,A>U+4,X>U+2
    LDX   7,U
    JSR   L_0023FB
    JMP   L_00000A
L_001EBA: ; 0x001EBA, $EEBA
    PSHS  X
    JSR   L_0013F3
    ANDB  [-1701,U]
    BITB  -2,X
    BEQ   L_001EFC
    LDB   $DF
    ANDB  #$1F
    ADDB  #$F0
    ADDB  $BF
    SUBB  4,X
    SEX
    ASLB
    ROLA
    ASLB
    ROLA
    STD   14,X
    LDB   $DF
    CMPB  #$78
    BLS   L_001EE8
    LDD   $C7
    ASLB
    ROLA
    ASLB
    ROLA
    ADDD  14,X
    STD   14,X
L_001EE8: ; 0x001EE8, $EEE8
    LDB   $E1
    ANDB  #$1F
    ADDB  #$F0
    ADDB  $C0
    SUBB  5,X
    SEX
    ASLB
    ROLA
    ASLB
    ROLA
    STD   16,X
    LDA   #$01
L_001EFC: ; 0x001EFC, $EEFC
    PULS  X,PC
L_001EFE: ; 0x001EFE, $EEFE
    DEC   13,U
    BNE   L_001F14
    LDA   R_A105
    JSR   L_000D9E
    STA   13,U
    BSR   L_001EBA
    BEQ   L_001F14
    LDD   #$D525
    JSR   L_00054D
L_001F14: ; 0x001F14, $EF14
    RTS
L_001F15: ; 0x001F15, $EF15
    PSHS  A
    STA   $73
L_001F19: ; 0x001F19, $EF19
    LDX   #$F15E
    LDA   #$00
    JSR   L_000055
    LEAU  X
    JSR   L_000095
    .db $F8
    .db $CE
    .db $EF
    .db $6D
    .db $CC
    .db $33
    JSR   L_000711
    LDD   $20
    SUBD  #$2580
    STD   $75
    LDD   $E0
    SUBD  $75
    CMPD  #$4B00
    BHS   L_001F43
    ADDD  #$8000
L_001F43: ; 0x001F43, $EF43
    ADDD  $75
    STD   10,X
    LDA   $DF
    LSRA
    ADDA  #$2A
    STA   12,X
    CLRA
    CLRB
    STD   16,X
    STD   14,X
    LDA   R_A10B
    JSR   L_000D9E
    STA   7,U
    JSR   L_002C60
    STU   6,X
    STX   7,U
    INC   R_A115
    DEC   $73
    BNE   L_001F19
    PULS  A,PC
    DEC   R_A115
    JSR   L_002416
    .db $01 ; illegal instx2, 1 byte each
    .db $15
    ANDB  $F8
    RTS
L_001F78: ; 0x001F78, $EF78
    PSHS  X
    LDA   $FA
    BEQ   L_001F9A
    LDX   $9B
L_001F80: ; 0x001F80, $EF80
    LEAX  2,X
    CMPX  #$A15A
    BLO   L_001F8A
    LDX   #$A11A
L_001F8A: ; 0x001F8A, $EF8A
    LDD   X
    BNE   L_001F94
    CMPX  $9B
    BNE   L_001F80
    PULS  X,PC
L_001F94: ; 0x001F94, $EF94
    STX   $9B
    STD   9,U
    STX   11,U
L_001F9A: ; 0x001F9A, $EF9A
    PULS  X,PC
L_001F9C: ; 0x001F9C, $EF9C
    PSHS  A
    STA   $73
L_001FA0: ; 0x001FA0, $EFA0
    TST   $FA
    BNE   L_001FA7
    JMP   L_001F19
L_001FA7: ; 0x001FA7, $EFA7
    LDX   #$EFF6
    LDA   #$00
    JSR   L_000055
    LEAU  X
    JSR   L_000095
    .db $F9
    .db $85
    .db $F2
    .db $0B
    .db $44
    .db $33
    JSR   L_000711
    LDD   $E0
    STD   10,X
    LDA   #$2C
    STA   12,X
    LDD   R_A103
    STD   16,X
    LDA   R_A105
    JSR   L_000D9E
    STA   13,U
    LDA   R_A102
    JSR   L_000D9E
    TFR   A>B
    CLRA
    BITB  #$01
    BEQ   L_001FE2
    COMB
    COMA
L_001FE2: ; 0x001FE2, $EFE2
    STD   14,X
    STU   6,X
    JSR   L_002C60
    STX   7,U
    BSR   L_001F78
    INC   R_A112
    DEC   $73
    BNE   L_001FA0
    PULS  A,PC
    LDX   7,U
    LDY   9,U
    LDD   [11,U]
    BEQ   L_002016
    LDA   9,Y
    CMPA  #$70
    BNE   L_002016
    LDA   10,X
    ANDA  #$FC
    STA   $73
    LDA   10,Y
    ANDA  #$FC
    CMPA  $73
    BEQ   L_002065
    BRA   L_002025
L_002016: ; 0x002016, $F016
    LDA   20,X
    ANDA  #$FE
    STA   20,X
    JSR   L_001F78
    LBEQ  L_00213E
L_002025: ; 0x002025, $F025
    JSR   L_001D59
    SUBA  #$32
    SUBA  12,X
    BHI   L_00203D
    CMPA  #$EC
    BLT   L_002036
    CLRA
    CLRB
    BRA   L_002040
L_002036: ; 0x002036, $F036
    LDD   R_A103
    COMA
    COMB
    BRA   L_002040
L_00203D: ; 0x00203D, $F03D
    LDD   R_A103
L_002040: ; 0x002040, $F040
    STD   16,X
    LDD   2,X
    CMPD  #$F8EC
    BEQ   L_00205D
    JSR   L_001EFE
    LDU   2,X
    LEAU  10,U
    CMPU  #$F999
    BLS   L_00205B
    LDU   #$F985
L_00205B: ; 0x00205B, $F05B
    STU   2,X
L_00205D: ; 0x00205D, $F05D
    LDA   #$06
    LDX   #$EFF6
    JMP   U=$63,A>U+4,X>U+2
L_002065: ; 0x002065, $F065
    CLRA
    CLRB
    INC   20,X
    STD   14,X
    STD   16,X
    LDD   #$F985
    STD   2,X
    LDX   7,U
    LDY   9,U
    LDD   [11,U]
    BEQ   L_002016
    LDA   9,Y
    CMPA  #$70
    BNE   L_002016
    LDD   10,Y
    ANDB  #$E0
    STD   $75
    LDD   10,X
    ANDB  #$E0
    CMPD  $75
    BEQ   L_0020A0
    BLT   L_002099
    LDB   #$E0
    BRA   L_00209B
L_002099: ; 0x002099, $F099
    LDB   #$20
L_00209B: ; 0x00209B, $F09B
    SEX
    ADDD  10,X
    STD   10,X
L_0020A0: ; 0x0020A0, $F0A0
    LDA   12,Y
    SUBA  #$0C
    CMPA  12,X
    BEQ   L_0020BE
    LDD   R_A103
    BHS   L_0020AF
    COMA
    COMB
L_0020AF: ; 0x0020AF, $F0AF
    ADDD  12,X
    STD   12,X
L_0020B3: ; 0x0020B3, $F0B3
    JSR   L_001EFE
    LDA   #$01
    LDX   #$F074
    JMP   U=$63,A>U+4,X>U+2
L_0020BE: ; 0x0020BE, $F0BE
    LDD   10,X
    ADDD  #$0040
    SUBD  10,Y
    CMPD  #$0080
    BHI   L_0020B3
    LDD   #$F1E0
    STD   8,X
    LDD   R_A103
    COMB
    COMA
    STD   16,X
    STD   16,Y
    LDD   #$D50C
    JSR   L_00054D
    LDD   #$ED91
    STD   8,Y
    LDU   $63
    LDX   7,U
    LDA   12,X
    CMPA  #$32
    BLS   L_0020FB
    JSR   L_001EFE
    LDA   #$04
    LDX   #$F0E6
    JMP   U=$63,A>U+4,X>U+2
L_0020FB: ; 0x0020FB, $F0FB
    LDD   #$D511
    JSR   L_00054D
    LDX   7,U
    LDY   9,U
    LDD   [11,U]
    BNE   L_002116
    JSR   L_0023FB
    DEC   R_A112
    INC   $FB
    JMP   L_00000A
L_002116: ; 0x002116, $F116
    CLRA
    CLRB
    STD   16,X
    STD   16,Y
    LDA   12,Y
    CMPA  12,X
    BLS   L_002133
    DEC   12,Y
    LDA   #$12
    JSR   L_000539
    LDA   #$01
    LDX   #$F101
    JMP   U=$63,A>U+4,X>U+2
L_002133: ; 0x002133, $F133
    LEAX  Y
    LDD   4,Y
    ADDA  #$01
    STD   $F8
    JSR   L_001D77
L_00213E: ; 0x00213E, $F13E
    DEC   R_A112
    INC   R_A115
    LDX   7,U
    CLR   20,X
    LDD   #$F8CE
    STD   2,X
    LDD   #$CC33
    STD   18,X
    LDD   #$EF6D
    STD   8,X
    LDA   R_A10B
    STA   9,U
    LDX   7,U
    LDB   R_A10A
    LDY   $CC
    CMPY  10,X
    BGE   L_00216C
    NEGB
L_00216C: ; 0x00216C, $F16C
    SEX
    STD   14,X
    LDD   $CC
    SUBD  10,X
    ADDD  #$017C
    CMPD  #$0700
    BLS   L_00219D
    LDA   $C0
    SUBA  12,X
    BLS   L_00218D
    CMPA  #$08
    BHI   L_002191
    LDD   R_A108
    COMA
    COMB
    BRA   L_002198
L_00218D: ; 0x00218D, $F18D
    CMPA  #$F8
    BGT   L_002195
L_002191: ; 0x002191, $F191
    CLRA
    CLRB
    BRA   L_002198
L_002195: ; 0x002195, $F195
    LDD   R_A108
L_002198: ; 0x002198, $F198
    STD   16,X
    BRA   L_0021AF
L_00219D: ; 0x00219D, $F19D
    LDA   $C0
    CMPA  12,X
    LDD   R_A108
    BHS   L_0021A8
    COMA
    COMB
L_0021A8: ; 0x0021A8, $F1A8
    STD   16,X
    LDD   4,X
    BEQ   L_0021D8
L_0021AF: ; 0x0021AF, $F1AF
    LDB   R_A107
    LDA   $DF
    BMI   L_0021B7
    NEGB
L_0021B7: ; 0x0021B7, $F1B7
    ADDB  12,X
    CMPB  #$2A
    BHS   L_0021BF
    LDB   #$F0
L_0021BF: ; 0x0021BF, $F1BF
    STB   12,X
    DEC   9,U
    BNE   L_0021D8
    LDA   R_A10B
    JSR   L_000D9E
    STA   9,U
    JSR   L_001EBA
    BEQ   L_0021D8
    LDD   #$D52A
    JSR   L_00054D
L_0021D8: ; 0x0021D8, $F1D8
    LDA   #$03
    LDX   #$F15E
    JMP   U=$63,A>U+4,X>U+2
    LDU   6,X
    LDD   [11,U]
    BEQ   L_00220B
    LDD   #$0000
    LDD   #$0000
    PSHS  X
    LDX   #$F216
    LDA   #$00
    JSR   L_000055
    LDU   9,U
    STU   7,X
    LDD   #$D4E9
    JSR   L_00054D
    LDD   #$0000
    STD   16,U
    STX   6,U
    PULS  X
L_00220B: ; 0x00220B, $F20B
    DEC   R_A112
    JSR   L_002416
    .db $01
    .db $15
    .db $D5
    .db $07
    RTS
    LDX   7,U
    LDD   #$0008
    ADDD  16,X
    CMPD  #$0300
    BHS   L_002227
    STD   16,X
L_002227: ; 0x002227, $F227
    JSR   L_001D59
    CMPA  12,X
    BHI   L_002244
    LDD   16,X
    CMPD  #$00E0
    BLS   L_002270
    LDD   4,X
    ADDD  #$0107
    STD   $F8
    JSR   L_001D77
    JMP   L_00000A
L_002244: ; 0x002244, $F244
    LDA   #$04
    LDX   #$F216
    JMP   U=$63,A>U+4,X>U+2
    LDX   7,U
    LDD   #$0000
    STD   16,X
    LDA   $C5
    ADDA  #$0A
    STA   12,X
    LDD   $CC
    ADDD  #$0080
    STD   10,X
    JSR   L_001D59
    CMPA  12,X
    BLO   L_002277
    LDA   #$01
    LDX   #$F24C
    JMP   U=$63,A>U+4,X>U+2
L_002270: ; 0x002270, $F270
    PSHS  X
    LDX   #$EE65
    BRA   L_00227C
L_002277: ; 0x002277, $F277
    PSHS  X
    LDX   #$EE73
L_00227C: ; 0x00227C, $F27C
    LDA   #$00
    JSR   L_000055
    LEAY  X
    PULS  X
    STX   7,Y
    LDD   #$0000
    STD   6,X
    STD   16,X
    LDD   #$ED70
    STD   8,X
    LDD   #$D4DF
    JSR   L_00054D
    JMP   L_00000A
L_00229D: ; 0x00229D, $F29D
    STA   $73
    LDB   R_A106
    COM   $AA
    BMI   L_0022A7
    NEGB
L_0022A7: ; 0x0022A7, $F2A7
    STB   $74
    LDX   #$F2F7
    LDA   #$00
    JSR   L_00003E
    LEAU  X
    LDA   $73
    STA   15,U
    CLRA
    CLRB
    STD   7,U
    STD   9,U
    STD   11,U
    STD   13,U
L_0022C1: ; 0x0022C1, $F2C1
    JSR   L_000095
    ADCB  R_29F3
    CMPX  R_8888
    LDB   $74
    SEX
    STD   14,X
    CLRA
    CLRB
    STD   16,X
    LDA   $73
    LSRA
    RORB
    ADDA  $73
    ADDD  $CC
    ADDA  #$80
    STD   10,X
    LDA   #$50
    STA   12,X
    STA   16,U
    STU   6,X
    STX   $65
    LDA   $73
    ASLA
    ADDA  #$05
    STX   A,U
    DEC   $73
    BNE   L_0022C1
    RTS
    LDA   $DF
    ANDA  #$06
    ADDA  #$07
    LDX   A,U
    LBEQ  L_0023B4
    LDB   $DF
    LDA   #$0A
    ANDB  #$3F
    ADDB  #$E0
    BMI   L_00230E
    NEGA
L_00230E: ; 0x00230E, $F30E
    LDY   2,X
    LEAY  A,Y
    CMPY  #$F929
    BHS   L_00231D
    LDY   #$F929
L_00231D: ; 0x00231D, $F31D
    CMPY  #$F947
    BLS   L_002327
    LDY   #$F947
L_002327: ; 0x002327, $F327
    STY   2,X
    SEX
    ADDD  16,X
    STD   16,X
    ASLB
    ROLA
    ASLB
    ROLA
    ASLB
    ROLA
    TFR   A>B
    NEGB
    SEX
    ADDD  16,X
    STD   16,X
    LDA   5,X
    BNE   L_002380
    LDA   $DF
    CMPA  #$40
    BHI   L_002361
    ANDA  #$03
    ADDA  #$FE
    ADDA  16,U
    CMPA  #$40
    BHS   L_002358
    LDA   #$40
L_002358: ; 0x002358, $F358
    CMPA  #$68
    BLO   L_00235E
    LDA   #$68
L_00235E: ; 0x00235E, $F35E
    STA   16,U
L_002361: ; 0x002361, $F361
    LDA   16,U
    SUBA  12,X
    ADDA  #$10
    CMPA  #$20
    BLS   L_0023B4
    SUBA  #$10
    BMI   L_002375
    LDD   #$FFF0
    BRA   L_002378
L_002375: ; 0x002375, $F375
    LDD   #$0010
L_002378: ; 0x002378, $F378
    ADDD  16,X
    STD   16,X
    BRA   L_0023B4
L_002380: ; 0x002380, $F380
    SUBA  $C0
    BMI   L_002396
    CMPA  #$20
    BLO   L_00238D
    LDD   #$FFF0
    BRA   L_0023A6
L_00238D: ; 0x00238D, $F38D
    CMPA  #$10
    BHI   L_0023AC
    LDD   #$0010
    BRA   L_0023A6
L_002396: ; 0x002396, $F396
    CMPA  #$E0
    BGT   L_00239F
    LDD   #$0010
    BRA   L_0023A6
L_00239F: ; 0x00239F, $F39F
    CMPA  #$F0
    BLT   L_0023AC
    LDD   #$FFF0
L_0023A6: ; 0x0023A6, $F3A6
    ADDD  16,X
    STD   16,X
L_0023AC: ; 0x0023AC, $F3AC
    LDA   $E1
    ANDA  #$07
    BNE   L_0023B4
    BSR   L_0023DC
L_0023B4: ; 0x0023B4, $F3B4
    LDA   #$01
    LDX   #$F2F7
    JMP   U=$63,A>U+4,X>U+2
    JSR   L_00241D
    .db $01
    .db $25
    .db $D5
    .db $02
    DEC   R_A113
    LDU   6,X
    LEAY  7,U
L_0023CA: ; 0x0023CA, $F3CA
    CMPX  Y++
    BNE   L_0023CA
    CLRA
    CLRB
    STD   -2,Y
    DEC   15,U
    BNE   L_0023DB
    LEAX  U
    JSR   LIST_FIND_X
L_0023DB: ; 0x0023DB, $F3DB
    RTS
L_0023DC: ; 0x0023DC, $F3DC
    LDA   $99
    CMPA  #$0A
L_0023E0: ; 0x0023E0, $F3E0
    BHS   L_0023FA
    JSR   L_0013F3
    .db $E4
    .db $98
    .db $F9
    .db $5B
    BITB  -2,X
    BEQ   L_0023FA
    LDB   $E0
    SEX
    ASLB
    ROLA
    LDA   $DF
    ANDA  #$1F
    INCA
    STA   21,X
L_0023FA: ; 0x0023FA, $F3FA
    RTS
L_0023FB: ; 0x0023FB, $F3FB
    JSR   REMOVE_X_FROM_LIST
L_0023FE: ; 0x0023FE, $F3FE
    PSHS  U,Y,X,B,A
    JSR   BANKSWITCH_TO_2
    LDD   4,X
    LDY   2,X
    JSR   [8,Y]
    PULS  A,B,X,Y,U,PC
    PSHS  X
    JSR   LIST_FIND_IN_X
    PULS  X
    BRA   L_002420
L_002416: ; 0x002416, $F416
    PSHS  X
    JSR   LIST_FIND_IN_X
    PULS  X
L_00241D: ; 0x00241D, $F41D
    JSR   REMOVE_X_FROM_LIST
L_002420: ; 0x002420, $F420
    PSHS  U,B,A
    LDU   4,S
    PULU  A,B
    JSR   L_000360
    BSR   L_002434
    PULU  A,B
    STU   4,S
    JSR   L_00054D
    PULS  A,B,U,PC
L_002434: ; 0x002434, $F434
    PSHS  U,Y,X,B,A
    BSR   L_0023FE
    JSR   L_002C63
    PULS  A,B,X,Y,U,PC
L_00243D: ; 0x00243D, $F43D
    LDX   #$F45B
L_002440: ; 0x002440, $F440
    STX   7,U
    LDA   #$06
    LDX   #$F44A
    JMP   U=$63,A>U+4,X>U+2
    LDX   7,U
    LDD   X++
    STD   $33
    LDA   X+
    STA   $35
    CMPX  #$F464
    BLO   L_002440
    BRA   L_00243D
    CMPA  #$81
    BLE   L_0023E0
    BLE   L_002468
    BLE   L_0023E4
    ASR   $86
    STU   R_9730
L_002468: ; 0x002468, $F468
    CLR   $32
    LDA   #$03
    LDX   #$F472
    JMP   U=$63,A>U+4,X>U+2
    LDA   $DF
    ANDA  #$1F
    LDX   #$E799
    LDA   A,X
    STA   $30
    STA   $32
    LDX   #$CCB0
    CMPX  $A6
    BNE   L_002489
    LDX   #$CCBC
L_002489: ; 0x002489, $F489
    STX   $A6
    LDA   #$06
    LDX   #$F464
    JMP   U=$63,A>U+4,X>U+2
    LDA   $8A
    BNE   L_0024BB
    LDX   #$0F1C
    LDA   $8B
    DECA
    BEQ   L_0024A2
    LDX   #$711C
L_0024A2: ; 0x0024A2, $F4A2
    LDD   #$1808
    JSR   SAVE_UXBA+BANK_UNK
    LDA   #$08
    LDX   #$F4B0
    JMP   U=$63,A>U+4,X>U+2
    JSR   L_0003D9
    LDA   #$0C
    LDX   #$F493
    JMP   U=$63,A>U+4,X>U+2
L_0024BB: ; 0x0024BB, $F4BB
    JMP   L_00000A
L_0024BE: ; 0x0024BE, $F4BE
    LDU   $63
    STX   13,U
    LDB   BANK_VAL_DP
    STB   12,U
    LDX   #$F4CC
    JMP   U=$63,A>U+4,X>U+2
    LDA   12,U
    BSR   BANKSWITCH_TO_A
    JMP   [13,U]
GOTO_PAST_JSR: ; 0x0024D3, $F4D3
    LEAS  -3,S ; Save 3 bytes of stack. FORMAT: [ptr,bank]
    PSHS  U,A ; STACK S 0:A 2:U 3-5:RSV 6:RTS
    LDA   BANK_VAL_DP ; Get current bank.
    STA   5,S ; Save bank up stack.
    LDU   6,S ; Pull location from.
    LDA   2,U ; Pull bank going to into A.
    LDU   U ; Get ptr past JSR.
    STU   3,S ; Save on stack.
    BSR   BANKSWITCH_TO_A ; Goto bank past JSR.
    PULS  A,U ; Pull saved.
    JSR   [S] ; JSR to location past original JSR.
    PSHS  U,A ; Save new info.
    LDA   5,S ; Load bank from up stack.
    BSR   BANKSWITCH_TO_A ; Switch back to it.
    LDU   6,S ; Load location from.
    LEAU  3,U ; Add 3 to skip data.
    STU   6,S ; Store new RTS location.
    PULS  A,U ; Pull saved.
    LEAS  3,S ; Unreserve stack.
    RTS ; RTS
GOTO_B7-C000: ; 0x0024FA, $F4FA
    BSR   BANKSWITCH_TO_7
    JMP   $C000
BANKSWITCH_TO_7: ; 0x0024FF, $F4FF
    LDA   #$07
    BRA   BANKSWITCH_TO_A
BANKSWITCH_TO_2: ; 0x002503, $F503
    LDA   #$02
    BRA   BANKSWITCH_TO_A
BANKSWITCH_TO_3: ; 0x002507, $F507
    LDA   #$03
    BRA   BANKSWITCH_TO_A
BANKSWITCH_TO_1: ; 0x00250B, $F50B
    LDA   #$01
BANKSWITCH_TO_A: ; 0x00250D, $F50D
    STA   BANK_VAL_DP
    STA   BANKSWITCH
    RTS
PSH_ALL_GOTO_B2-C002: ; 0x002513, $F513
    PSHS  U,Y,X,DP,B,A,CC
    BSR   BANKSWITCH_TO_2
    JSR   $C002
    PULS  CC,A,B,DP,X,Y,U,PC
GOTO_B3-C00F: ; 0x00251C, $F51C
    BSR   BANKSWITCH_TO_3
    JMP   $C00F
    RTS
TEXT_CHAR_TO_SCREEN: ; 0x002522, $F522
    PSHS  U,Y,X,B,A ; Save state
    TFR   D>X ; TFR location to X
    LDA   BANK_VAL_DP ; Get bank
    PSHS  A ; Save
    LDA   #$02 ; Switch to bank 2.
    STA   BANK_VAL_DP
    STA   BANKSWITCH
    LDD   Y ; Get WWHH?
    LDY   2,Y ; LDY from Y
    PSHS  B,A ; Save from Y
    BITB  #$01 ; Test lowest bit...
    BNE   LOOP_ON_BBOUNDRY
LOOP_ON_WBOUNDRY: ; 0x00253C, $F53C
    SUBB  #$02 ; Taking 2
LOOP_NO_OFFSET: ; 0x00253E, $F53E
    LDU   B,Y ; Get data from Y+B
    STU   B,X ; Store to X+B
    SUBB  #$02
    BPL   LOOP_NO_OFFSET ; If next data exists.
    LDB   1,S ; Get A pushed to stack.
    LEAX  256,X ; Add 256 to X
    LEAY  B,Y ; Add offset from B, height?
    DECA ; Dec A normally.
    BNE   LOOP_ON_WBOUNDRY ; Loop if not done.
    BRA   POST_COL_DATA_MOVED
LOOP_ON_BBOUNDRY: ; 0x002553, $F553
    DECB ; -= consumed
    LDA   B,Y ; Get byte
    STA   B,X ; Store byte
    SUBB  #$02 ; Sub 2
    BMI   END_MOVE_COL
LOOP_ON_BBOUNDRY_WORD: ; 0x00255C, $F55C
    LDU   B,Y ; Get word
    STU   B,X ; Store word
    SUBB  #$02
    BPL   LOOP_ON_BBOUNDRY_WORD
END_MOVE_COL: ; 0x002564, $F564
    LDB   1,S ; Get A pushed onto stack.
    LEAX  256,X ; Add 256 to X
    LEAY  B,Y ; Y+=B
    DEC   S ; Decrease A on stack
    BNE   LOOP_ON_BBOUNDRY ; Loop if not written
POST_COL_DATA_MOVED: ; 0x002570, $F570
    LEAS  2,S ; Fix stack
    PULS  A ; Pull bank from.
    STA   BANK_VAL_DP
    STA   BANKSWITCH ; Switch to bank.
    PULS  A,B,X,Y,U,PC ; RTS
L_00257B: ; 0x00257B, $F57B
    PSHS  U,X,B,A
    TFR   D>X
    LDA   BANK_VAL_DP
    PSHS  A
    LDA   #$02
    STA   BANK_VAL_DP
    STA   BANKSWITCH
    LDD   Y
L_00258C: ; 0x00258C, $F58C
    LDU   #$0000
    PSHS  B
    BITB  #$01
    BNE   L_0025A8
L_002595: ; 0x002595, $F595
    SUBB  #$02
L_002597: ; 0x002597, $F597
    STU   B,X
    SUBB  #$02
    BPL   L_002597
    LDB   S
    LEAX  256,X
    DECA
    BNE   L_002595
    BRA   L_0025BE
L_0025A8: ; 0x0025A8, $F5A8
    DECB
    CLR   B,X
    SUBB  #$02
    BMI   L_0025B5
L_0025AF: ; 0x0025AF, $F5AF
    STU   B,X
    SUBB  #$02
    BPL   L_0025AF
L_0025B5: ; 0x0025B5, $F5B5
    LDB   S
    LEAX  256,X
    DECA
    BNE   L_0025A8
L_0025BE: ; 0x0025BE, $F5BE
    PULS  A,B
    STB   BANK_VAL_DP
    STB   BANKSWITCH
    PULS  A,B,X,U,PC
SAVE_UXBA+BANK_UNK: ; 0x0025C7, $F5C7
    PSHS  U,X,B,A
    LDA   BANK_VAL_DP
    PSHS  A
    LDA   1,S ; Get value up stack.
    BRA   L_00258C
CLEAR_ALL_SCREEN: ; 0x0025D1, $F5D1
    PSHS  U,Y,X,B,A
    LDU   #$9C00
    LDX   #$0000
    TFR   X>Y
    TFR   X>D
CLEAR_SCREEN_ALL_LOOP: ; 0x0025DD, $F5DD
    PSHU  Y,X,B,A
    PSHU  Y,X,B,A
    PSHU  Y,X,B,A
    PSHU  Y,X,B,A
    PSHU  Y,X,B,A
    PSHU  X
    CMPU  #$0000 ; All cleared
    BNE   CLEAR_SCREEN_ALL_LOOP ; If not end of screen.
    PULS  A,B,X,Y,U,PC ; restore, RTS
CLEAR_GAME_SCREEN: ; 0x0025F1, $F5F1
    PSHS  U,Y,X,DP,B,A
    LDU   #$9C00
    LDX   #$0000
    TFR   X>Y
    TFR   X>D
    TFR   A>DP
CLEAR_GAME_SCREEN_COL_LOOP: ; 0x0025FF, $F5FF
    LDB   #$08 ; loop count
CLEAR_COUNT_LOOP: ; 0x002601, $F601
    PSHU  Y,X,DP,A ; 6 rows.
    PSHU  Y,X,DP,A
    PSHU  Y,X,DP,A
    PSHU  Y,X,DP,A ; 24 rows.
    DECB
    BNE   CLEAR_COUNT_LOOP ; 192 rows.
    PSHU  Y,X,DP,A ; 198
    PSHU  Y,X,DP,A
    PSHU  Y,X,DP,A ; 210
    PSHU  Y,X ; 214
    LEAU  -42,U ; 256. Adjust to miss scanner.
    CMPU  #$0000 ; Is end?
    BNE   CLEAR_GAME_SCREEN_COL_LOOP ; No, keep looping.
    PULS  A,B,DP,X,Y,U,PC
DEFENDER_START: ; 0x00261F, $F61F
    CLR   BANKSWITCH ; Set bankswitch to 0.
    LDX   #$CC00 ; Set to PIA's.
    CLR   1,X ; Clear data ctrl registers.
    CLR   3,X
    CLR   5,X
    CLR   7,X
    LDA   #$C0 ; Set top two bits. 1=Input, 0=Output.
    STA   X ; PIA-ROM-A-DATA
    LDA   #$FF ; Set all bits to input.
    STA   2,X ; PIA-ROM-B-DATA
    CLR   4,X ; PIA-WIG-A-DATA
    CLR   6,X ; PIA-WIG-B-DATA
    LDA   #$04 ; Set data to report.
    STA   3,X ; PIA-ROM-B-CTRL
    STA   5,X ; PIA-WIG-A-CTRL
    STA   7,X ; PIA-WIG-B-CTRL
    ORA   #$10 ; Set CTRL to interrupt on 0->1 transition.
    STA   1,X ; PIA-ROM-A-CTRL
    LDX   #$C000 ; Ptr, IO space.
    LDA   #$C0 ; Seed palette gen.
INITIAL_PALETTE_LOAD: ; 0x00264A, $F64A
    STA   X+ ; Store A/D Upper to palette.
    LDB   #$B5 ; Seed B
    MUL ; Figure next palette byte.
    CMPX  #$C010 ; Compare to end.
    BNE   INITIAL_PALETTE_LOAD
    ORCC  #$80 ; Set entire flag.
    ANDCC #$EF ; Enable IRQs, unmask.
    LDY   #$0002 ; Set number of times to do pattern.
    CLRA ; Clear A.
    TFR   A>DP ; Set DP to 0.
    ANDCC #$BF ; Enable FIRQs, unmask.
    CLRB
RUG_PATTERN_SETUP: ; 0x002662, $F662
    TFR   D>U ; Save D to U
    LDX   #$0000 ; Set X to screen memory.
RUG_PATTERN_LOOP: ; 0x002667, $F667
    COMB ; Invert B
    BITB  #$09 ; Test bits.
    BNE   BITS_SET
    COMB ; Re-invert
    RORA ; rotate
    RORB
    BRA   STR_D_TO_SCR[X]
BITS_SET: ; 0x002671, $F671
    COMB ; re-invert
    BITB  #$09 ; Test bits.
    BNE   BITS_SET2
    RORA ; rotate
    RORB
    BRA   STR_D_TO_SCR[X]
BITS_SET2: ; 0x00267A, $F67A
    LSRA ; rotate in 0.
    RORB
STR_D_TO_SCR[X]: ; 0x00267C, $F67C
    STD   X++ ; Store D to screen.
    EXG   X-D ; Screen loc to D
    TSTB ; Test if column
    BNE   RUG_DISP_NOT_COL
    LDB   #$38
    STB   WATCHDOG ; Set watchdog.
    TFR   CC>B ; CC to B
    BITB  #$10 ; Test if IRQ mask
    BEQ   IRQ_NO_MASK
    CLR   BANKSWITCH ; Set to IO bank.
    LDB   PIA_ROM_DATA_A ; Get switches from coin door. 1=Active
    COMB ; Invert
    BITB  #$03 ; Test if auto/man or adv weren't set.
    BEQ   BOTH_INPUTS_ACTIVE ; Both were active. Probably for diagnostics menu pattern?
IRQ_NO_MASK: ; 0x002699, $F699
    CLRB ; Set init to proper val.
RUG_DISP_NOT_COL: ; 0x00269A, $F69A
    EXG   X-D ; Put screen location back to X.
    CMPX  #$C000 ; End of screen.
    BNE   RUG_PATTERN_LOOP ; Not done, loop.
    TFR   U>D ; D=0
    LDX   #$0000 ; Set X.
COMPARE_RUG_LOOP: ; 0x0026A6, $F6A6
    COMB
    BITB  #$09
    BNE   BITS_SET
    COMB
    RORA
    RORB
    BRA   COMPARE_RUG
BITS_SET: ; 0x0026B0, $F6B0
    COMB
    BITB  #$09
    BNE   BITS_SET2
    RORA
    RORB
    BRA   COMPARE_RUG
BITS_SET2: ; 0x0026B9, $F6B9
    LSRA
    RORB
COMPARE_RUG: ; 0x0026BB, $F6BB
    CMPD  X++ ; Test what is on screen.
    BEQ   RUG_MATCH
    EXG   D-Y ; Save value to Y.
    TFR   CC>A
    BITA  #$10 ; Test if IRQ mask.
    BEQ   RUG_MISMATCH_IRQ_NOMASK
    LDA   #$03
    STA   BANK_VAL_DP
    STA   BANKSWITCH
    JMP   RUG_MISMATCH
RUG_MISMATCH_IRQ_NOMASK: ; 0x0026D2, $F6D2
    CLRA ; Start over by clearing the top byte?
    EXG   Y-D ; Put screen value back to D.
    ORCC  #$40 ; Mask FIRQ
RUG_MATCH: ; 0x0026D7, $F6D7
    EXG   X-D ; Save screen pos to X.
    TSTB ; See if at column.
    BNE   NOT_COLUMN_RUG_MATCH
    TFR   CC>B
    BITB  #$10 ; Test if IRQ mask.
    BEQ   RUG_MATCH_NO_IRQMASK
    LDB   PIA_ROM_DATA_A ; Get coin door buttons.
    COMB ; Invert
    BITB  #$03 ; Test auto/man and adv switches.
    BNE   RUG_MATCH_EITHER_ACTIVE ; If either active.
BOTH_INPUTS_ACTIVE: ; 0x0026EA, $F6EA
    LDA   #$03 ; Bank val
    STA   BANK_VAL_DP
    STA   BANKSWITCH
    JMP   JMP_RUG_LEAVE?
RUG_MATCH_NO_IRQMASK: ; 0x0026F4, $F6F4
    TFR   CC>B
    BITB  #$40 ; Test if FIRQ mask.
    BEQ   RUG_MATCH_EITHER_ACTIVE ; No mask.
    ANDCC #$BF ; Unset FIRQ mask.
    TFR   DP>B ; Clear B.
    TFR   A>DP ; A to DP. Val?
SUB_LOOP: ; 0x002700, $F700
    SUBA  #$03 ; Sub 3
    BHS   SUB_LOOP ; C=0
    INCA ; Add 1...
    BNE   A_NE_0
    ORB   #$02
    BRA   DP_THINGS
A_NE_0: ; 0x00270B, $F70B
    INCA
    BNE   SET_B_BIT4 ; If not 0
    ORB   #$01 ; Set bit.
    BRA   DP_THINGS ; Always taken.
SET_B_BIT4: ; 0x002712, $F712
    ORB   #$04
DP_THINGS: ; 0x002714, $F714
    TFR   DP>A ; A=DP
    TFR   B>DP ; DP=B
RUG_MATCH_EITHER_ACTIVE: ; 0x002718, $F718
    LDB   #$38
    STB   WATCHDOG
    CLRB
NOT_COLUMN_RUG_MATCH: ; 0x00271E, $F71E
    EXG   X-D ; Put screen back to X.
    CMPX  #$C000 ; Is end of screeen.
    LBNE  COMPARE_RUG_LOOP ; No, loop.
    LEAY  -1,Y ; Rug pattern finished, minus 1 loop.
    LBNE  RUG_PATTERN_SETUP ; Repeat if not 0.
    TFR   CC>B ; RUG PATTERN CONFIRMED HERE.
    TSTB ; Test CC
    BMI   RUG_POST_ENTIRE_SET ; If bit 7 set
    LDB   #$03
    STB   BANKSWITCH
    JSR   SETUP_DP_52_49_36_48_59
    JMP   JUMP_RUG_MATCH_UNK ; Exit
RUG_POST_ENTIRE_SET: ; 0x00273D, $F73D
    BITB  #$10 ; Test for IRQ mask.
    LBNE  RUG_PATTERN_SETUP ; IRQ masked, keep going. In menu call?
    LDA   #$9E ; Init A
    TFR   DP>B
    TSTB
    BEQ   DP_IS_ZERO
BIT_0_NOT_SET: ; 0x00274A, $F74A
    INCA ; ++
    LSRB ; Get bit off B (DP)
    BLO   BIT_0_NOT_SET ; If bit 0 wasn't set
DP_IS_ZERO: ; 0x00274E, $F74E
    TFR   A>DP ; Write A to DP. 0x9E to 0xA6.
    ADDA  #$01 ; ++
    CLRB ; D=##00
    TFR   D>S ; Put S stack there.
    JSR   SETUP_DP_52_49_36_48_59 ; Setup stuff...
ROM_CHECK_START: ; 0x002758, $F758
    LDU   #$F86E ; Load U stack.
BANK_TEST_CHECK_LOOP: ; 0x00275B, $F75B
    CLR   BANKSWITCH ; Set to IO
    LDA   #$38 ; Set watchdog.
    STA   WATCHDOG
    LDA   U ; Load pointed data.
    LDB   U ; Load pointed.
    BEQ   CORRECT_CHECKSUM ; If is 0, skip check.
    ANDB  #$0F ; Get bank bits.
    STB   BANKSWITCH ; Switch to bank
    ANDA  #$70 ; Get upper bits.
    LSRA ; Shift once.
    ADDA  #$C0 ; Add value to get offset.
    CLRB ; Clear bottom byte of D.
    TFR   D>X ; Addr made to X
    LDY   #$0800 ; Set Y to check size
    TFR   U>D ; Tfr location for check...
    SUBB  #$6C ; location.lower + 2
    LSRB ; Divide by 2. This is init value.
    CLRA ; Clear A
LOOP_0X800: ; 0x002780, $F780
    ADCB  X+ ; +=, w/ carry
    LEAY  -1,Y ; --
    BNE   LOOP_0X800
    CMPB  #$80 ; If B ends up being #$80...
    BEQ   CORRECT_CHECKSUM
    TFR   CC>A ; Incorrect here.
    BITA  #$10 ; Test IRQ mask
    BEQ   WRONG_CHECKSUM_NO_IRQ ; No IRQ Mask.
RTS_INTO_BANK3_FROM_CHECK: ; 0x002790, $F790
    JMP   BANKSWITCH_TO_3 ; Go back to system menu.
CORRECT_CHECKSUM: ; 0x002793, $F793
    LEAU  1,U ; Ptr += 1
    CMPU  #$F886 ; End
    BNE   BANK_TEST_CHECK_LOOP ; Not at end.
    TFR   CC>A ; Get CC. All passed here.
    BITA  #$10 ; Test IRQ
    BNE   RTS_INTO_BANK3_FROM_CHECK ; Go back into menu?
    TFR   DP>A ; Get DP
    CMPA  #$9E ; Check if DP was originally 0
    BNE   DP_ORIGINALLY_NOT_0 ; If taken, original DP!=0
    JSR   BANKSWITCH_TO_3 ; Switch to bank.
    JSR   JMP_ROM_CHECK_PASS_STARTUP ; ROM CHECK PASS?
    BRA   L_0027D5
DP_ORIGINALLY_NOT_0: ; 0x0027AF, $F7AF
    LDB   #$40 ; LED 4+2
    BSR   WRITE_B_TO_ROM_DATA_PIA_REGS+BANK3 ; Turn on.
    JSR   $C003
    BRA   L_0027D5
WRITE_B_TO_ROM_DATA_PIA_REGS+BANK3: ; 0x0027B8, $F7B8
    LDX   #$CC00
    STB   X ; Write to ROM_DATA_A
    STB   2,X ; And B
    CLR   BANKSWITCH ; Change to IO bank.
DISPLAY_MESSAGE_WAIT: ; 0x0027C2, $F7C2
    LDA   #$38
    STA   WATCHDOG ; Clear watchdog...
    LEAX  -1,X
    BNE   DISPLAY_MESSAGE_WAIT
    JMP   BANKSWITCH_TO_3 ; Switch to bank 3, abuse RTS
WRONG_CHECKSUM_NO_IRQ: ; 0x0027CE, $F7CE
    LDB   #$80 ; LED 3+1
    BSR   WRITE_B_TO_ROM_DATA_PIA_REGS+BANK3 ; Turn on.
    JSR   JMP_SUCCESS?
L_0027D5: ; 0x0027D5, $F7D5
    JSR   JMP_SRAM_CHECK_UNK ; SRAM check to see if menu?
    JMP   DEFENDER_GAME_START? ; Goto game if SRAM check didn't take over.
STORE_B@X_BANK0: ; 0x0027DB, $F7DB
    PSHS  A,CC ; Save A,CC
    LDA   BANK_VAL_DP ; Load bank
    PSHS  A ; Push to the stack to save.
    CLR   BANK_VAL_DP ; Set to bank 0
    CLR   BANKSWITCH
    STB   X ; Store B to X
RESTORE_BANK+A+CC_@S: ; 0x0027E8, $F7E8
    PULS  A
    STA   BANK_VAL_DP
    STA   BANKSWITCH
    PULS  CC,A,PC ; Restore regs. RTS
LOAD_B@X_BANK0: ; 0x0027F1, $F7F1
    PSHS  A,CC ; Save A,CC
    LDA   BANK_VAL_DP
    PSHS  A ; Push current bank to save.
    CLR   BANK_VAL_DP ; Set to bank 0.
    CLR   BANKSWITCH
    LDB   X ; Load B
    BRA   RESTORE_BANK+A+CC_@S ; Restore last bank
SETUP_DP_52_49_36_48_59: ; 0x002800, $F800
    PSHS  B,A ; Save B,A
    CLR   SENTENCE_PTR_WORD_ON ; Clear
    CLR   $49
    LDA   #$03
    STA   BANK_VAL_DP ; Bank info.
    STA   $48 ; Set
    LDD   #$FFFF
    STD   TEXT_PTR_UNK ; Set
    PULS  A,B,PC ; Get reg, RTS.
GET_DATA_FROM_SRAM: ; 0x002813, $F813
    LDA   1,X ; Get val at X+1
    ANDA  #$0F ; Bottom bits.
    PSHS  A ; Save
    LDA   X++ ; Get val, X+=2
    ASLA ; Lower bits higher.
    ASLA
    ASLA
    ASLA
    ADDA  S+ ; Get bottom bits, fix stack.
    RTS ; RTS
GET_DATA_FROM_SRAM_@X: ; 0x002822, $F822
    PSHS  B ; Save B.
    LDB   BANK_VAL_DP ; Get bank.
    PSHS  B ; Save
    CLR   BANK_VAL_DP ; Bank 0.
    CLR   BANKSWITCH ; Bank 0.
    BSR   GET_DATA_FROM_SRAM ; Get data. X+=2
    PULS  B
    STB   BANK_VAL_DP ; Restore bank from stack.
    STB   BANKSWITCH
    PULS  B,PC ; Rest+ret
GET_DATA_FROM_SRAM@X_IN_AB: ; 0x002838, $F838
    BSR   GET_DATA_FROM_SRAM_@X
GET_DATA_FROM_SRAM@X_IN_B,X++: ; 0x00283A, $F83A
    PSHS  A ; INFO: X+=2
    BSR   GET_DATA_FROM_SRAM_@X
    TFR   A>B
    PULS  A,PC
STORE_A_TO_SRAM_@X: ; 0x002842, $F842
    PSHS  A ; Store low bits.
    STA   1,X ; above
    LSRA ; Shift high bits low
    LSRA
    LSRA
    LSRA
    STA   X++ ; Store at X
    PULS  A,PC ; Return
STORE_A_TO_SRAM_@X_BANKED: ; 0x00284E, $F84E
    PSHS  B ; Save B
    LDB   BANK_VAL_DP ; Get bank
    PSHS  B ; Save bank
    CLR   BANK_VAL_DP
    CLR   BANKSWITCH ; Set to IO bank.
    BSR   STORE_A_TO_SRAM_@X ; Write
    PULS  B ; Restore bank.
    STB   BANK_VAL_DP
    STB   BANKSWITCH
    PULS  B,PC ; RTS
L_002864: ; 0x002864, $F864
    BSR   STORE_A_TO_SRAM_@X_BANKED
L_002866: ; 0x002866, $F866
    PSHS  A
    TFR   B>A
    BSR   STORE_A_TO_SRAM_@X_BANKED
    PULS  A,PC
BANK_CHECK_DATA: ; 0x00286E, $F86E
    .db $20 ; BANK CHECK ARRAY, FMT[-AAABBBB, A=Addr*0x200+0xC000,B=BANK]
    .db $00
    .db $40
    .db $50
    .db $60
    .db $70
    .db $30
    .db $00
    .db $00
    .db $00
    .db $07
    .db $00
    .db $03
    .db $00
    .db $02
    .db $00
    .db $01
    .db $00
    .db $13
    .db $00
    .db $12
    .db $00
    .db $11
    .db $00 ; END OF DATA
    .db $E5
    .db $91
    .db $00
    .db $E8
    .db $00
    .db $00
    .db $00
    .db $00
    .db $E8
    .db $C1
    .db $00
    .db $F8
    .db $E9
    .db $1F
    .db $00
    .db $F8
    .db $D8
    .db $4E
    .db $00
    .db $00
    .db $D8
    .db $39
    .db $00
    .db $00
    .db $E8
    .db $97
    .db $00
    .db $E8
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $D4
    .db $4C
    .db $00
    .db $00
    .db $D4
    .db $75
    .db $02
    .db $00
    .db $D4
    .db $3D
    .db $00
    .db $00
    .db $D4
    .db $6E
    .db $02
    .db $00
    .db $D4
    .db $7C
    .db $02
    .db $00
    .db $00
INIT_DATA_FOR_7F5: ; 0x0028BF, $F8BF
    .db $00
    .db $07
    .db $28
    .db $2F
    .db $81
    .db $A4
    .db $15
    .db $C7
    .db $FF
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $05
    .db $08
    .db $F9
    .db $FB
    .db $FA
    .db $23
    .db $D1
    .db $93
    .db $D1
    .db $1F
    .db $04
    .db $08
    .db $FA
    .db $4B
    .db $FA
    .db $4B
    .db $D1
    .db $39
    .db $D1
    .db $6B
    .db $04
    .db $08
    .db $FA
    .db $6B
    .db $FA
    .db $6B
    .db $D1
    .db $39
    .db $D1
    .db $6B
    .db $01
    .db $01
    .db $F8
    .db $F6
    .db $F8
    .db $F6
    .db $D8
    .db $DB
    .db $D8
    .db $DB
    .db $00
    .db $04
    .db $08
    .db $FA
    .db $8B
    .db $FA
    .db $AB
    .db $D1
    .db $39
    .db $D1
    .db $6B
    .db $02
    .db $08
    .db $FA
    .db $CB
    .db $FA
    .db $DB
    .db $D0
    .db $F9
    .db $D1
    .db $0B
    .db $02
    .db $08
    .db $FA
    .db $EB
    .db $FA
    .db $FB
    .db $D0
    .db $F9
    .db $D1
    .db $0B
    .db $02
    .db $08
    .db $FB
    .db $0B
    .db $FB
    .db $1B
    .db $D0
    .db $F9
    .db $D1
    .db $0B
    .db $02
    .db $08
    .db $FB
    .db $2B
    .db $FB
    .db $3B
    .db $D0
    .db $F9
    .db $D1
    .db $0B
    .db $04
    .db $08
    .db $FB
    .db $4B
    .db $FB
    .db $6B
    .db $D1
    .db $39
    .db $D1
    .db $6B
    .db $04
    .db $08
    .db $FB
    .db $8B
    .db $FB
    .db $AB
    .db $D1
    .db $39
    .db $D1
    .db $6B
    .db $04
    .db $08
    .db $FB
    .db $CB
    .db $FB
    .db $EB
    .db $D1
    .db $39
    .db $D1
    .db $6B
    .db $04
    .db $08
    .db $FC
    .db $0B
    .db $FC
    .db $2B
    .db $D1
    .db $39
    .db $D1
    .db $6B
    .db $04
    .db $08
    .db $CC
    .db $90
    .db $CC
    .db $90
    .db $D1
    .db $39
    .db $D1
    .db $6B
    .db $02
    .db $03
    .db $CC
    .db $B0
    .db $CC
    .db $B6
    .db $D1
    .db $F1
    .db $D2
    .db $0D
    .db $02
    .db $03
    .db $CC
    .db $BC
    .db $CC
    .db $C2
    .db $D1
    .db $F1
    .db $D2
    .db $0D
    .db $08
    .db $01
    .db $F9
    .db $73
    .db $FF
    .db $FF
    .db $FF
    .db $FF
    .db $FF
    .db $FF
    .db $FF
    .db $FF
    .db $03
    .db $04
    .db $CC
    .db $C8
    .db $CC
    .db $D4
    .db $D1
    .db $AD
    .db $D1
    .db $D7
    .db $05
    .db $08
    .db $CC
    .db $E0
    .db $CD
    .db $08
    .db $D1
    .db $93
    .db $D1
    .db $1F
    .db $05
    .db $08
    .db $CD
    .db $30
    .db $CD
    .db $58
    .db $D1
    .db $93
    .db $D1
    .db $1F
    .db $05
    .db $08
    .db $CD
    .db $80
    .db $CD
    .db $A8
    .db $D1
    .db $93
    .db $D1
    .db $1F
    .db $06
    .db $04
    .db $CD
    .db $D0
    .db $CD
    .db $E8
    .db $D2
    .db $1F
    .db $D2
    .db $60
    .db $06
    .db $04
    .db $CE
    .db $00
    .db $CE
    .db $18
    .db $D2
    .db $1F
    .db $D2
    .db $60
    .db $06
    .db $04
    .db $CE
    .db $30
    .db $CE
    .db $48
    .db $D2
    .db $1F
    .db $D2
    .db $60
    .db $08
    .db $06
    .db $CE
    .db $60
    .db $CE
    .db $90
    .db $D2
    .db $8E
    .db $D2
    .db $DF
    .db $08
    .db $06
    .db $CE
    .db $C0
    .db $CE
    .db $F0
    .db $D2
    .db $8E
    .db $D2
    .db $DF
    .db $05
    .db $04
    .db $CF
    .db $20
    .db $03
    .db $03
    .db $CF
    .db $34
    .db $06
    .db $06
    .db $CF
    .db $3D
    .db $CF
    .db $61
    .db $D3
    .db $3D
    .db $D3
    .db $50
    .db $06
    .db $06
    .db $CF
    .db $85
    .db $CF
    .db $A9
    .db $D3
    .db $3D
    .db $D3
    .db $50
    .db $08
    .db $06
    .db $CF
    .db $CD
    .db $CF
    .db $CD
    .db $F5
    .db $22
    .db $F5
    .db $7B
    .db $00
    .db $00
    .db $03
    .db $03
    .db $00
    .db $00
    .db $03
    .db $30
    .db $0C
    .db $3C
    .db $0C
    .db $08
    .db $38
    .db $30
    .db $00
    .db $00
    .db $C0
    .db $C0
    .db $C8
    .db $78
    .db $78
    .db $70
    .db $70
    .db $70
    .db $00
    .db $30
    .db $03
    .db $03
    .db $30
    .db $30
    .db $03
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $30
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $30
    .db $00
    .db $03
    .db $30
    .db $30
    .db $03
    .db $03
    .db $30
    .db $00
    .db $CC
    .db $CC
    .db $CC
    .db $87
    .db $87
    .db $07
    .db $07
    .db $07
    .db $00
    .db $03
    .db $80
    .db $80
    .db $83
    .db $03
    .db $00
    .db $00
    .db $00
    .db $00
    .db $30
    .db $30
    .db $00
    .db $00
    .db $30
    .db $03
    .db $00
    .db $00
    .db $0D
    .db $6C
    .db $6C
    .db $0D
    .db $00
    .db $00
    .db $06
    .db $E6
    .db $C8
    .db $83
    .db $82
    .db $C8
    .db $EC
    .db $06
    .db $60
    .db $6D
    .db $8C
    .db $28
    .db $28
    .db $8C
    .db $6D
    .db $60
    .db $00
    .db $00
    .db $E0
    .db $C6
    .db $C6
    .db $E0
    .db $00
    .db $00
    .db $00
    .db $00
    .db $02
    .db $22
    .db $24
    .db $02
    .db $00
    .db $00
    .db $02
    .db $22
    .db $44
    .db $44
    .db $24
    .db $42
    .db $22
    .db $00
    .db $20
    .db $22
    .db $44
    .db $44
    .db $24
    .db $42
    .db $22
    .db $00
    .db $00
    .db $00
    .db $20
    .db $22
    .db $22
    .db $20
    .db $00
    .db $00
    .db $00
    .db $0E
    .db $00
    .db $D8
    .db $00
    .db $0E
    .db $00
    .db $00
    .db $0F
    .db $08
    .db $8C
    .db $C8
    .db $8C
    .db $08
    .db $0F
    .db $00
    .db $00
    .db $0E
    .db $80
    .db $C8
    .db $80
    .db $0E
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $D0
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $0D
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $E0
    .db $08
    .db $8C
    .db $08
    .db $E0
    .db $00
    .db $00
    .db $F0
    .db $80
    .db $C8
    .db $8C
    .db $C8
    .db $80
    .db $F0
    .db $00
    .db $00
    .db $E0
    .db $00
    .db $8D
    .db $00
    .db $E0
    .db $00
    .db $00
    .db $33
    .db $43
    .db $43
    .db $87
    .db $87
    .db $07
    .db $07
    .db $07
    .db $00
    .db $00
    .db $80
    .db $80
    .db $80
    .db $00
    .db $00
    .db $00
    .db $03
    .db $04
    .db $04
    .db $08
    .db $08
    .db $00
    .db $00
    .db $00
    .db $30
    .db $30
    .db $38
    .db $78
    .db $78
    .db $70
    .db $70
    .db $70
    .db $33
    .db $43
    .db $43
    .db $87
    .db $87
    .db $77
    .db $77
    .db $77
    .db $00
    .db $00
    .db $80
    .db $80
    .db $80
    .db $00
    .db $00
    .db $00
    .db $03
    .db $04
    .db $04
    .db $08
    .db $08
    .db $07
    .db $07
    .db $07
    .db $30
    .db $30
    .db $38
    .db $78
    .db $78
    .db $70
    .db $70
    .db $70
    .db $03
    .db $03
    .db $83
    .db $87
    .db $87
    .db $07
    .db $07
    .db $07
    .db $30
    .db $40
    .db $40
    .db $80
    .db $80
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $08
    .db $08
    .db $08
    .db $00
    .db $00
    .db $00
    .db $33
    .db $34
    .db $34
    .db $78
    .db $78
    .db $70
    .db $70
    .db $70
    .db $03
    .db $03
    .db $83
    .db $87
    .db $87
    .db $07
    .db $07
    .db $07
    .db $30
    .db $40
    .db $40
    .db $80
    .db $80
    .db $70
    .db $70
    .db $70
    .db $00
    .db $00
    .db $08
    .db $08
    .db $08
    .db $00
    .db $00
    .db $00
    .db $33
    .db $34
    .db $34
    .db $78
    .db $78
    .db $77
    .db $77
    .db $77
    .db $08
    .db $08
    .db $DD
    .db $DE
    .db $DE
    .db $DE
    .db $DD
    .db $00
    .db $88
    .db $88
    .db $DD
    .db $EE
    .db $FE
    .db $EE
    .db $DD
    .db $00
    .db $88
    .db $88
    .db $D8
    .db $D8
    .db $D8
    .db $D0
    .db $D0
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $0D
    .db $0D
    .db $0D
    .db $0D
    .db $0D
    .db $00
    .db $88
    .db $88
    .db $DD
    .db $EE
    .db $EF
    .db $EE
    .db $DD
    .db $00
    .db $88
    .db $88
    .db $DD
    .db $ED
    .db $ED
    .db $ED
    .db $DD
    .db $00
    .db $80
    .db $80
    .db $80
    .db $80
    .db $80
    .db $00
    .db $00
    .db $00
    .db $00
    .db $08
    .db $DD
    .db $DE
    .db $DE
    .db $DE
    .db $DD
    .db $00
    .db $00
    .db $88
    .db $DD
    .db $EE
    .db $FE
    .db $EE
    .db $DD
    .db $00
    .db $00
    .db $88
    .db $D8
    .db $D8
    .db $D8
    .db $D8
    .db $D0
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $0D
    .db $0D
    .db $0D
    .db $0D
    .db $0D
    .db $00
    .db $00
    .db $88
    .db $DD
    .db $EE
    .db $EF
    .db $EE
    .db $DD
    .db $00
    .db $00
    .db $88
    .db $DD
    .db $ED
    .db $ED
    .db $ED
    .db $DD
    .db $00
    .db $00
    .db $80
    .db $80
    .db $80
    .db $80
    .db $80
    .db $00
    .db $00
    .db $00
    .db $00
    .db $DD
    .db $DE
    .db $DE
    .db $DE
    .db $DD
    .db $00
    .db $00
    .db $00
    .db $DD
    .db $EE
    .db $FE
    .db $EE
    .db $DD
    .db $00
    .db $00
    .db $00
    .db $D8
    .db $D8
    .db $D8
    .db $D8
    .db $D8
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $0D
    .db $0D
    .db $0D
    .db $0D
    .db $0D
    .db $00
    .db $00
    .db $00
    .db $DD
    .db $EE
    .db $EF
    .db $EE
    .db $DD
    .db $00
    .db $00
    .db $00
    .db $DD
    .db $ED
    .db $ED
    .db $ED
    .db $DD
    .db $00
    .db $00
    .db $00
    .db $80
    .db $80
    .db $80
    .db $80
    .db $80
    .db $00
    .db $00
    .db $00
    .db $DD
    .db $DE
    .db $DE
    .db $DE
    .db $DD
    .db $00
    .db $00
    .db $00
    .db $DD
    .db $EE
    .db $FE
    .db $EE
    .db $DD
    .db $88
    .db $00
    .db $00
    .db $D0
    .db $D8
    .db $D8
    .db $D8
    .db $D8
    .db $88
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $0D
    .db $0D
    .db $0D
    .db $0D
    .db $0D
    .db $00
    .db $00
    .db $00
    .db $DD
    .db $EE
    .db $EF
    .db $EE
    .db $DD
    .db $88
    .db $00
    .db $00
    .db $DD
    .db $ED
    .db $ED
    .db $ED
    .db $DD
    .db $88
    .db $00
    .db $00
    .db $00
    .db $80
    .db $80
    .db $80
    .db $80
    .db $80
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
L_002C60: ; 0x002C60, $FC60
    JMP   L_002C69
L_002C63: ; 0x002C63, $FC63
    JMP   L_002CCC
L_002C66: ; 0x002C66, $FC66
    JMP   L_002D2D
L_002C69: ; 0x002C69, $FC69
    PSHS  U,Y,B,A
    LDD   2,X
    PSHS  B,A
    LDD   L_002F9D
    STD   2,X
    STX   $65
    LDD   10,X
    SUBD  $20
    CMPD  #$2600
    BHI   L_002C97
    LDY   $E2
    BEQ   L_002C8E
L_002C85: ; 0x002C85, $FC85
    LEAY  64,Y
    CMPY  #$A000
    BNE   L_002C92
L_002C8E: ; 0x002C8E, $FC8E
    LDY   #$9C00
L_002C92: ; 0x002C92, $FC92
    CMPY  $E2
    BNE   L_002C9D
L_002C97: ; 0x002C97, $FC97
    PULS  A,B
    STD   2,X
    BRA   L_002CCA
L_002C9D: ; 0x002C9D, $FC9D
    LDA   Y
    BMI   L_002C85
    BEQ   L_002CA6
    JSR   L_002DD5
L_002CA6: ; 0x002CA6, $FCA6
    LDA   $BA
    BITA  #$80
    BNE   L_002CB2
    LDD   L_002FDD
    JSR   L_002FDA
L_002CB2: ; 0x002CB2, $FCB2
    LDA   20,X
    ORA   #$02
    STA   20,X
    LDD   #$AF00
    STD   Y
    PULS  A,B
    STD   2,Y
    LEAU  64,Y
    STU   4,Y
    STX   10,Y
L_002CCA: ; 0x002CCA, $FCCA
    PULS  A,B,Y,U,PC
L_002CCC: ; 0x002CCC, $FCCC
    PSHS  U,Y,B,A
    LDD   10,X
    SUBD  $20
    CMPA  #$26
    BHI   L_002D2B
    STD   $E9
    LDY   $E2
    BEQ   L_002CE6
L_002CDD: ; 0x002CDD, $FCDD
    LEAY  64,Y
    CMPY  #$A000
    BNE   L_002CEA
L_002CE6: ; 0x002CE6, $FCE6
    LDY   #$9C00
L_002CEA: ; 0x002CEA, $FCEA
    CMPY  $E2
    BEQ   L_002D2B
    LDA   Y
    BMI   L_002CDD
    BEQ   L_002CF8
    JSR   L_002DD5
L_002CF8: ; 0x002CF8, $FCF8
    STY   $E2
    LDD   #$0100
    STD   Y
    LDD   2,X
    STD   2,Y
    LEAU  64,Y
    STU   4,Y
    LDD   $E9
    ASLB
    ROLA
    ASLB
    ROLA
    LDB   12,X
    STD   8,Y
    SUBD  $F8
    LDU   2,Y
    ADDA  U
    BHS   L_002D23
    ADDB  1,U
    BHS   L_002D23
    LDD   $F8
    BRA   L_002D29
L_002D23: ; 0x002D23, $FD23
    LDD   U
    LSRA
    LSRB
    ADDD  8,Y
L_002D29: ; 0x002D29, $FD29
    STD   6,Y
L_002D2B: ; 0x002D2B, $FD2B
    PULS  A,B,Y,U,PC
L_002D2D: ; 0x002D2D, $FD2D
    LDY   #$9C00
L_002D31: ; 0x002D31, $FD31
    LDA   $BA
    BITA  #$04
    BEQ   L_002D43
    LDA   Y
    BMI   L_002D91
    LDD   #$0000
    STD   Y
    JMP   L_002DC9
L_002D43: ; 0x002D43, $FD43
    LDD   Y
    LBEQ  L_002DC9
    BMI   L_002D7E
    ADDD  #$00AA
    STD   Y
    CMPA  #$30
    BLS   L_002D5E
    JSR   L_002DD5
    LDD   #$0000
    STD   Y
    BRA   L_002DC9
L_002D5E: ; 0x002D5E, $FD5E
    LDD   $20
    ANDB  #$C0
    PSHS  B,A
    LDD   $22
    ANDB  #$C0
    SUBD  S++
    ASLB
    ROLA
    ASLB
    ROLA
    PSHS  A
    LDA   6,Y
    ADDA  S
    STA   6,Y
    LDA   8,Y
    ADDA  S+
    STA   8,Y
    BRA   L_002DC3
L_002D7E: ; 0x002D7E, $FD7E
    SUBD  #$0100
    STD   Y
    BPL   L_002D91
    LDX   10,Y
    LDD   10,X
    SUBD  $20
    ADDA  #$0C
    BITA  #$C0
    BEQ   L_002DA9
L_002D91: ; 0x002D91, $FD91
    LDD   #$0000
    STD   Y
    LDD   2,Y
    LDX   10,Y
    STD   2,X
    LDA   20,X
    ANDA  #$FD
    STA   20,X
    JSR   L_002DD5
    BRA   L_002DC9
L_002DA9: ; 0x002DA9, $FDA9
    SUBA  #$0C
    ASLB
    ROLA
    ASLB
    ROLA
    LDB   12,X
    STD   8,Y
    LDB   #$DA
    MUL
    ASLA
    LDU   2,Y
    LDB   U
    MUL
    LDB   1,U
    LSRB
    ADDD  8,Y
    STD   6,Y
L_002DC3: ; 0x002DC3, $FDC3
    JSR   L_002DD5
    JSR   L_002DEF
L_002DC9: ; 0x002DC9, $FDC9
    LEAY  64,Y
    CMPY  #$A000
    LBNE  L_002D31
    RTS
L_002DD5: ; 0x002DD5, $FDD5
    PSHS  X,B,A
    LDD   #$0000
    LEAX  64,Y
    STX   $F3
    LDX   4,Y
    CMPX  $F3
    BEQ   L_002DED
L_002DE5: ; 0x002DE5, $FDE5
    STD   [X++]
    CMPX  $F3
    BNE   L_002DE5
    STX   4,Y
L_002DED: ; 0x002DED, $FDED
    PULS  A,B,X,PC
L_002DEF: ; 0x002DEF, $FDEF
    PSHS  U,Y,X,B,A
    STY   $F6
    LDA   Y
    ANDA  #$7F
    STA   $E7
    LEAU  64,Y
    CLR   $E6
    LDX   2,Y
    LDD   2,X
    STD   $F3
    LDD   X
    STA   $F1
    STB   $F2
    BITB  #$01
    BNE   L_002E14
    LDX   #$FF27
    BRA   L_002E17
L_002E14: ; 0x002E14, $FE14
    LDX   #$FEF3
L_002E17: ; 0x002E17, $FE17
    STX   $ED
    LDD   6,Y
    SUBD  8,Y
    STA   $E4
    LSRB
    STB   $E5
    ROL   $E6
    LDA   $E7
    LDB   $E4
    MUL
    STD   $E9
    LDB   6,Y
    CLRA
    SUBD  $E9
    STD   $E9
L_002E32: ; 0x002E32, $FE32
    TSTA
    BEQ   L_002E4D
    LDD   $F3
    ADDB  $F2
    ADCA  #$00
    STD   $F3
    DEC   $F1
    LBEQ  L_002F35
    LDD   $E9
    ADDB  $E7
    ADCA  #$00
    STD   $E9
    BRA   L_002E32
L_002E4D: ; 0x002E4D, $FE4D
    CMPB  #$98
    LBHI  L_002F35
    LDA   $E7
    ASLA
    STA   $E8
    LDB   $E5
    MUL
    STD   $EB
    LDB   7,Y
    CLRA
    SUBD  $EB
    SUBB  $E6
    ADCA  #$00
    CLR   $F5
L_002E68: ; 0x002E68, $FE68
    TSTA
    BNE   L_002E6F
    CMPB  #$2A
    BHS   L_002E7F
L_002E6F: ; 0x002E6F, $FE6F
    INC   $F5
    DEC   $F2
    DEC   $F2
    LBLE  L_002F35
    ADDB  $E8
    ADCA  #$00
    BRA   L_002E68
L_002E7F: ; 0x002E7F, $FE7F
    STD   $EB
    LDA   $F2
    ANDA  #$FE
    LDX   #$FF48
    LDX   A,X
    STX   $EF
    LDX   $F3
    ASL   $F5
    LDA   $EA
L_002E92: ; 0x002E92, $FE92
    LDB   $F5
    ABX
    LDB   $EC
    JMP   [R_A0EF]
    STD   --U
    LDY   X++
    STY   [U]
    ADDB  $E8
    BLO   L_002EFD
    STD   --U
    LDY   X++
    STY   [U]
    ADDB  $E8
    BLO   L_002F03
    STD   --U
    LDY   X++
    STY   [U]
    ADDB  $E8
    BLO   L_002F09
    STD   --U
    LDY   X++
    STY   [U]
    ADDB  $E8
    BLO   L_002F0F
    STD   --U
    LDY   X++
    STY   [U]
    ADDB  $E8
    BLO   L_002F15
    STD   --U
    LDY   X++
    STY   [U]
    ADDB  $E8
    BLO   L_002F1B
    STD   --U
    LDY   X++
    STY   [U]
    ADDB  $E8
    BLO   L_002F21
    JMP   [R_A0ED]
    BLO   L_002F25
    STD   --U
    LDB   X+
    STB   [U]
    BRA   L_002F27
L_002EFD: ; 0x002EFD, $FEFD
    LEAX  12,X
    JMP   [R_A0ED]
L_002F03: ; 0x002F03, $FF03
    LEAX  10,X
    JMP   [R_A0ED]
L_002F09: ; 0x002F09, $FF09
    LEAX  8,X
    JMP   [R_A0ED]
L_002F0F: ; 0x002F0F, $FF0F
    LEAX  6,X
    JMP   [R_A0ED]
L_002F15: ; 0x002F15, $FF15
    LEAX  4,X
    JMP   [R_A0ED]
L_002F1B: ; 0x002F1B, $FF1B
    LEAX  2,X
    JMP   [R_A0ED]
L_002F21: ; 0x002F21, $FF21
    JMP   [R_A0ED]
L_002F25: ; 0x002F25, $FF25
    LEAX  1,X
L_002F27: ; 0x002F27, $FF27
    DEC   $F1
    BEQ   L_002F35
    ADDA  $E7
    BLO   L_002F35
    CMPA  #$98
    LBLS  L_002E92
L_002F35: ; 0x002F35, $FF35
    LDX   $F6
    STU   4,X
    LDD   6,X
    CMPA  #$98
    BHI   L_002F46
    SUBB  $E6
    LDX   #$0000
    STX   D,X
L_002F46: ; 0x002F46, $FF46
    PULS  A,B,X,Y,U,PC
    .db $FE
    .db $EF
    .db $FE
    .db $E3
    .db $FE
    .db $D7
    .db $FE
    .db $CB
    .db $FE
    .db $BF
    .db $FE
    .db $B3
    .db $FE
    .db $A7
    .db $FE
    .db $9B
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
L_002F9D: ; 0x002F9D, $FF9D
    .db $F8
    .db $EC
L_002F9F: ; 0x002F9F, $FF9F
    .db $F8
    .db $6E
L_002FA1: ; 0x002FA1, $FFA1
    JMP   GET_DATA_FROM_SRAM_@X
JMP_GET_DATA_FROM_SRAM@X_IN_B: ; 0x002FA4, $FFA4
    JMP   GET_DATA_FROM_SRAM@X_IN_B,X++
JMP_GET_DATA_FROM_SRAM@X_IN_AB: ; 0x002FA7, $FFA7
    JMP   GET_DATA_FROM_SRAM@X_IN_AB
JMP_STORE_A_TO_SRAM_@X_BANKED: ; 0x002FAA, $FFAA
    JMP   STORE_A_TO_SRAM_@X_BANKED
L_002FAD: ; 0x002FAD, $FFAD
    JMP   L_002866
L_002FB0: ; 0x002FB0, $FFB0
    JMP   L_002864
    JMP   TEXT_CHAR_TO_SCREEN
    JMP   L_00257B
L_002FB9: ; 0x002FB9, $FFB9
    JMP   SAVE_UXBA+BANK_UNK
JMP_CLEAR_ALL_SCREEN: ; 0x002FBC, $FFBC
    JMP   CLEAR_ALL_SCREEN
L_002FBF: ; 0x002FBF, $FFBF
    JMP   ROM_CHECK_START
L_002FC2: ; 0x002FC2, $FFC2
    JMP   CORRECT_CHECKSUM
JMP_RUG_SETUP: ; 0x002FC5, $FFC5
    JMP   RUG_PATTERN_SETUP
L_002FC8: ; 0x002FC8, $FFC8
    JMP   L_0027D5
    JMP   GOTO_B7-C000
JMP_GOTO_PAST_JSR: ; 0x002FCE, $FFCE
    JMP   GOTO_PAST_JSR
L_002FD1: ; 0x002FD1, $FFD1
    JMP   L_0024BE
JMP_STORE_B@X_BANK0: ; 0x002FD4, $FFD4
    JMP   STORE_B@X_BANK0
LOAD_B@X_BANK0: ; 0x002FD7, $FFD7
    JMP   LOAD_B@X_BANK0
L_002FDA: ; 0x002FDA, $FFDA
    JMP   L_00054D
L_002FDD: ; 0x002FDD, $FFDD
    .db $D4
    .db $EE
    .db $2A
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $F6 ; Interrupt vectors.
    .db $1F
    .db $F6
    .db $1F
    .db $F6
    .db $1F
    .db $F6
    .db $1F
    .db $A0 ; IRQ, Goes to $A08F in RAM.
    .db $8F
    .db $F6
    .db $1F
    .db $F6
    .db $1F
    .db $F6
    .db $1F

;Bank 1
	.org $C000

    JMP   L_003006
    JMP   L_003CAD
L_003006: ; 0x003006, $C006
    JSR   FIND_IDK
    LDA   #$FF
    STA   $BA
    JSR   L_001052
    LDA   $37
    STA   R_A183
    CLRA
    STA   R_A184
    STA   R_A178
    LDA   $B7
    LBEQ  L_003677
    LDX   #$C8F4
    LDA   #$00
    JSR   L_000055
    LDY   #$A1C2
    LDA   #$01
L_003030: ; 0x003030, $C030
    STA   $06
    STY   R_A17B
    LDX   #$B2B4
    JSR   L_003147
    LBHS  L_00312A
    INC   R_A178
    JSR   CLEAR_ALL_SCREEN
    LDA   $06
    DECA
    BNE   L_003050
    JSR   WATCHDOG_PTR_ETC
    BRA   L_003053
L_003050: ; 0x003050, $C050
    JSR   L_0008EA
L_003053: ; 0x003053, $C053
    LDB   #$85
    STB   $27
    LDA   #$3E
    LDX   #$B260
    JSR   L_003147
    BHS   L_003063
    LDA   #$3D
L_003063: ; 0x003063, $C063
    LDX   #$CC02
    LDB   #$3F
    JSR   JMP_STORE_B@X_BANK0
    LDB   #$24
    JSR   JMP_STORE_B@X_BANK0
L_003070: ; 0x003070, $C070
    DECB
    BNE   L_003070
    LDB   #$3F
    JSR   JMP_STORE_B@X_BANK0
    TFR   A>B
    JSR   JMP_STORE_B@X_BANK0
    LDU   #$C0ED
    LDA   $06
    ASLA
    LEAU  A,U
    LDX   #$3E38
    JSR   JMP_GOTO_PAST_JSR
    .db $C0
    .db $02
    .db $02
    LDU   #$C0FD
    LDX   #$1458
    JSR   JMP_GOTO_PAST_JSR
    .db $C0
    .db $02
    .db $02
    LDD   #$412F
    STD   R_0000
    LDA   #$40
    STD   $02
    STD   $04
    JSR   L_003158
    LDA   #$28
    STA   R_A17D
    LDX   #$C1DC
    LDA   #$00
    JSR   L_000055
    LDX   #$C1E7
    LDA   #$00
    JSR   L_000055
    LDX   #$C1FA
    LDA   #$00
    JSR   L_000055
    CLR   R_A17A
    JSR   L_00316B
L_0030CB: ; 0x0030CB, $C0CB
    CLRA
    STA   R_A186
    STA   R_A185
L_0030D2: ; 0x0030D2, $C0D2
    LDA   #$01
    LDX   #$C0DA
    JMP   L_0024BE
    LDA   $7B
    BITA  #$01
    BNE   L_0030F4
    TST   R_A17D
    BEQ   L_00310E
    INC   R_A186
    LDA   R_A186
    CMPA  #$05
    BNE   L_0030D2
    STA   R_A185
    BRA   L_0030D2
L_0030F4: ; 0x0030F4, $C0F4
    CLR   R_A186
    TST   R_A185
    BEQ   L_0030D2
    LDA   #$14
    STA   R_A17D
    INC   R_A17A
    JSR   L_00316B
    LDA   R_A17A
    CMPA  #$03
    BNE   L_0030CB
L_00310E: ; 0x00310E, $C10E
    JSR   FIND_IDK
    LDX   #$B2A8
    LDU   #$B254
    JSR   L_003194
    LDX   #$C471
    BSR   L_003147
    BHS   L_00312A
    LDX   #$C465
    LDU   #$C411
    JSR   L_003194
L_00312A: ; 0x00312A, $C12A
    LDY   #$A1FF
    LDA   $06
    INCA
    CMPA  #$03
    LBNE  L_003030
    TST   R_A178
    BNE   L_003144
    LDA   #$FF
    LDX   #$C144
    JMP   L_0024BE
L_003144: ; 0x003144, $C144
    JMP   L_003263
L_003147: ; 0x003147, $C147
    PSHS  X,B,A
    JSR   GET_DATA_FROM_SRAM@X_IN_AB
    CMPD  1,Y
    BNE   L_003156
    JSR   GET_DATA_FROM_SRAM_@X
    CMPA  3,Y
L_003156: ; 0x003156, $C156
    PULS  A,B,X,PC
L_003158: ; 0x003158, $C158
    LDX   #$46AC
    LDD   #$1408
    JSR   SAVE_UXBA+BANK_UNK
    LDU   #$C0FF
    JSR   JMP_GOTO_PAST_JSR
    .db $C0
    .db $02
    .db $02
    RTS
L_00316B: ; 0x00316B, $C16B
    CLR   R_A162
    LDX   #$45B7
L_003171: ; 0x003171, $C171
    LDU   #$1111
    LDA   R_A162
    CMPA  R_A17A
    BNE   L_00317F
    LDU   #$DDDD
L_00317F: ; 0x00317F, $C17F
    LDD   #$0400
L_003182: ; 0x003182, $C182
    STU   D,X
    DECA
    BNE   L_003182
    INC   R_A162
    LEAX  2048,X
    CMPX  #$5DB7
    BNE   L_003171
    RTS
L_003194: ; 0x003194, $C194
    STU   R_A164
    LDY   R_A17B
L_00319B: ; 0x00319B, $C19B
    BSR   L_003147
    BHS   L_0031A8
    BSR   L_0031C5
    LEAX  -12,X
    CMPX  R_A164
    BHI   L_00319B
L_0031A8: ; 0x0031A8, $C1A8
    LEAX  12,X
    LDD   1,Y
    JSR   L_002864
    LDA   3,Y
    JSR   STORE_A_TO_SRAM_@X_BANKED
    LDU   #$A000
L_0031B7: ; 0x0031B7, $C1B7
    LDA   U
    JSR   STORE_A_TO_SRAM_@X_BANKED
    LEAU  2,U
    CMPU  #$A006
    BNE   L_0031B7
    RTS
L_0031C5: ; 0x0031C5, $C1C5
    PSHS  X
L_0031C7: ; 0x0031C7, $C1C7
    JSR   GET_DATA_FROM_SRAM@X_IN_AB
    LEAX  8,X
    JSR   L_002864
    LEAX  -24,X
    CMPX  S
    BEQ   L_0031DA
    LEAX  12,X
    BRA   L_0031C7
L_0031DA: ; 0x0031DA, $C1DA
    PULS  X,PC
    DEC   R_A17D
    LDA   #$3C
    LDX   #$C1DC
    JMP   L_0024BE
    LDA   $33
    BNE   L_0031EF
    LDA   $27
    BRA   L_0031F0
L_0031EF: ; 0x0031EF, $C1EF
    CLRA
L_0031F0: ; 0x0031F0, $C1F0
    STA   $33
    LDA   #$0F
    LDX   #$C1E7
    JMP   L_0024BE
    CLR   R_A179
    LDA   $7B
    BITA  #$80
    BEQ   L_003207
    LDA   #$FF
    BRA   L_003216
L_003207: ; 0x003207, $C207
    LDA   $7D
    BITA  #$01
    BEQ   L_003211
    LDA   #$01
    BRA   L_003216
L_003211: ; 0x003211, $C211
    CLR   R_A179
    BRA   L_00324A
L_003216: ; 0x003216, $C216
    CMPA  R_A179
    BNE   L_003252
    DEC   R_A17F
    BNE   L_00324A
    LDX   #$A000
    LDB   R_A17A
    ASLB
    ABX
    LDA   X
    ADDA  R_A179
    CMPA  #$3F
    BNE   L_003233
    LDA   #$5A
L_003233: ; 0x003233, $C233
    CMPA  #$5B
    BNE   L_003239
    LDA   #$40
L_003239: ; 0x003239, $C239
    STA   X
    JSR   L_003158
    LDA   R_A17E
    LSRA
    ADDA  #$05
    STA   R_A17E
    STA   R_A17F
L_00324A: ; 0x00324A, $C24A
    LDA   #$01
    LDX   #$C1FD
    JMP   L_0024BE
L_003252: ; 0x003252, $C252
    STA   R_A179
    LDA   #$37
    STA   R_A17E
    LDA   #$03
    STA   R_A17F
    BRA   L_00324A
    LDU   $FF
L_003263: ; 0x003263, $C263
    CLR   R_A162
    JSR   FIND_IDK
    JSR   L_00386F
    JSR   CLEAR_ALL_SCREEN
    JSR   WATCHDOG_PTR_ETC
    CLR   $27
    LDX   #$C8F4
    LDA   #$00
    JSR   L_000055
    JSR   L_003936
    LDU   #$C101
    LDX   #$3854
    JSR   JMP_GOTO_PAST_JSR
    .db $C0
    .db $02
    .db $02
    LDU   #$1111
    LDX   #$1E7B
    LDD   #$5F00
L_003294: ; 0x003294, $C294
    STU   D,X
    CMPA  #$41
    BNE   L_00329C
    LDA   #$1F
L_00329C: ; 0x00329C, $C29C
    DECA
    BPL   L_003294
    LDA   #$2F
    STA   $07
    STA   $0B
    STA   $12
    LDU   #$C103
    LDX   #$1886
    STX   R_A181
    LDX   #$B260
    STX   R_A164
    BSR   L_003306
    LDX   #$5986
    STX   R_A181
    LDX   #$C41D
    STX   R_A164
    BSR   L_003306
    LDA   #$3F
    STA   $32
    LDY   #$B300
    LDD   #$3C18
    STD   Y
    LDD   #$B412
    STD   2,Y
    LDD   #$3038
    JSR   TEXT_CHAR_TO_SCREEN
    LDX   #$E782
    LDA   #$00
    JSR   L_000055
    LDA   #$3C
    STA   R_A17D
    TST   R_A184
    BNE   L_003304
    TST   R_A162
    LBNE  L_003263
    DEC   R_A17D
    BEQ   L_003304
    LDA   #$0A
    LDX   #$C2EB
    JMP   L_0024BE
L_003304: ; 0x003304, $C304
    BRA   L_003351
L_003306: ; 0x003306, $C306
    LDA   #$31
    STA   $06
L_00330A: ; 0x00330A, $C30A
    CLRA
    LDY   #$A00C
    LDX   R_A164
L_003312: ; 0x003312, $C312
    JSR   LOAD_B@X_BANK0
    LEAX  1,X
    ANDB  #$0F
    BNE   L_003322
    TSTA
    BNE   L_003322
    LDB   #$40
    BRA   L_003325
L_003322: ; 0x003322, $C322
    INCA
    ADDB  #$30
L_003325: ; 0x003325, $C325
    STB   Y+
    CMPY  #$A012
    BNE   L_003312
    JSR   GET_DATA_FROM_SRAM@X_IN_AB
    STD   $08
    JSR   GET_DATA_FROM_SRAM_@X
    STA   $0A
    STX   R_A164
    LDX   R_A181
    JSR   JMP_GOTO_PAST_JSR
    .db $C0
    .db $02
    .db $02
    LEAX  10,X
    STX   R_A181
    INC   $06
    LDA   $06
    CMPA  #$39
    BNE   L_00330A
    RTS
L_003351: ; 0x003351, $C351
    JSR   FIND_IDK
    JSR   L_00343C
    LDA   #$D9
    STA   $BA
    JSR   L_003936
    LDX   #$C8F4
    LDA   #$00
    JSR   L_000055
    JSR   L_0006BC
    LDX   #$CC63
    STX   R_A196
    LDX   #$E782
    LDA   #$00
    JSR   L_000055
    LDX   #$F464
    LDA   #$00
    JSR   L_000055
    LDX   #$F43D
    LDA   #$00
    JSR   L_000055
    LDX   #$E9E3
    LDA   #$00
    JSR   L_000055
    LDX   #$C64F
    LDA   #$00
    JSR   L_000055
    JSR   $67_PTR_STUFF
    LDD   #$0000
    STD   14,X
    STD   16,X
    LDD   #$1E00
    STD   10,X
    LDD   #$DB00
    STD   12,X
    LDD   #$F901
    STD   2,X
    STX   $65
    LDD   #$6666
    STD   18,X
    STX   R_A189
    JSR   $67_PTR_STUFF
    LDD   #$0000
    STD   14,X
    STD   16,X
    LDD   #$0800
    STD   10,X
    LDD   #$5000
    STD   12,X
    LDD   #$F9C1
    STD   2,X
    STX   $65
    LDD   #$0000
    STD   18,X
    STX   R_A18B
    JSR   $67_PTR_STUFF
    LDD   #$F985
    STD   2,X
    LDD   #$1DA0
    STD   10,X
    LDD   #$4000
    STD   12,X
    LDD   #$00A0
    STD   16,X
    LDD   #$0000
    STD   14,X
    LDD   #$4433
    STD   18,X
    JSR   L_002C60
    STX   R_A18D
    LDA   #$E6
    LDX   #$C412
    JMP   L_0024BE
    LDD   #$FF50
    LDX   R_A18D
    STD   16,X
    LDX   R_A189
    STD   16,X
    LDA   #$A0
    LDX   #$C429
    JMP   L_0024BE
    LDX   #$C5F5
    LDA   #$00
    JSR   L_000055
    STX   R_A187
    LDA   #$15
    LDX   #$C475
    JMP   L_0024BE
L_00343C: ; 0x00343C, $C43C
    LDA   #$FF
    STA   $BA
    JSR   L_000805
    JSR   CLEAR_ALL_SCREEN
    LDD   #$0000
    STD   $20
    STD   $22
    JSR   JMP_GOTO_PAST_JSR
    .db $F4
    .db $FA
    .db $00
    JSR   L_0007F5
    LDA   #$DB
    STA   $BA
    LDX   #$1030
    STX   $BF
    RTS
L_003460: ; 0x003460, $C460
    LDX   R_A187
    LDU   R_A194
    CLRA
L_003467: ; 0x003467, $C467
    STA   U
    LEAU  256,U
    CMPU  7,X
    BLS   L_003467
    JMP   LIST_FIND_X
    BSR   L_003460
    LDX   R_A18D
    JSR   REMOVE_X_FROM_LIST
    JSR   L_002C63
    LDX   R_A18B
    LDD   #$0040
    STD   14,X
    LDD   #$00D4
    STD   16,X
    LDA   #$2D
    STA   R_A18F
    LDX   R_A189
    LDD   #$0000
    STD   16,X
    LDX   R_A189
    LDD   16,X
    ADDD  #$0008
    STD   16,X
    DEC   R_A18F
    BEQ   L_0034B5
    LDA   #$02
    LDX   #$C49C
    JMP   L_0024BE
L_0034B5: ; 0x0034B5, $C4B5
    JSR   $67_PTR_STUFF
    LDD   #$0000
    STD   14,X
    STD   16,X
    LDD   #$1DFF
    STD   10,X
    LDD   #$9000
    STD   12,X
    LDD   #$F9E7
    STD   2,X
    STX   $65
    LDD   #$0000
    STD   18,X
    STX   R_A190
    LDD   #$0000
    LDU   #$00C0
    LDX   R_A18B
    STD   14,X
    STU   16,X
    LDX   R_A189
    LDD   #$1E80
    STD   10,X
    LDD   #$A2E0
    STD   12,X
    STU   16,X
    LDA   #$50
    LDX   #$C500
    JMP   L_0024BE
    LDX   R_A190
    LDD   #$E000
    STD   12,X
    LDD   #$1C00
    STD   10,X
    LDX   R_A189
    LDD   #$0000
    STD   16,X
    LDX   R_A18B
    LDD   #$F9CB
    STD   2,X
    LDD   #$FFC0
    STD   14,X
    LDD   #$FE80
    STD   16,X
    LDA   #$60
    LDX   #$C531
    JMP   L_0024BE
    LDX   R_A18B
    LDD   #$F9C1
    STD   2,X
    LDD   #$0000
    STD   14,X
    STD   16,X
    LDX   R_A190
    LDD   4,X
    JSR   REMOVE_X_FROM_LIST
    JSR   L_000350
    LDU   #$CC7D
L_00354F: ; 0x00354F, $C54F
    JSR   $67_PTR_STUFF
    LDD   12,U
    STD   2,X
    LDD   36,U
    STD   18,X
    LDD   #$1F00
    STD   10,X
    LDD   #$A000
    STD   12,X
    LDD   #$FF40
    STD   16,X
    LDD   #$0000
    STD   14,X
    JSR   L_002C60
    STU   R_A192
    STX   R_A18D
    LDA   #$5F
    LDX   #$C585
    JMP   L_0024BE
    LDX   #$C5F5
    LDA   #$00
    JSR   L_000055
    STX   R_A187
    LDA   #$17
    LDX   #$C598
    JMP   L_0024BE
    JSR   L_003460
    LDX   R_A18D
    JSR   REMOVE_X_FROM_LIST
    JSR   $67_PTR_STUFF
    JSR   L_002C63
    LDU   R_A192
    LDD   24,U
    STD   10,X
    LDD   U++
    STD   12,X
    LDD   #$0000
    STD   16,X
    STD   14,X
    JSR   L_002C60
    STU   R_A192
    LDA   #$20
    LDX   #$C5CA
    JMP   L_0024BE
    LDX   R_A196
    LEAX  2,X
    STX   R_A196
    LDA   #$20
    LDX   #$C5DA
    JMP   L_0024BE
    LDU   R_A192
    CMPU  #$CC89
    LBNE  L_00354F
    LDA   #$FF
    LDX   #$C5ED
    JMP   L_0024BE
    LDA   #$FF
    LDX   #$C677
    JMP   L_0024BE
    LDX   R_A18B
    LDX   4,X
    LEAX  1796,X
    STX   7,U
    STX   9,U
    STX   R_A194
    LDA   #$04
    LDX   7,U
    LDB   #$11
L_00360B: ; 0x00360B, $C60B
    STB   X
    LEAX  256,X
    DECA
    BNE   L_00360B
    LDB   #$99
    STB   X
    STX   7,U
    LDY   $A4
    CMPY  #$A15F
    BLO   L_003627
    LDY   #$A142
L_003627: ; 0x003627, $C627
    LDX   9,U
    LDA   #$03
L_00362B: ; 0x00362B, $C62B
    LDB   Y+
    STB   X
    LEAX  256,X
    DECA
    BNE   L_00362B
    STY   $A4
    STX   9,U
    LDX   R_A194
    CLR   X
    LEAX  256,X
    STX   R_A194
    LDA   #$01
    LDX   #$C605
    JMP   L_0024BE
L_00364F: ; 0x00364F, $C64F
    LDY   #$CC61
L_003653: ; 0x003653, $C653
    LDU   14,Y
    LDX   Y++
    JSR   JMP_GOTO_PAST_JSR
    .db $C0
    .db $02
    .db $02
    STY   R_A198
    LDA   #$06
    LDX   #$C66B
    JMP   L_0024BE
    LDY   R_A198
    CMPY  R_A196
    BNE   L_003653
    BRA   L_00364F
L_003677: ; 0x003677, $C677
    JSR   FIND_IDK
    CLR   R_A184
    LDA   #$FB
    STA   $BA
    JSR   CLEAR_ALL_SCREEN
    CLR   SENTENCE_PTR_WORD_ON
    LDD   #$FFFF
    STD   TEXT_PTR_UNK
    LDX   #$E782
    LDA   #$00
    JSR   L_000055
    LDX   #$F43D
    LDA   #$00
    JSR   L_000055
    LDA   #$3F
    STA   $32
    JMP   L_0036A2
L_0036A2: ; 0x0036A2, $C6A2
    JSR   L_00386F
    LDA   #$03
    STA   R_A16A
    LDX   #$C941
    STX   R_A16B
L_0036B0: ; 0x0036B0, $C6B0
    LDA   R_A16A
    STA   R_A163
    LDY   R_A16B
L_0036BA: ; 0x0036BA, $C6BA
    LDA   Y+
    CMPA  #$AA
    BLS   L_0036CE
    COMA
    BEQ   L_0036BA
    DECA
    BNE   L_003711
    LDD   Y++
    STD   R_A166
    CLRA
    BRA   L_0036E6
L_0036CE: ; 0x0036CE, $C6CE
    ASLA
    BHS   L_0036D4
    DEC   R_A166
L_0036D4: ; 0x0036D4, $C6D4
    ASLA
    BHS   L_0036DA
    INC   R_A166
L_0036DA: ; 0x0036DA, $C6DA
    ASLA
    BHS   L_0036E0
    DEC   R_A167
L_0036E0: ; 0x0036E0, $C6E0
    ASLA
    BHS   L_0036E6
    INC   R_A167
L_0036E6: ; 0x0036E6, $C6E6
    STA   R_A162
    LDD   R_A166
    LSRA
    TFR   D>X
    LDB   X
    BLO   L_0036F7
    ORB   #$F0
    BRA   L_0036F9
L_0036F7: ; 0x0036F7, $C6F7
    ORB   #$0F
L_0036F9: ; 0x0036F9, $C6F9
    STB   X
    LDA   R_A162
    BNE   L_0036CE
    DEC   R_A163
    BNE   L_0036BA
    STY   R_A16B
    LDA   #$02
    LDX   #$C6B0
    JSR   L_0024BE
L_003711: ; 0x003711, $C711
    STX   R_A168
    LDA   #$03
    CMPA  R_A16A
    BNE   L_003728
    LDA   #$0A
    STA   R_A16A
    LDX   #$C730
    LDA   #$00
    JSR   L_000055
L_003728: ; 0x003728, $C728
    LDX   #$C941
    STX   R_A16B
    BRA   L_0036B0
    LDX   #$C74C
    LDA   #$00
    JSR   L_000055
    LDX   #$3258
    LDU   #$C0ED
    JSR   JMP_GOTO_PAST_JSR
    .db $C0
    .db $02
    .db $02
    LDA   #$05
    LDX   #$C738
    JSR   L_0024BE
    LDA   #$30
    LDX   #$C754
    JMP   L_0024BE
    LDD   #$B3D6
    STD   R_A16D
    LDD   #$B412
    STD   R_A16F
    LDD   #$0000
    STD   $20
    LDD   #$0C00
    STD   R_A171
    LDD   #$B304
    STD   R_A173
L_003771: ; 0x003771, $C771
    LDX   R_A173
    LDY   R_A16D
    LDD   #$040C
    STD   Y
    LDD   R_A16F
    STD   2,Y
    ADDD  #$0060
    STD   R_A16F
    STY   2,X
    LDD   R_A171
    STD   10,X
    ADDD  #$0100
    STD   R_A171
    LDD   #$9800
    STD   12,X
    JSR   L_002C60
    LEAX  14,X
    STX   R_A173
    LEAY  4,Y
    STY   R_A16D
    CMPY  #$B412
    BNE   L_003771
    LDA   #$2E
    LDX   #$C7B7
    JMP   L_0024BE
    LDX   #$B300
    LDD   #$3C18
    STD   X
    LDD   #$B412
    STD   2,X
    LDX   #$C848
    LDA   #$00
    JSR   L_000055
    LDA   #$28
    LDX   #$C7D4
    JMP   L_0024BE
    LDX   #$F464
    LDA   #$00
    JSR   L_000055
    LDU   R_A168
    LDY   #$CC11
    LDX   #$3BD0
L_0037E6: ; 0x0037E6, $C7E6
    LDD   Y++
    STD   R_A164
    LDA   #$01
L_0037ED: ; 0x0037ED, $C7ED
    CLRB
    BITA  R_A164
    BEQ   L_0037F5
    LDB   #$10
L_0037F5: ; 0x0037F5, $C7F5
    BITA  R_A165
    BEQ   L_0037FC
    ORB   #$01
L_0037FC: ; 0x0037FC, $C7FC
    STB   X+
    ASLA
    BNE   L_0037ED
    LEAX  248,X
    CMPY  #$CC61
    BNE   L_0037E6
    LDX   #$A026
    LDB   L_0036F8
    LDA   B,X
    COMA
    ANDA  #$07
    BNE   L_003820
    LDX   #$8018
    LDD   #$20A0
    STU   D,X
L_003820: ; 0x003820, $C820
    LDA   #$01
    STA   $B7
    LDX   #$C8F4
    LDA   #$00
    JSR   L_000055
    LDA   #$3C
    STA   R_A17D
    TST   R_A184
    LBNE  L_003351
    DEC   R_A17D
    BEQ   L_003845
    LDA   #$0A
    LDX   #$C831
    JMP   L_0024BE
L_003845: ; 0x003845, $C845
    JMP   L_003263
    LDY   #$B300
    LDD   #$3090
    JSR   TEXT_CHAR_TO_SCREEN
    TST   R_9C00
    BNE   L_003867
    TST   R_9C40
    BNE   L_003867
    LDX   #$C921
    LDA   #$00
    JSR   L_000055
    JMP   L_00000A
L_003867: ; 0x003867, $C867
    LDA   #$01
    LDX   #$C848
    JMP   L_0024BE
L_00386F: ; 0x00386F, $C86F
    LDX   #$B412
    LDY   #$CAA0
    CLRA
    STA   R_A177
    STA   R_A176
L_00387D: ; 0x00387D, $C87D
    LDA   Y
    LSRA
    LSRA
    LSRA
    LSRA
    BSR   L_003891
    LDA   Y+
    ANDA  #$0F
    BSR   L_003891
    CMPY  #$CC0E
    BNE   L_00387D
L_003891: ; 0x003891, $C891
    BITA  #$0C
    BNE   L_00389E
    ADDA  R_A176
    ASLA
    ASLA
    STA   R_A176
    RTS
L_00389E: ; 0x00389E, $C89E
    PSHS  A
    ANDA  #$03
    ADDA  R_A176
    STA   R_A176
    PULS  A
    ANDA  #$0C
    LSRA
    LSRA
    LDU   #$CC0D
    LDB   A,U
    STB   R_A175
    CMPX  #$B9B2
    BLO   L_0038BF
    LEAX  -1439,X
L_0038BF: ; 0x0038BF, $C8BF
    LDA   R_A177
    BEQ   L_0038D8
    LDA   X
    ANDA  #$F0
    STA   X
    LDA   R_A175
    ANDA  #$0F
    ORA   X
    STA   X
    LDA   R_A175
    BRA   L_0038E5
L_0038D8: ; 0x0038D8, $C8D8
    COM   R_A177
    LDA   R_A175
L_0038DE: ; 0x0038DE, $C8DE
    STA   X
    DEC   R_A176
    BMI   L_0038F0
L_0038E5: ; 0x0038E5, $C8E5
    LEAX  24,X
    DEC   R_A176
    BPL   L_0038DE
    CLR   R_A177
L_0038F0: ; 0x0038F0, $C8F0
    CLR   R_A176
    RTS
    LDB   $37
    BEQ   L_003919
    CMPB  R_A183
    BLS   L_003903
    STB   R_A183
    INC   R_A184
L_003903: ; 0x003903, $C903
    LDU   #$C0E9
    LDX   #$28E5
    JSR   JMP_GOTO_PAST_JSR
    .db $C0
    .db $02
    .db $02
    CLRA
    LDX   #$48E5
    JSR   JMP_GOTO_PAST_JSR
    .db $C0
    .db $0E
    .db $02
L_003919: ; 0x003919, $C919
    LDA   #$10
    LDX   #$C8F4
    JMP   L_0024BE
    LDA   #$FF
    STA   R_A16A
    LDA   #$02
    LDX   #$C92E
    JMP   L_0024BE
    LDA   #$0A
    STA   R_A16A
    JMP   L_00000A
L_003936: ; 0x003936, $C936
    LDA   $8C
L_003938: ; 0x003938, $C938
    BEQ   L_003940
    JSR   L_0003DB
    DECA
    BRA   L_003938
L_003940: ; 0x003940, $C940
    RTS
    .db $FE
    .db $74
    .db $40
    .db $11
    .db $11
    .db $85
    .db $81
    .db $81
    .db $81
    .db $88
    .db $82
    .db $82
    .db $22
    .db $24
    .db $22
    .db $42
    .db $24
    .db $24
    .db $24
    .db $44
    .db $24
    .db $44
    .db $49
    .db $44
    .db $94
    .db $41
    .db $88
    .db $14
    .db $41
    .db $88
    .db $14
    .db $41
    .db $88
    .db $94
    .db $41
    .db $88
    .db $94
    .db $49
    .db $88
    .db $14
    .db $98
    .db $58
    .db $94
    .db $98
    .db $18
    .db $94
    .db $46
    .db $66
    .db $62
    .db $42
    .db $42
    .db $42
    .db $42
    .db $25
    .db $24
    .db $24
    .db $68
    .db $24
    .db $24
    .db $24
    .db $26
    .db $11
    .db $18
    .db $18
    .db $58
    .db $18
    .db $58
    .db $81
    .db $44
    .db $98
    .db $81
    .db $44
    .db $98
    .db $81
    .db $44
    .db $98
    .db $14
    .db $94
    .db $94
    .db $16
    .db $22
    .db $24
    .db $24
    .db $A4
    .db $24
    .db $A4
    .db $24
    .db $24
    .db $24
    .db $24
    .db $24
    .db $FE
    .db $81
    .db $4A
    .db $42
    .db $42
    .db $42
    .db $42
    .db $44
    .db $99
    .db $99
    .db $41
    .db $88
    .db $14
    .db $41
    .db $88
    .db $14
    .db $46
    .db $24
    .db $24
    .db $24
    .db $24
    .db $24
    .db $24
    .db $A4
    .db $24
    .db $24
    .db $A4
    .db $22
    .db $42
    .db $4A
    .db $42
    .db $42
    .db $44
    .db $99
    .db $19
    .db $91
    .db $19
    .db $91
    .db $91
    .db $81
    .db $81
    .db $41
    .db $81
    .db $49
    .db $46
    .db $42
    .db $42
    .db $42
    .db $42
    .db $42
    .db $42
    .db $24
    .db $22
    .db $42
    .db $62
    .db $62
    .db $42
    .db $24
    .db $49
    .db $19
    .db $91
    .db $91
    .db $91
    .db $91
    .db $91
    .db $85
    .db $88
    .db $14
    .db $94
    .db $14
    .db $24
    .db $24
    .db $24
    .db $24
    .db $24
    .db $24
    .db $A4
    .db $24
    .db $24
    .db $41
    .db $81
    .db $81
    .db $18
    .db $18
    .db $94
    .db $41
    .db $88
    .db $14
    .db $14
    .db $24
    .db $42
    .db $24
    .db $24
    .db $24
    .db $24
    .db $24
    .db $24
    .db $24
    .db $44
    .db $98
    .db $18
    .db $18
    .db $18
    .db $58
    .db $89
    .db $44
    .db $18
    .db $85
    .db $14
    .db $24
    .db $14
    .db $24
    .db $A4
    .db $24
    .db $24
    .db $24
    .db $A4
    .db $24
    .db $28
    .db $24
    .db $44
    .db $18
    .db $19
    .db $19
    .db $81
    .db $41
    .db $81
    .db $14
    .db $24
    .db $24
    .db $24
    .db $24
    .db $22
    .db $42
    .db $42
    .db $64
    .db $41
    .db $85
    .db $81
    .db $81
    .db $18
    .db $19
    .db $41
    .db $89
    .db $44
    .db $42
    .db $22
    .db $42
    .db $24
    .db $24
    .db $24
    .db $24
    .db $24
    .db $44
    .db $18
    .db $14
    .db $98
    .db $11
    .db $81
    .db $81
    .db $41
    .db $89
    .db $44
    .db $42
    .db $22
    .db $42
    .db $24
    .db $24
    .db $24
    .db $24
    .db $24
    .db $44
    .db $18
    .db $94
    .db $41
    .db $88
    .db $89
    .db $44
    .db $49
    .db $88
    .db $14
    .db $41
    .db $88
    .db $14
    .db $14
    .db $24
    .db $24
    .db $24
    .db $26
    .db $62
    .db $66
    .db $26
    .db $24
    .db $18
    .db $91
    .db $91
    .db $19
    .db $18
    .db $14
    .db $18
    .db $14
    .db $14
    .db $24
    .db $14
    .db $2A
    .db $45
    .db $24
    .db $68
    .db $88
    .db $24
    .db $44
    .db $42
    .db $18
    .db $A8
    .db $82
    .db $44
    .db $A8
    .db $22
    .db $20
    .db $FE
    .db $87
    .db $40
    .db $44
    .db $11
    .db $88
    .db $24
    .db $FE
    .db $9A
    .db $3F
    .db $44
    .db $11
    .db $88
    .db $24
    .db $FE
    .db $C1
    .db $3F
    .db $44
    .db $44
    .db $44
    .db $11
    .db $11
    .db $11
    .db $11
    .db $88
    .db $88
    .db $88
    .db $22
    .db $22
    .db $22
    .db $20
    .db $FE
    .db $C3
    .db $45
    .db $22
    .db $22
    .db $44
    .db $11
    .db $81
    .db $50
    .db $FD
    .db $10
    .db $D1
    .db $BD
    .db $29
    .db $C2
    .db $9C
    .db $29
    .db $CB
    .db $EA
    .db $C2
    .db $8C
    .db $29
    .db $C2
    .db $81
    .db $0D
    .db $10
    .db $C2
    .db $8D
    .db $29
    .db $C2
    .db $9C
    .db $29
    .db $CB
    .db $EA
    .db $42
    .db $94
    .db $29
    .db $42
    .db $81
    .db $0C
    .db $3F
    .db $29
    .db $C2
    .db $94
    .db $C2
    .db $9C
    .db $29
    .db $C1
    .db $8D
    .db $A4
    .db $29
    .db $42
    .db $94
    .db $29
    .db $3F
    .db $3E
    .db $29
    .db $42
    .db $A4
    .db $29
    .db $4C
    .db $29
    .db $C1
    .db $8D
    .db $A4
    .db $2A
    .db $42
    .db $94
    .db $29
    .db $3E
    .db $3D
    .db $B6
    .db $B4
    .db $A2
    .db $4A
    .db $17
    .db $CA
    .db $16
    .db $C1
    .db $9C
    .db $B4
    .db $A7
    .db $A4
    .db $B1
    .db $7A
    .db $7A
    .db $3D
    .db $3C
    .db $B6
    .db $B4
    .db $B1
    .db $71
    .db $81
    .db $6B
    .db $16
    .db $C1
    .db $AC
    .db $A4
    .db $B6
    .db $B4
    .db $A2
    .db $4A
    .db $6B
    .db $3C
    .db $2F
    .db $B6
    .db $B4
    .db $29
    .db $62
    .db $85
    .db $C2
    .db $85
    .db $C1
    .db $AC
    .db $A4
    .db $B6
    .db $B4
    .db $28
    .db $62
    .db $A2
    .db $F2
    .db $EB
    .db $61
    .db $84
    .db $29
    .db $62
    .db $8E
    .db $28
    .db $E2
    .db $A4
    .db $B7
    .db $B4
    .db $28
    .db $62
    .db $A2
    .db $E2
    .db $DB
    .db $7B
    .db $42
    .db $96
    .db $28
    .db $4E
    .db $28
    .db $E2
    .db $B4
    .db $B6
    .db $B4
    .db $29
    .db $62
    .db $92
    .db $E2
    .db $CB
    .db $7B
    .db $52
    .db $96
    .db $28
    .db $4E
    .db $28
    .db $EB
    .db $41
    .db $A4
    .db $B7
    .db $B4
    .db $28
    .db $62
    .db $92
    .db $E1
    .db $FB
    .db $7B
    .db $5B
    .db $24
    .db $B1
    .db $6D
    .db $18
    .db $14
    .db $EB
    .db $51
    .db $94
    .db $B7
    .db $B4
    .db $18
    .db $17
    .db $29
    .db $2D
    .db $1E
    .db $B1
    .db $4B
    .db $4B
    .db $25
    .db $B1
    .db $6D
    .db $B1
    .db $5E
    .db $B5
    .db $1A
    .db $4B
    .db $61
    .db $84
    .db $B2
    .db $4B
    .db $41
    .db $82
    .db $C1
    .db $DB
    .db $14
    .db $B5
    .db $18
    .db $17
    .db $18
    .db $16
    .db $D1
    .db $81
    .db $4E
    .db $B6
    .db $19
    .db $4B
    .db $61
    .db $84
    .db $18
    .db $24
    .db $B4
    .db $18
    .db $1F
    .db $1C
    .db $38
    .db $53
    .db $84
    .db $B1
    .db $6E
    .db $2B
    .db $CB
    .db $61
    .db $94
    .db $38
    .db $42
    .db $B4
    .db $18
    .db $41
    .db $81
    .db $EF
    .db $39
    .db $43
    .db $85
    .db $B1
    .db $6E
    .db $2B
    .db $CB
    .db $71
    .db $84
    .db $38
    .db $43
    .db $84
    .db $B6
    .db $18
    .db $1C
    .db $E3
    .db $95
    .db $38
    .db $41
    .db $81
    .db $6D
    .db $38
    .db $CB
    .db $C6
    .db $19
    .db $42
    .db $B5
    .db $38
    .db $4B
    .db $61
    .db $8F
    .db $D3
    .db $95
    .db $38
    .db $5B
    .db $51
    .db $F3
    .db $8C
    .db $BD
    .db $61
    .db $84
    .db $2A
    .db $63
    .db $85
    .db $B6
    .db $18
    .db $ED
    .db $38
    .db $53
    .db $94
    .db $18
    .db $51
    .db $F3
    .db $8C
    .db $BD
    .db $7B
    .db $42
    .db $91
    .db $42
    .db $B5
    .db $18
    .db $7B
    .db $DC
    .db $21
    .db $51
    .db $F3
    .db $4C
    .db $7E
    .db $30
    .db $6C
    .db $C2
    .db $14
    .db $2C
    .db $34
    .db $C7
    .db $E1
    .db $07
    .db $C1
    .db $35
    .db $CC
    .db $21
    .db $42
    .db $C3
    .db $4C
    .db $7F
    .db $10
    .db $6C
    .db $13
    .db $5C
    .db $C1
    .db $35
    .db $C1
    .db $52
    .db $C3
    .db $4C
    .db $7F
    .db $15
    .db $C2
    .db $7D
    .db $34
    .db $C1
    .db $5C
    .db $17
    .db $CC
    .db $36
    .db $C3
    .db $5C
    .db $14
    .db $2D
    .db $34
    .db $C7
    .db $1C
    .db $14
    .db $C2
    .db $6E
    .db $34
    .db $D1
    .db $4E
    .db $15
    .db $CC
    .db $36
    .db $C3
    .db $5C
    .db $14
    .db $2D
    .db $34
    .db $C7
    .db $1C
    .db $14
    .db $C2
    .db $51
    .db $C2
    .db $7D
    .db $14
    .db $F1
    .db $4C
    .db $22
    .db $CC
    .db $00
    .db $3E
    .db $41
    .db $41
    .db $22
    .db $00
    .db $3E
    .db $41
    .db $41
    .db $3E
    .db $00
    .db $7F
    .db $09
    .db $09
    .db $06
    .db $00
    .db $03
    .db $04
    .db $78
    .db $04
    .db $03
    .db $00
    .db $7F
    .db $09
    .db $19
    .db $66
    .db $00
    .db $41
    .db $7F
    .db $41
    .db $00
    .db $3E
    .db $41
    .db $49
    .db $3A
    .db $00
    .db $7F
    .db $08
    .db $08
    .db $7F
    .db $00
    .db $01
    .db $01
    .db $7F
    .db $01
    .db $01
    .db $00
    .db $1C
    .db $22
    .db $5D
    .db $63
    .db $55
    .db $22
    .db $1C
    .db $22
    .db $7F
    .db $4B
    .db $45
    .db $22
    .db $1C
    .db $00
    .db $00
    .db $00
    .db $42
    .db $7F
    .db $40
    .db $00
    .db $26
    .db $49
    .db $49
    .db $3E
    .db $00
    .db $36
    .db $49
    .db $49
    .db $36
    .db $00
    .db $3E
    .db $41
    .db $41
    .db $3E
    .db $43
    .db $30
    .db $1C
    .db $70
    .db $3C
    .db $70
    .db $5F
    .db $70
    .db $1C
    .db $A8
    .db $40
    .db $A8
    .db $5C
    .db $A8
    .db $C0
    .db $EB
    .db $C0
    .db $DD
    .db $C0
    .db $DF
    .db $C0
    .db $E7
    .db $C0
    .db $E3
    .db $C0
    .db $E1
    .db $C0
    .db $E5
    .db $60
    .db $00
    .db $60
    .db $00
    .db $62
    .db $00
    .db $98
    .db $00
    .db $98
    .db $00
    .db $9A
    .db $00
    .db $F9
    .db $85
    .db $F8
    .db $CE
    .db $F9
    .db $A3
    .db $F9
    .db $29
    .db $F8
    .db $F7
    .db $F9
    .db $7B
    .db $09
    .db $00
    .db $11
    .db $00
    .db $19
    .db $80
    .db $09
    .db $60
    .db $11
    .db $60
    .db $19
    .db $E0
    .db $44
    .db $33
    .db $CC
    .db $33
    .db $33
    .db $33
    .db $88
    .db $88
    .db $CC
    .db $CC
    .db $24
    .db $24
L_003CAD: ; 0x003CAD, $CCAD
    LDU   #$0000
    LDB   #$08
    LDX   #$B05D
L_003CB5: ; 0x003CB5, $CCB5
    STU   [X]
    STU   [2,X]
    STU   [4,X]
    STU   [6,X]
    ABX
    CMPX  $97
    BLO   L_003CB5
    LDX   [R_A097]
    BEQ   L_003CD3
    STU   X
    CLR   2,X
    STU   -256,X
L_003CD3: ; 0x003CD3, $CCD3
    LDD   $20
    SUBD  #$6D40
    STD   $73
    LSRA
    LSRA
    LDU   #$CD69
    LDB   #$03
    MUL
    LEAU  D,U
    LDA   $BA
    BITA  #$02
    BNE   L_003D0C
    LDA   #$30
    LDY   #$B125
L_003CF0: ; 0x003CF0, $CCF0
    LDX   #$0000
    STX   [Y]
    PULU  B,X
    STD   Y
    STX   [Y++]
    INCA
    LDX   #$0000
    STX   [Y]
    PULU  B,X
    STD   Y
    STX   [Y++]
    INCA
    CMPA  #$70
    BNE   L_003CF0
L_003D0C: ; 0x003D0C, $CD0C
    LDX   #$4C09
    LDD   #$9090
    STD   X
    STD   29,X
    LDX   #$5309
    LDD   #$0909
    STD   X
    STD   29,X
    LDX   #$A065
    LDU   #$B05D
    BSR   L_003D64
    LDX   #$A06B
    BSR   L_003D64
    STU   $97
    LDD   $BF
    LSRA
    LSRA
    LSRA
    LSRA
    LSRB
    LSRB
    LSRB
    ADDD  #$4B07
    STD   U
    LDX   U
    LDD   #$9099
    STD   X
    STA   2,X
    LDA   #$09
    STA   -255,X
    RTS
L_003D4F: ; 0x003D4F, $CD4F
    LDD   10,X
    SUBD  $73
    LSRA
    LSRA
    LDB   12,X
    LSRB
    LSRB
    LSRB
    ADDD  #$3007
    STD   U
    LDD   18,X
    STD   [U++]
L_003D64: ; 0x003D64, $CD64
    LDX   X
    BNE   L_003D4F
    RTS
    .db $25
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $26
    .db $07
    .db $70
    .db $24
    .db $07
    .db $70
    .db $23
    .db $07
    .db $70
    .db $23
    .db $70
    .db $07
    .db $24
    .db $07
    .db $70
    .db $25
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $25
    .db $07
    .db $70
    .db $24
    .db $07
    .db $70
    .db $23
    .db $07
    .db $70
    .db $21
    .db $07
    .db $70
    .db $22
    .db $70
    .db $07
    .db $24
    .db $77
    .db $00
    .db $24
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $26
    .db $77
    .db $00
    .db $25
    .db $77
    .db $00
    .db $25
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $24
    .db $07
    .db $70
    .db $23
    .db $70
    .db $07
    .db $25
    .db $77
    .db $00
    .db $26
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $26
    .db $77
    .db $00
    .db $25
    .db $07
    .db $70
    .db $23
    .db $07
    .db $70
    .db $22
    .db $07
    .db $70
    .db $21
    .db $77
    .db $00
    .db $21
    .db $70
    .db $07
    .db $23
    .db $70
    .db $07
    .db $25
    .db $70
    .db $07
    .db $25
    .db $07
    .db $70
    .db $25
    .db $77
    .db $00
    .db $25
    .db $77
    .db $00
    .db $24
    .db $77
    .db $00
    .db $22
    .db $07
    .db $70
    .db $20
    .db $07
    .db $70
    .db $1E
    .db $07
    .db $70
    .db $1C
    .db $07
    .db $70
    .db $1D
    .db $70
    .db $07
    .db $1F
    .db $70
    .db $07
    .db $21
    .db $70
    .db $07
    .db $22
    .db $70
    .db $07
    .db $24
    .db $70
    .db $07
    .db $26
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $26
    .db $77
    .db $00
    .db $26
    .db $77
    .db $00
    .db $26
    .db $77
    .db $00
    .db $26
    .db $77
    .db $00
    .db $25
    .db $77
    .db $00
    .db $25
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $24
    .db $07
    .db $70
    .db $23
    .db $77
    .db $00
    .db $24
    .db $77
    .db $00
    .db $22
    .db $07
    .db $70
    .db $23
    .db $70
    .db $07
    .db $22
    .db $07
    .db $70
    .db $21
    .db $70
    .db $07
    .db $23
    .db $70
    .db $07
    .db $25
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $26
    .db $07
    .db $70
    .db $24
    .db $07
    .db $70
    .db $23
    .db $07
    .db $70
    .db $23
    .db $70
    .db $07
    .db $24
    .db $07
    .db $70
    .db $25
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $25
    .db $07
    .db $70
    .db $24
    .db $07
    .db $70
    .db $23
    .db $07
    .db $70
    .db $21
    .db $07
    .db $70
    .db $22
    .db $70
    .db $07
    .db $24
    .db $77
    .db $00
    .db $24
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $26
    .db $77
    .db $00
    .db $25
    .db $77
    .db $00
    .db $25
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $24
    .db $07
    .db $70
    .db $23
    .db $70
    .db $07
    .db $25
    .db $77
    .db $00
    .db $26
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $26
    .db $77
    .db $00
    .db $25
    .db $07
    .db $70
    .db $23
    .db $07
    .db $70
    .db $22
    .db $07
    .db $70
    .db $21
    .db $77
    .db $00
    .db $21
    .db $70
    .db $07
    .db $23
    .db $70
    .db $07
    .db $25
    .db $70
    .db $07
    .db $25
    .db $07
    .db $70
    .db $25
    .db $77
    .db $00
    .db $25
    .db $77
    .db $00
    .db $24
    .db $77
    .db $00
    .db $22
    .db $07
    .db $70
    .db $20
    .db $07
    .db $70
    .db $1E
    .db $07
    .db $70
    .db $1C
    .db $07
    .db $70
    .db $1D
    .db $70
    .db $07
    .db $1F
    .db $70
    .db $07
    .db $21
    .db $70
    .db $07
    .db $22
    .db $70
    .db $07
    .db $24
    .db $70
    .db $07
    .db $26
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $26
    .db $77
    .db $00
    .db $26
    .db $77
    .db $00
    .db $26
    .db $77
    .db $00
    .db $26
    .db $77
    .db $00
    .db $25
    .db $77
    .db $00
    .db $25
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $24
    .db $07
    .db $70
    .db $23
    .db $77
    .db $00
    .db $24
    .db $77
    .db $00
    .db $22
    .db $07
    .db $70
    .db $23
    .db $70
    .db $07
    .db $22
    .db $07
    .db $70
    .db $21
    .db $70
    .db $07
    .db $23
    .db $70
    .db $07
    .db $80
    .db $00
    .db $00
    .db $30
    .db $00
    .db $30
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $03
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $96
    .db $00
    .db $00
    .db $00
    .db $00
    .db $FE
    .db $C3
    .db $00
    .db $00
    .db $00
    .db $00
    .db $D6
    .db $66
    .db $00
    .db $00
    .db $00
    .db $00
    .db $66
    .db $66
    .db $39
    .db $00
    .db $06
    .db $66
    .db $66
    .db $88
    .db $68
    .db $66
    .db $66
    .db $66
    .db $88
    .db $88
    .db $88
    .db $00
    .db $60
    .db $63
    .db $30
    .db $63
    .db $00
    .db $06
    .db $26
    .db $68
    .db $28
    .db $60
    .db $66
    .db $66
    .db $86
    .db $00
    .db $00
    .db $66
    .db $66
    .db $00
    .db $00
    .db $ED
    .db $66
    .db $00
    .db $00
    .db $00
    .db $63
    .db $90
    .db $09
    .db $90
    .db $99
    .db $99
    .db $99
    .db $90
    .db $CC
    .db $90
    .db $11
    .db $00
    .db $11
    .db $10
    .db $11
    .db $00
    .db $10
    .db $10
    .db $10
    .db $00
    .db $10
    .db $00
    .db $11
    .db $10
    .db $11
    .db $00
    .db $11
    .db $00
    .db $10
    .db $00
    .db $10
    .db $10
    .db $10
    .db $00
    .db $11
    .db $10
    .db $10
    .db $10
    .db $11
    .db $00
    .db $10
    .db $10
    .db $10
    .db $10
    .db $10
    .db $00
    .db $01
    .db $00
    .db $01
    .db $01
    .db $01
    .db $00
    .db $11
    .db $01
    .db $11
    .db $00
    .db $11
    .db $00
    .db $01
    .db $01
    .db $01
    .db $00
    .db $01
    .db $00
    .db $11
    .db $00
    .db $11
    .db $01
    .db $11
    .db $00
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $11
    .db $01
    .db $01
    .db $01
    .db $11
    .db $00
    .db $FF
    .db $F0
    .db $FF
    .db $00
    .db $FF
    .db $00
    .db $F0
    .db $00
    .db $F0
    .db $F0
    .db $F0
    .db $00
    .db $EE
    .db $E0
    .db $E0
    .db $E0
    .db $EE
    .db $00
    .db $E0
    .db $E0
    .db $E0
    .db $E0
    .db $E0
    .db $00
    .db $DD
    .db $D0
    .db $D0
    .db $D0
    .db $DD
    .db $00
    .db $D0
    .db $D0
    .db $D0
    .db $D0
    .db $D0
    .db $00
    .db $0F
    .db $0F
    .db $0F
    .db $00
    .db $0F
    .db $00
    .db $FF
    .db $00
    .db $FF
    .db $0F
    .db $FF
    .db $00
    .db $0E
    .db $0E
    .db $0E
    .db $0E
    .db $0E
    .db $00
    .db $EE
    .db $0E
    .db $0E
    .db $0E
    .db $EE
    .db $00
    .db $0D
    .db $0D
    .db $0D
    .db $0D
    .db $0D
    .db $00
    .db $DD
    .db $0D
    .db $0D
    .db $0D
    .db $DD
    .db $00
    .db $1C
    .db $0D
    .db $7F
    .db $E7
    .db $70
    .db $00
    .db $0F
    .db $71
    .db $71
    .db $07
    .db $DC
    .db $77
    .db $7C
    .db $0D
    .db $71
    .db $C7
    .db $77
    .db $DE
    .db $07
    .db $71
    .db $17
    .db $17
    .db $DE
    .db $F7
    .db $71
    .db $17
    .db $71
    .db $7C
    .db $DE
    .db $F0
    .db $07
    .db $77
    .db $C7
    .db $71
    .db $17
    .db $70
    .db $70
    .db $7C
    .db $D7
    .db $77
    .db $77
    .db $70
    .db $01
    .db $CD
    .db $FF
    .db $D7
    .db $70
    .db $F0
    .db $00
    .db $00
    .db $00

;Bank 2
	.org $C000

    .db $C5
    .db $FB
    JMP   TEXT_RELATED_ROUTINE?
    JMP   L_004AB2
    JMP   L_004ABD
    JMP   L_004AC8
    JMP   TEXT_RTN_UNK_1
    JMP   TEXT_RTN_UNK_2
    JMP   TEXT_RTN_UNK_3
    JMP   TEXT_RTN_UNK_4
    JMP   L_004A79
    JMP   L_004A81
    JMP   L_004A51
    JMP   ANOTHER_RUG_FAIL_TEXT?
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $5B
    .db $FF
    .db $C0
    .db $BD
    .db $C0
    .db $BF
    .db $C0
    .db $C1
    .db $00
    .db $00
    .db $C0
    .db $C1
    .db $00
    .db $00
    .db $C0
    .db $C3
    .db $00
    .db $00
    .db $C0
    .db $C5
    .db $00
    .db $00
    .db $C0
    .db $C5
    .db $00
    .db $00
    .db $C0
    .db $C7
    .db $00
    .db $00
    .db $C0
    .db $C3
    .db $00
    .db $00
    .db $C0
    .db $C9
    .db $00
    .db $00
    .db $C0
    .db $CB
    .db $C0
    .db $CD
    .db $C0
    .db $CF
    .db $00
    .db $00
    .db $C0
    .db $BD
    .db $C0
    .db $D1
    .db $C0
    .db $D3
    .db $C0
    .db $D5
    .db $C0
    .db $DB
    .db $00
    .db $00
    .db $C1 ; SENTENCE INITIAL TESTS INDICATE
    .db $07
    .db $C1 ; SENTENCE UNIT OK
    .db $0D
    .db $C1 ; SENTENCE ROM
    .db $11
    .db $C1 ; SENTENCE RAM
    .db $13
    .db $C1 ; SENTENCE ROM FAILURE
    .db $15
    .db $C1 ; SENTENCE RAM FAILURE
    .db $19
    .db $C1 ; SENTENCE GAME OVER
    .db $1D
    .db $C1 ; SENTENCE ALL ROMS OK
    .db $21
    .db $C1 ; SENTENCE RAM TEST
    .db $27
    .db $C1 ; SENTENCE NO RAM ERRORS DETECTED
    .db $2B
    .db $C1 ; SENTENCE CMOS RAM FAILURE
    .db $33
    .db $C1 ; SENTENCE CMOS RAM OK
    .db $4D
    .db $C1 ; SENTENCE MULTIPLE RAM FAILURE
    .db $53
    .db $C1 ; SENTENCE COLOR RAM TEST
    .db $6D
RUG_STR_DATA_UNK: ; 0x004085, $C085
    .db $C1 ; SENTENCE AUDIO TEST
    .db $88
RUG_STR_DATA_END?: ; 0x004087, $C087
    .db $C1 ; SENTENCE SWITCH TEST
    .db $92
    .db $C1 ; SENTENCE MONITOR TEST
    .db $96
    .db $C1 ; SENTENCE AUTO UP
    .db $9C
    .db $C1 ; SENTENCE ADVANCE
    .db $A0
    .db $C1 ; SENTENCE RIGHT COIN
    .db $A2
    .db $C1 ; SENTENCE HIGHSCORE RESET
    .db $A6
    .db $C1 ; SENTENCE LEFT COIN
    .db $A8
    .db $C1 ; SENTENCE CENTER COIN
    .db $AC
    .db $C1 ; SENTENCE INVALID SWITCH
    .db $B0
    .db $C1 ; SENTENCE INVALID SWITCH
    .db $B2
    .db $C1 ; SENTENCE FIRE
    .db $B4
    .db $C1 ; SENTENCE THRUST
    .db $B6
    .db $C1 ; SENTENCE SMART BOMB
    .db $B8
    .db $C1 ; SENTENCE HYPERSPACE
    .db $BC
    .db $C1 ; SENTENCE TWO PLAYERS
    .db $BE
    .db $C1 ; SENTENCE ONE PLAYER
    .db $C2
    .db $C1 ; SENTENCE REVERSE
    .db $C6
    .db $C1 ; SENTENCE DOWN
    .db $C8
    .db $C1 ; SENTENCE UP
    .db $CA
    .db $C1 ; SENTENCE INVALID SWITCH XALOT
    .db $CC
    .db $C1
    .db $CE
    .db $C1
    .db $D0
    .db $C1
    .db $D2
    .db $C1
    .db $D4
    .db $C1
    .db $D6
    .db $C1
    .db $D8
    .db $C1 ; SENTENCE PRESS ADVANCE WITH SWITCH SET FOR [CMD]:
    .db $DA
    .db $C1 ; SENTENCE AUTO FOR AUDIT, GAME ADJUSTMENT
    .db $EA
    .db $C1 ; SENTENCE MANUAL FOR ROM TEST
    .db $F8
    .db $C2 ; SENTENCE AUTO FOR RAM TEST
    .db $00
    .db $C2 ; SENTENCE AUTO TO EXIT TEST
    .db $08
    .db $C2 ; SENTENCE AUTO FOR CMOS RAM TEST
    .db $10
    .db $C2 ; SENTENCE AUTO FOR COLOR RAM TEST
    .db $1A
    .db $C2 ; SENTENCE AUTO FOR AUDIO TEST
    .db $24
    .db $C2 ; SENTENCE AUTO FOR SWITCH TEST
    .db $2C
    .db $C2 ; SENTENCE MANUAL TO TEST INDIVIDUAL SOUNDS
    .db $34
    .db $C2 ; SENTENCE AUTO FOR MONITOR TEST PATTERNS
    .db $3E
    .db $C2 ; SENTENCE MANUAL TO STEP THRU PATTERNS
    .db $48
    .db $C2 ; SENTENCE AUTO FOR GAME OVER
    .db $52
    .db $C2 ; SENTENCE MANUAL TO STEP THRU ADJUSTMENT
    .db $5A
    .db $C2 ; SENTENCE WILLIAMS DEFENDER
    .db $64
    .db $C2 ; SENTENCE PRESS ADVANCE TO STEP THRU TEST
    .db $68
    .db $C2 ; SENTENCE PRESS HIGHSCORE RESET TO MAKE CHANGE
    .db $74
    .db $C2 ; SENTENCE LANDER 100
    .db $7E
    .db $C2 ; SENTENCE MUTANT 150
    .db $85
    .db $C2 ; SENTENCE " POD" 1000
    .db $8C
    .db $C2 ; SENTENCE BOMBER 250
    .db $93
    .db $C2 ; SENTENCE SWARMER 150
    .db $9A
    .db $C2 ; SENTENCE BAITER 200
    .db $A1
    .db $C2 ; SENTENCE CREDITS:
    .db $A8
    .db $C2 ; SENTENCE SCANNER
    .db $AA
    .db $C2 ; SENTENCE ELECTRONICS INC. [CMDS] PRESENTS
    .db $AC
    .db $C2 ; PLAYER ONE
    .db $B4
    .db $C2 ; PLAYER TWO
    .db $B8
    .db $C2 ; BONUS X
    .db $BC
    .db $C2 ; SENTENCE PRESS ONE PLAYER START
    .db $BE
    .db $C2 ; SENTENCE PRESS ONE OR TWO PLAYER START
    .db $C6
    .db $C2 ; SENTENCE ATTACK WAVE
    .db $D2
    .db $C2 ; SENTENCE COMPLETED
    .db $D6
    .db $C2 ; SENTENCE YOU HAVE COMPLETED...
    .db $D8
    .db $C3 ; SENTENCE PTR TO A000, A002, A004
    .db $01
    .db $C3 ; SENTENCE HALL OF FAME
    .db $0B
    .db $C3 ; SENTENCE PTR TO A006, A008, A00C
    .db $21
    .db $C3 ; TEXT PTRS. ADJUSTMENT
    .db $2B
    .db $C4 ; INITIAL
    .db $64
    .db $C5 ; TESTS
    .db $8D
    .db $C4 ; INDICATE
    .db $50
    .db $C5 ; UNIT
    .db $BB
    .db $C4 ; OK
    .db $D1
    .db $C5 ; ROM
    .db $2D
    .db $C5 ; RAM
    .db $1B
    .db $C5 ; ROM
    .db $2D
    .db $C4 ; FAILURE
    .db $04
    .db $C5 ; RAM
    .db $1B
    .db $C4 ; FAILURE
    .db $04
    .db $C4 ; GAME
    .db $15
    .db $C4 ; OVER
    .db $E0
    .db $C3 ; ALL
    .db $3E
    .db $C5 ; ROMS
    .db $31
    .db $C4 ; OK
    .db $D1
    .db $C5 ; RAM
    .db $1B
    .db $C5 ; TEST
    .db $81
    .db $C4 ; NO
    .db $CA
    .db $C5 ; RAM
    .db $1B
    .db $C3 ; ERRORS
    .db $F8
    .db $C3 ; DETECTED
    .db $C6
    .db $C3 ; CMOS
    .db $93
    .db $C5 ; RAM
    .db $1B
    .db $C4 ; FAILURE. END OF STRING PTRS?
    .db $04
    .db $06
    .db $28
    .db $A0
    .db $C5 ; TEST
    .db $81
    .db $C4 ; MUST
    .db $AD
    .db $C3 ; BE
    .db $66
    .db $C3 ; ENTERED
    .db $F0
    .db $07
    .db $C5 ; WITH
    .db $DA
    .db $C3 ; COIN
    .db $98
    .db $C3 ; DOOR
    .db $CF
    .db $C4 ; OPEN
    .db $D8
    .db $C3 ; CMOS
    .db $93
    .db $C5 ; RAM
    .db $1B
    .db $C4 ; OK
    .db $D1
    .db $C4 ; MULTIPLE
    .db $A4
    .db $C5 ; RAM
    .db $1B
    .db $C4 ; FAILURE
    .db $04
    .db $03
    .db $FE
    .db $C3 ; ,
    .db $81
    .db $04
    .db $10
    .db $02
    .db $F8
    .db $C3 ; CMOS
    .db $93
    .db $C5 ; RAM
    .db $1B
    .db $C3 ; CAN
    .db $7D
    .db $C4 ; NOT
    .db $CD
    .db $C3 ; BE
    .db $66
    .db $C5 ; TESTED
    .db $86
    .db $C3 ; COLOR
    .db $9D
    .db $C5 ; RAM
    .db $1B
    .db $C5 ; TEST
    .db $81
    .db $04
    .db $30
    .db $02
    .db $E8
    .db $C5 ; VERTICAL
    .db $C3
    .db $C3 ; COLOR
    .db $9D
    .db $C3 ; BARS
    .db $61
    .db $C4 ; INDICATE
    .db $50
    .db $07
    .db $03
    .db $FC
    .db $C3 ; COLOR
    .db $9D
    .db $C5 ; RAM
    .db $1B
    .db $C4 ; FAILURE
    .db $04
    .db $C3 ; AUDIO
    .db $49
    .db $C5 ; TEST
    .db $81
    .db $07
    .db $07
    .db $03
    .db $04
    .db $C5 ; SOUND
    .db $54
    .db $C5 ; SWITCH
    .db $7A
    .db $C5 ; TEST
    .db $81
    .db $C4 ; MONITOR
    .db $9C
    .db $C5 ; TEST
    .db $81
    .db $C4 ; PATTERNS
    .db $E5
    .db $C3 ; AUTO
    .db $55
    .db $C5 ; UP
    .db $C0
    .db $C3 ; ADVANCE
    .db $36
    .db $C5 ; RIGHT
    .db $27
    .db $C3 ; COIN
    .db $98
    .db $C4 ; HIGHSCORE RESET
    .db $35
    .db $C4 ; LEFT
    .db $8B
    .db $C3 ; COIN
    .db $98
    .db $C3 ; CENTER
    .db $85
    .db $C3 ; COIN
    .db $98
    .db $C4 ; INVALID SWITCH
    .db $75
    .db $C4 ; INVALID SWITCH
    .db $75
    .db $C4 ; FIRE
    .db $0C
    .db $C5 ; THRUST
    .db $9C
    .db $C5 ; SMART
    .db $4E
    .db $C3 ; BOMB
    .db $69
    .db $C4 ; HYPERSPACE
    .db $45
    .db $C5 ; TWO
    .db $B7
    .db $C4 ; PLAYERS
    .db $F5
    .db $C4 ; ONE
    .db $D4
    .db $C4 ; PLAYER
    .db $EE
    .db $C5 ; REVERSE
    .db $1F
    .db $C3 ; DOWN
    .db $D4
    .db $C5 ; UP
    .db $C0
    .db $C4 ; INVALID SWITCH
    .db $75
    .db $C4 ; INVALID SWITCH
    .db $75
    .db $C4 ; INVALID SWITCH
    .db $75
    .db $C4 ; INVALID SWITCH
    .db $75
    .db $C4 ; INVALID SWITCH
    .db $75
    .db $C4 ; INVALID SWITCH
    .db $75
    .db $C4 ; INVALID SWITCH
    .db $75
    .db $C5 ; PRESS
    .db $0B
    .db $C3 ; ADVANCE
    .db $36
    .db $C5 ; WITH
    .db $DA
    .db $C5 ; SWITCH
    .db $7A
    .db $C5 ; SET
    .db $45
    .db $C4 ; FOR
    .db $11
    .db $03
    .db $FE
    .db $C3 ; :
    .db $83
    .db $C3 ; AUTO
    .db $55
    .db $C4 ; FOR
    .db $11
    .db $C3 ; AUDIT
    .db $4F
    .db $03
    .db $FE
    .db $C3 ; ,
    .db $81
    .db $C4 ; GAME
    .db $15
    .db $C3 ; ADJUSTMENT
    .db $2B
    .db $C4 ; MANUAL
    .db $95
    .db $C4 ; FOR
    .db $11
    .db $C5 ; ROM
    .db $2D
    .db $C5 ; TEST
    .db $81
    .db $C3 ; AUTO
    .db $55
    .db $C4 ; FOR
    .db $11
    .db $C5 ; RAM
    .db $1B
    .db $C5 ; TEST
    .db $81
    .db $C3 ; AUTO
    .db $55
    .db $C5 ; TO
    .db $AD
    .db $C3 ; EXIT
    .db $FF
    .db $C5 ; TEST
    .db $81
    .db $C3 ; AUTO
    .db $55
    .db $C4 ; FOR
    .db $11
    .db $C3 ; CMOS
    .db $93
    .db $C5 ; RAM
    .db $1B
    .db $C5 ; TEST
    .db $81
    .db $C3 ; AUTO
    .db $55
    .db $C4 ; FOR
    .db $11
    .db $C3 ; COLOR
    .db $9D
    .db $C5 ; RAM
    .db $1B
    .db $C5 ; TEST
    .db $81
    .db $C3 ; AUTO
    .db $55
    .db $C4 ; FOR
    .db $11
    .db $C3 ; AUDIO
    .db $49
    .db $C5 ; TEST
    .db $81
    .db $C3 ; AUTO
    .db $55
    .db $C4 ; FOR
    .db $11
    .db $C5 ; SWITCH
    .db $7A
    .db $C5 ; TEST
    .db $81
    .db $C4 ; MANUAL
    .db $95
    .db $C5 ; TO
    .db $AD
    .db $C5 ; TEST
    .db $81
    .db $C4 ; INDIVIDUAL
    .db $59
    .db $C5 ; SOUNDS
    .db $5A
    .db $C3 ; AUTO
    .db $55
    .db $C4 ; FOR
    .db $11
    .db $C4 ; MONITOR
    .db $9C
    .db $C5 ; TEST
    .db $81
    .db $C4 ; PATTERNS
    .db $E5
    .db $C4 ; MANUAL
    .db $95
    .db $C5 ; TO
    .db $AD
    .db $C5 ; STEP
    .db $67
    .db $C5 ; THRU
    .db $97
    .db $C4 ; PATTERNS
    .db $E5
    .db $C3 ; AUTO
    .db $55
    .db $C4 ; FOR
    .db $11
    .db $C4 ; GAME
    .db $15
    .db $C4 ; OVER
    .db $E0
    .db $C4 ; MANUAL
    .db $95
    .db $C5 ; TO
    .db $AD
    .db $C5 ; STEP
    .db $67
    .db $C5 ; THRU
    .db $97
    .db $C3 ; ADJUSTMENT
    .db $2B
    .db $C5 ; WILLIAMS
    .db $D1
    .db $C3 ; DEFENDER
    .db $BD
    .db $C5 ; PRESS
    .db $0B
    .db $C3 ; ADVANCE
    .db $36
    .db $C5 ; TO
    .db $AD
    .db $C5 ; STEP
    .db $67
    .db $C5 ; THRU
    .db $97
    .db $C5 ; TEST
    .db $81
    .db $C5 ; PRESS
    .db $0B
    .db $C4 ; HIGHSCORE RESET
    .db $35
    .db $C5 ; TO
    .db $AD
    .db $C4 ; MAKE
    .db $90
    .db $C3 ; CHANGE
    .db $8C
    .db $C4 ; LANDER
    .db $84
    .db $07
    .db $03
    .db $06
    .db $C4 ; 150
    .db $B9
    .db $C4 ; MUTANT
    .db $B2
    .db $07
    .db $03
    .db $06
    .db $C4 ; 150
    .db $B9
    .db $C4 ; " POD"
    .db $FD
    .db $07
    .db $03
    .db $00
    .db $C4 ; 1000
    .db $C5
    .db $C3 ; BOMBER
    .db $6E
    .db $07
    .db $03
    .db $06
    .db $C4 ; 250
    .db $C1
    .db $C5 ; SWARMER
    .db $72
    .db $07
    .db $03
    .db $08
    .db $C4 ; 150
    .db $B9
    .db $C3 ; BAITER
    .db $5A
    .db $07
    .db $03
    .db $06
    .db $C4 ; 200
    .db $BD
    .db $C3 ; CREDITS:
    .db $B4
    .db $C5 ; SCANNER
    .db $36
    .db $C3 ; ELECTRONICS INC.
    .db $D9
    .db $07
    .db $07
    .db $03
    .db $0C
    .db $C5 ; PRESENTS
    .db $02
    .db $C4 ; PLAYER
    .db $EE
    .db $C4 ; ONE
    .db $D4
    .db $C4 ; PLAYER
    .db $EE
    .db $C5 ; TWO
    .db $B7
    .db $C3 ; BONUS X
    .db $75
    .db $C5 ; PRESS
    .db $0B
    .db $C4 ; ONE
    .db $D4
    .db $C4 ; PLAYER
    .db $EE
    .db $C5 ; START
    .db $61
    .db $C5 ; PRESS
    .db $0B
    .db $C4 ; ONE
    .db $D4
    .db $C4 ; OR
    .db $DD
    .db $C5 ; TWO
    .db $B7
    .db $C4 ; PLAYER
    .db $EE
    .db $C5 ; START
    .db $61
    .db $C3 ; ATTACK
    .db $42
    .db $C5 ; WAVE
    .db $CC
    .db $C3 ; COMPLETED
    .db $A3
    .db $C5 ; YOU
    .db $DF
    .db $C4 ; HAVE
    .db $30
    .db $C5
    .db $11
    .db $C4
    .db $11
    .db $07
    .db $C5
    .db $93
    .db $C3
    .db $BD
    .db $C4
    .db $23
    .db $07
    .db $07
    .db $C5
    .db $3E
    .db $C4
    .db $6C
    .db $C5
    .db $DA
    .db $C5
    .db $C0
    .db $C3
    .db $D4
    .db $C5
    .db $6C
    .db $07
    .db $07
    .db $C5
    .db $0B
    .db $C4
    .db $0C
    .db $C5
    .db $AD
    .db $C3
    .db $EA
    .db $C4
    .db $64
    .db $A0
    .db $00
    .db $02
    .db $08
    .db $A0
    .db $02
    .db $02
    .db $10
    .db $A0
    .db $04
    .db $C4
    .db $23
    .db $06
    .db $22
    .db $68
    .db $C5
    .db $B0
    .db $02
    .db $3E
    .db $C3
    .db $3E
    .db $C5
    .db $A8
    .db $07
    .db $03
    .db $FC
    .db $C4
    .db $1A
    .db $02
    .db $3D
    .db $C4
    .db $1A
    .db $A0
    .db $06
    .db $02
    .db $05
    .db $A0
    .db $08
    .db $02
    .db $13
    .db $A0
    .db $0C
    .db $41 ; ADJUSTMENT
    .db $44
    .db $4A
    .db $55
    .db $53
    .db $54
    .db $4D
    .db $45
    .db $4E
    .db $54
    .db $2F
    .db $41 ; ADVANCE
    .db $44
    .db $56
    .db $41
    .db $4E
    .db $43
    .db $45
    .db $2F
    .db $41 ; ALL
    .db $4C
    .db $4C
    .db $2F
    .db $41 ; ATTACK
    .db $54
    .db $54
    .db $41
    .db $43
    .db $4B
    .db $2F
    .db $41 ; AUDIO
    .db $55
    .db $44
    .db $49
    .db $4F
    .db $2F
    .db $41 ; AUDIT
    .db $55
    .db $44
    .db $49
    .db $54
    .db $2F
    .db $41 ; AUTO
    .db $55
    .db $54
    .db $4F
    .db $2F
    .db $42 ; BAITER
    .db $41
    .db $49
    .db $54
    .db $45
    .db $52
    .db $2F
    .db $42 ; BARS
    .db $41
    .db $52
    .db $53
    .db $2F
    .db $42 ; BE
    .db $45
    .db $2F
    .db $42 ; BOMB
    .db $4F
    .db $4D
    .db $42
    .db $2F
    .db $42 ; BOMBER
    .db $4F
    .db $4D
    .db $42
    .db $45
    .db $52
    .db $2F
    .db $42 ; BONUS X
    .db $4F
    .db $4E
    .db $55
    .db $53
    .db $20
    .db $58
    .db $2F
    .db $43 ; CAN
    .db $41
    .db $4E
    .db $2F
    .db $2C ; ,
    .db $2F
    .db $3A ; :
    .db $2F
    .db $43 ; Center
    .db $45
    .db $4E
    .db $54
    .db $45
    .db $52
    .db $2F
    .db $43 ; Change
    .db $48
    .db $41
    .db $4E
    .db $47
    .db $45
    .db $2F
    .db $43 ; CMOS
    .db $4D
    .db $4F
    .db $53
    .db $2F
    .db $43 ; Coin
    .db $4F
    .db $49
    .db $4E
    .db $2F
    .db $43 ; Color
    .db $4F
    .db $4C
    .db $4F
    .db $52
    .db $2F
    .db $43 ; Completed
    .db $4F
    .db $4D
    .db $50
    .db $4C
    .db $45
    .db $54
    .db $45
    .db $44
    .db $2F
    .db $43 ; Credit
    .db $52
    .db $45
    .db $44
    .db $49
    .db $54
    .db $2F
    .db $43 ; Credits:
    .db $52
    .db $45
    .db $44
    .db $49
    .db $54
    .db $53
    .db $3A
    .db $2F
    .db $44 ; Defender
    .db $45
    .db $46
    .db $45
    .db $4E
    .db $44
    .db $45
    .db $52
    .db $2F
    .db $44 ; Detected
    .db $45
    .db $54
    .db $45
    .db $43
    .db $54
    .db $45
    .db $44
    .db $2F
    .db $44 ; Door
    .db $4F
    .db $4F
    .db $52
    .db $2F
    .db $44 ; Down
    .db $4F
    .db $57
    .db $4E
    .db $2F
    .db $45 ; Electronics Inc.
    .db $4C
    .db $45
    .db $43
    .db $54
    .db $52
    .db $4F
    .db $4E
    .db $49
    .db $43
    .db $53
    .db $20
    .db $49
    .db $4E
    .db $43
    .db $2E
    .db $2F
    .db $45 ; Enter
    .db $4E
    .db $54
    .db $45
    .db $52
    .db $2F
    .db $45 ; Entered
    .db $4E
    .db $54
    .db $45
    .db $52
    .db $45
    .db $44
    .db $2F
    .db $45 ; Errors
    .db $52
    .db $52
    .db $4F
    .db $52
    .db $53
    .db $2F
    .db $45 ; Exit
    .db $58
    .db $49
    .db $54
    .db $2F
    .db $46 ; Failure
    .db $41
    .db $49
    .db $4C
    .db $55
    .db $52
    .db $45
    .db $2F
    .db $46 ; Fire
    .db $49
    .db $52
    .db $45
    .db $2F
    .db $46 ; For
    .db $4F
    .db $52
    .db $2F
    .db $47 ; Game
    .db $41
    .db $4D
    .db $45
    .db $2F
    .db $47 ; Greatest
    .db $52
    .db $45
    .db $41
    .db $54
    .db $45
    .db $53
    .db $54
    .db $2F
    .db $48 ; Hall of Fame
    .db $41
    .db $4C
    .db $4C
    .db $20
    .db $4F
    .db $46
    .db $20
    .db $46
    .db $41
    .db $4D
    .db $45
    .db $2F
    .db $48 ; Have
    .db $41
    .db $56
    .db $45
    .db $2F
    .db $48 ; Highscore Reset
    .db $49
    .db $47
    .db $48
    .db $53
    .db $43
    .db $4F
    .db $52
    .db $45
    .db $20
    .db $52
    .db $45
    .db $53
    .db $45
    .db $54
    .db $2F
    .db $48 ; Hyperspace
    .db $59
    .db $50
    .db $45
    .db $52
    .db $53
    .db $50
    .db $41
    .db $43
    .db $45
    .db $2F
    .db $49 ; Indicate
    .db $4E
    .db $44
    .db $49
    .db $43
    .db $41
    .db $54
    .db $45
    .db $2F
    .db $49 ; Individual
    .db $4E
    .db $44
    .db $49
    .db $56
    .db $49
    .db $44
    .db $55
    .db $41
    .db $4C
    .db $2F
    .db $49 ; Initial
    .db $4E
    .db $49
    .db $54
    .db $49
    .db $41
    .db $4C
    .db $2F
    .db $49 ; Initials
    .db $4E
    .db $49
    .db $54
    .db $49
    .db $41
    .db $4C
    .db $53
    .db $2F
    .db $49 ; Invalid Switch
    .db $4E
    .db $56
    .db $41
    .db $4C
    .db $49
    .db $44
    .db $20
    .db $53
    .db $57
    .db $49
    .db $54
    .db $43
    .db $48
    .db $2F
    .db $4C ; Lander
    .db $41
    .db $4E
    .db $44
    .db $45
    .db $52
    .db $2F
    .db $4C ; Left
    .db $45
    .db $46
    .db $54
    .db $2F
    .db $4D ; Make
    .db $41
    .db $4B
    .db $45
    .db $2F
    .db $4D ; Manual
    .db $41
    .db $4E
    .db $55
    .db $41
    .db $4C
    .db $2F
    .db $4D ; Monitor
    .db $4F
    .db $4E
    .db $49
    .db $54
    .db $4F
    .db $52
    .db $2F
    .db $4D ; Multiple
    .db $55
    .db $4C
    .db $54
    .db $49
    .db $50
    .db $4C
    .db $45
    .db $2F
    .db $4D ; Must
    .db $55
    .db $53
    .db $54
    .db $2F
    .db $4D ; Mutant
    .db $55
    .db $54
    .db $41
    .db $4E
    .db $54
    .db $2F
    .db $31 ; 150
    .db $35
    .db $30
    .db $2F
    .db $32 ; 200
    .db $30
    .db $30
    .db $2F
    .db $32 ; 250
    .db $35
    .db $30
    .db $2F
    .db $31 ; 1000
    .db $30
    .db $30
    .db $30
    .db $2F
    .db $4E ; No
    .db $4F
    .db $2F
    .db $4E ; Not
    .db $4F
    .db $54
    .db $2F
    .db $4F ; OK
    .db $4B
    .db $2F
    .db $4F ; One
    .db $4E
    .db $45
    .db $2F
    .db $4F ; Open
    .db $50
    .db $45
    .db $4E
    .db $2F
    .db $4F ; Or
    .db $52
    .db $2F
    .db $4F ; Over
    .db $56
    .db $45
    .db $52
    .db $2F
    .db $50 ; Patterns
    .db $41
    .db $54
    .db $54
    .db $45
    .db $52
    .db $4E
    .db $53
    .db $2F
    .db $50 ; Player
    .db $4C
    .db $41
    .db $59
    .db $45
    .db $52
    .db $2F
    .db $50 ; Players
    .db $4C
    .db $41
    .db $59
    .db $45
    .db $52
    .db $53
    .db $2F
    .db $20 ; " POD"
    .db $50
    .db $4F
    .db $44
    .db $2F
    .db $50 ; Presents
    .db $52
    .db $45
    .db $53
    .db $45
    .db $4E
    .db $54
    .db $53
    .db $2F
    .db $50 ; Press
    .db $52
    .db $45
    .db $53
    .db $53
    .db $2F
    .db $51 ; Qualified
    .db $55
    .db $41
    .db $4C
    .db $49
    .db $46
    .db $49
    .db $45
    .db $44
    .db $2F
    .db $52 ; RAM
    .db $41
    .db $4D
    .db $2F
    .db $52 ; Reverse
    .db $45
    .db $56
    .db $45
    .db $52
    .db $53
    .db $45
    .db $2F
    .db $52 ; Right
    .db $49
    .db $47
    .db $48
    .db $54
    .db $2F
    .db $52 ; ROM
    .db $4F
    .db $4D
    .db $2F
    .db $52 ; ROMS
    .db $4F
    .db $4D
    .db $53
    .db $2F
    .db $53 ; Scanner
    .db $43
    .db $41
    .db $4E
    .db $4E
    .db $45
    .db $52
    .db $2F
    .db $53 ; Select
    .db $45
    .db $4C
    .db $45
    .db $43
    .db $54
    .db $2F
    .db $53 ; Set
    .db $45
    .db $54
    .db $2F
    .db $53 ; Slam
    .db $4C
    .db $41
    .db $4D
    .db $2F
    .db $53 ; Smart
    .db $4D
    .db $41
    .db $52
    .db $54
    .db $2F
    .db $53 ; Sound
    .db $4F
    .db $55
    .db $4E
    .db $44
    .db $2F
    .db $53 ; Sounds
    .db $4F
    .db $55
    .db $4E
    .db $44
    .db $53
    .db $2F
    .db $53 ; Start
    .db $54
    .db $41
    .db $52
    .db $54
    .db $2F
    .db $53 ; Step
    .db $54
    .db $45
    .db $50
    .db $2F
    .db $53 ; Stick
    .db $54
    .db $49
    .db $43
    .db $4B
    .db $2F
    .db $53 ; Swarmer
    .db $57
    .db $41
    .db $52
    .db $4D
    .db $45
    .db $52
    .db $2F
    .db $53 ; Switch
    .db $57
    .db $49
    .db $54
    .db $43
    .db $48
    .db $2F
    .db $54 ; Test
    .db $45
    .db $53
    .db $54
    .db $2F
    .db $54 ; Tested
    .db $45
    .db $53
    .db $54
    .db $45
    .db $44
    .db $2F
    .db $54 ; Tests
    .db $45
    .db $53
    .db $54
    .db $53
    .db $2F
    .db $54 ; The
    .db $48
    .db $45
    .db $2F
    .db $54 ; Thru
    .db $48
    .db $52
    .db $55
    .db $2F
    .db $54 ; Thrust
    .db $48
    .db $52
    .db $55
    .db $53
    .db $54
    .db $2F
    .db $54 ; Tilt
    .db $49
    .db $4C
    .db $54
    .db $2F
    .db $54 ; Time
    .db $49
    .db $4D
    .db $45
    .db $2F
    .db $54 ; To
    .db $4F
    .db $2F
    .db $54 ; Todays
    .db $4F
    .db $44
    .db $41
    .db $59
    .db $53
    .db $2F
    .db $54 ; Two
    .db $57
    .db $4F
    .db $2F
    .db $55 ; Unit
    .db $4E
    .db $49
    .db $54
    .db $2F
    .db $55 ; Up
    .db $50
    .db $2F
    .db $56 ; Vertical
    .db $45
    .db $52
    .db $54
    .db $49
    .db $43
    .db $41
    .db $4C
    .db $2F
    .db $57 ; Wave
    .db $41
    .db $56
    .db $45
    .db $2F
    .db $57 ; Williams
    .db $49
    .db $4C
    .db $4C
    .db $49
    .db $41
    .db $4D
    .db $53
    .db $2F
    .db $57 ; With
    .db $49
    .db $54
    .db $48
    .db $2F
    .db $59 ; You
    .db $4F
    .db $55
    .db $2F
TEXT_GRAPHICS_INFO: ; 0x0045E3, $C5E3
    .db $01 ; FORMAT:[X/2,Y,PTR_TO_BITMAP]?
    .db $08
    .db $C6 ; PTR 0
    .db $97
    .db $01
    .db $08
    .db $C6 ; PTR 1
    .db $AF
    .db $01
    .db $08
    .db $C6 ; PTR 2
    .db $B7
    .db $03
    .db $08
    .db $C7 ; PTR 3
    .db $BF
    .db $01
    .db $08
    .db $C6 ; PTR 4
    .db $BF
    .db $03
    .db $08
    .db $C7 ; PTR 5
    .db $BF
    .db $03
    .db $08
    .db $C6 ; PTR 6
    .db $C7
    .db $03
    .db $08
    .db $C6 ; PTR 7
    .db $DF
    .db $03
    .db $08
    .db $C6 ; PTR 8
    .db $F7
    .db $03
    .db $08
    .db $C7 ; PTR 9
    .db $0F
    .db $03
    .db $08
    .db $C7 ; PTR 10
    .db $27
    .db $03
    .db $08
    .db $C7 ; PTR 11
    .db $3F
    .db $03
    .db $08
    .db $C7 ; PTR 12
    .db $57
    .db $03
    .db $08
    .db $C7 ; PTR 13
    .db $6F
    .db $03
    .db $08
    .db $C7 ; PTR 14
    .db $87
    .db $03
    .db $08
    .db $C7 ; PTR 15
    .db $9F
    .db $01
    .db $08
    .db $C7 ; PTR 16
    .db $B7
    .db $03
    .db $08
    .db $C7 ; PTR 17
    .db $BF
    .db $03
    .db $08
    .db $C6 ; PTR 18
    .db $97
    .db $03
    .db $08
    .db $C7 ; PTR 19
    .db $D7
    .db $03
    .db $08
    .db $C7 ; PTR 20
    .db $EF
    .db $03
    .db $08
    .db $C8 ; PTR 21
    .db $07
    .db $03
    .db $08
    .db $C8 ; PTR 22
    .db $1F
    .db $03
    .db $08
    .db $C8 ; PTR 23
    .db $37
    .db $03
    .db $08
    .db $C8 ; PTR 24
    .db $4F
    .db $03
    .db $08
    .db $C8 ; PTR 25
    .db $67
    .db $03
    .db $08
    .db $C8 ; PTR 26
    .db $7F
    .db $02
    .db $08
    .db $C8 ; PTR 27
    .db $97
    .db $03
    .db $08
    .db $C8 ; PTR 28
    .db $A7
    .db $03
    .db $08
    .db $C8 ; PTR 29
    .db $BF
    .db $03
    .db $08
    .db $C8 ; PTR 30
    .db $D7
    .db $04
    .db $08
    .db $C8 ; PTR 31
    .db $EF
    .db $03
    .db $08
    .db $C9 ; PTR 32
    .db $0F
    .db $03
    .db $08
    .db $C9 ; PTR 33
    .db $27
    .db $03
    .db $08
    .db $C9 ; PTR 34
    .db $3F
    .db $03
    .db $08
    .db $C9 ; PTR 35
    .db $57
    .db $03
    .db $08
    .db $C9 ; PTR 36
    .db $6F
    .db $03
    .db $08
    .db $C9 ; PTR 37
    .db $87
    .db $03
    .db $08
    .db $C9 ; PTR 38
    .db $9F
    .db $03
    .db $08
    .db $C9 ; PTR 39
    .db $B7
    .db $03
    .db $08
    .db $C9 ; PTR 40
    .db $CF
    .db $04
    .db $08
    .db $C9 ; PTR 41
    .db $E7
    .db $03
    .db $08
    .db $CA ; PTR 42
    .db $07
    .db $03
    .db $08
    .db $CA ; PTR 43
    .db $1F
    .db $03
    .db $08
    .db $CA ; PTR 44
    .db $37
    .db $00 ; TEXT_BITMAP_0,18
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $01 ; TEXT_BITMAP_1
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $01
    .db $00
    .db $00 ; TEXT_BITMAP_2
    .db $00
    .db $00
    .db $00
    .db $00
    .db $01
    .db $01
    .db $10
    .db $00 ; TEXT_BITMAP_4
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $01
    .db $00
    .db $01 ; TEXT_BITMAP_6
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $11
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $11
    .db $00
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $00
    .db $00 ; TEXT_BITMAP_7
    .db $00
    .db $01
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $01
    .db $11
    .db $10
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $00
    .db $01 ; TEXT_BITMAP_8
    .db $01
    .db $00
    .db $00
    .db $00
    .db $01
    .db $01
    .db $00
    .db $11
    .db $00
    .db $00
    .db $01
    .db $10
    .db $00
    .db $11
    .db $00
    .db $11
    .db $11
    .db $11
    .db $10
    .db $00
    .db $00
    .db $11
    .db $00
    .db $01 ; TEXT_BITMAP_9
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $01
    .db $00
    .db $11
    .db $00
    .db $00
    .db $11
    .db $00
    .db $00
    .db $11
    .db $00
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $00
    .db $00 ; TEXT_BITMAP_10
    .db $00
    .db $01
    .db $01
    .db $00
    .db $00
    .db $00
    .db $00
    .db $01
    .db $10
    .db $00
    .db $11
    .db $00
    .db $00
    .db $00
    .db $00
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $00
    .db $01 ; TEXT_BITMAP_11
    .db $01
    .db $01
    .db $01
    .db $00
    .db $00
    .db $01
    .db $00
    .db $11
    .db $10
    .db $10
    .db $11
    .db $00
    .db $00
    .db $11
    .db $00
    .db $11
    .db $00
    .db $00
    .db $11
    .db $01
    .db $01
    .db $11
    .db $00
    .db $01 ; TEXT_BITMAP_12
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $11
    .db $10
    .db $10
    .db $11
    .db $10
    .db $10
    .db $11
    .db $00
    .db $11
    .db $00
    .db $00
    .db $11
    .db $01
    .db $01
    .db $11
    .db $00
    .db $01 ; TEXT_BITMAP_13
    .db $00
    .db $00
    .db $00
    .db $00
    .db $01
    .db $01
    .db $00
    .db $11
    .db $00
    .db $00
    .db $01
    .db $11
    .db $10
    .db $10
    .db $00
    .db $11
    .db $11
    .db $11
    .db $10
    .db $00
    .db $00
    .db $00
    .db $00
    .db $01 ; TEXT_BITMAP_14
    .db $01
    .db $01
    .db $00
    .db $01
    .db $01
    .db $01
    .db $00
    .db $11
    .db $10
    .db $10
    .db $11
    .db $10
    .db $10
    .db $11
    .db $00
    .db $11
    .db $01
    .db $01
    .db $10
    .db $01
    .db $01
    .db $11
    .db $00
    .db $01 ; TEXT_BITMAP_15
    .db $01
    .db $01
    .db $01
    .db $00
    .db $00
    .db $01
    .db $00
    .db $11
    .db $10
    .db $10
    .db $11
    .db $00
    .db $00
    .db $11
    .db $00
    .db $11
    .db $01
    .db $01
    .db $11
    .db $01
    .db $01
    .db $11
    .db $00
    .db $00 ; TEXT_BITMAP_16
    .db $00
    .db $01
    .db $00
    .db $00
    .db $01
    .db $00
    .db $00
    .db $01 ; TEXT_BITMAP_3,5,17
    .db $01
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $11
    .db $00
    .db $00
    .db $01
    .db $01
    .db $00
    .db $01
    .db $00
    .db $11
    .db $11
    .db $11
    .db $10
    .db $00
    .db $00
    .db $00
    .db $00
    .db $01 ; TEXT_BITMAP_19
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $11
    .db $00
    .db $00
    .db $11
    .db $00
    .db $00
    .db $00
    .db $00
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $00
    .db $01 ; TEXT_BITMAP_20
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $11
    .db $00
    .db $00
    .db $11
    .db $00
    .db $00
    .db $11
    .db $00
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $00
    .db $01 ; TEXT_BITMAP_21
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $11
    .db $10
    .db $10
    .db $10
    .db $10
    .db $10
    .db $11
    .db $00
    .db $11
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $11
    .db $00
    .db $01 ; TEXT_BITMAP_22
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $11
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $11
    .db $00
    .db $10
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $10
    .db $00
    .db $01 ; TEXT_BITMAP_23
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $11
    .db $10
    .db $10
    .db $11
    .db $10
    .db $10
    .db $11
    .db $00
    .db $11
    .db $00
    .db $00
    .db $10
    .db $00
    .db $00
    .db $11
    .db $00
    .db $01 ; TEXT_BITMAP_24
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $11
    .db $10
    .db $10
    .db $11
    .db $10
    .db $10
    .db $10
    .db $00
    .db $11
    .db $00
    .db $00
    .db $10
    .db $00
    .db $00
    .db $00
    .db $00
    .db $01 ; TEXT_BITMAP_25
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $11
    .db $10
    .db $10
    .db $10
    .db $10
    .db $10
    .db $11
    .db $00
    .db $11
    .db $00
    .db $00
    .db $11
    .db $01
    .db $01
    .db $11
    .db $00
    .db $01 ; TEXT_BITMAP_26
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $10
    .db $10
    .db $10
    .db $11
    .db $10
    .db $10
    .db $10
    .db $00
    .db $01
    .db $01
    .db $01
    .db $11
    .db $01
    .db $01
    .db $01
    .db $00
    .db $01 ; TEXT_BITMAP_27
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $10
    .db $10
    .db $10
    .db $10
    .db $10
    .db $10
    .db $10
    .db $00
    .db $00 ; TEXT_BITMAP_28
    .db $00
    .db $00
    .db $00
    .db $00
    .db $01
    .db $01
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $11
    .db $00
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $00
    .db $01 ; TEXT_BITMAP_29
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $00
    .db $00
    .db $01
    .db $11
    .db $01
    .db $00
    .db $00
    .db $00
    .db $01
    .db $10
    .db $00
    .db $00
    .db $00
    .db $10
    .db $01
    .db $00
    .db $01 ; TEXT_BITMAP_30
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $10
    .db $10
    .db $10
    .db $10
    .db $10
    .db $10
    .db $11
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $11
    .db $00
    .db $01 ; TEXT_BITMAP_31
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $11
    .db $10
    .db $10
    .db $10
    .db $10
    .db $10
    .db $10
    .db $00
    .db $11
    .db $10
    .db $10
    .db $10
    .db $00
    .db $00
    .db $00
    .db $00
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $00
    .db $01 ; TEXT_BITMAP_32
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $11
    .db $10
    .db $10
    .db $10
    .db $10
    .db $10
    .db $10
    .db $00
    .db $11
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $01 ; TEXT_BITMAP_33
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $11
    .db $10
    .db $10
    .db $10
    .db $10
    .db $10
    .db $11
    .db $00
    .db $11
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $11
    .db $00
    .db $01 ; TEXT_BITMAP_34
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $11
    .db $10
    .db $10
    .db $11
    .db $10
    .db $10
    .db $10
    .db $00
    .db $11
    .db $01
    .db $01
    .db $11
    .db $00
    .db $00
    .db $00
    .db $00
    .db $01 ; TEXT_BITMAP_35
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $11
    .db $10
    .db $10
    .db $10
    .db $10
    .db $10
    .db $11
    .db $00
    .db $11
    .db $01
    .db $01
    .db $01
    .db $01
    .db $11
    .db $11
    .db $10
    .db $01 ; TEXT_BITMAP_36
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $11
    .db $10
    .db $10
    .db $11
    .db $10
    .db $10
    .db $10
    .db $00
    .db $11
    .db $01
    .db $01
    .db $11
    .db $10
    .db $01
    .db $01
    .db $00
    .db $01 ; TEXT_BITMAP_37
    .db $01
    .db $01
    .db $01
    .db $00
    .db $00
    .db $01
    .db $00
    .db $11
    .db $10
    .db $10
    .db $11
    .db $00
    .db $00
    .db $11
    .db $00
    .db $11
    .db $00
    .db $00
    .db $11
    .db $11
    .db $11
    .db $11
    .db $00
    .db $11 ; TEXT_BITMAP_38
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $11
    .db $00
    .db $11
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $01 ; TEXT_BITMAP_39
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $10
    .db $10
    .db $10
    .db $10
    .db $10
    .db $10
    .db $11
    .db $00
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $11
    .db $00
    .db $01 ; TEXT_BITMAP_40
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $10
    .db $01
    .db $00
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $10
    .db $00
    .db $00
    .db $01 ; TEXT_BITMAP_41
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $00
    .db $10
    .db $10
    .db $10
    .db $10
    .db $10
    .db $10
    .db $01
    .db $00
    .db $10
    .db $10
    .db $10
    .db $10
    .db $10
    .db $10
    .db $01
    .db $00
    .db $10
    .db $10
    .db $10
    .db $10
    .db $10
    .db $10
    .db $00
    .db $00
    .db $01 ; TEXT_BITMAP_42
    .db $01
    .db $00
    .db $00
    .db $00
    .db $01
    .db $01
    .db $00
    .db $00
    .db $00
    .db $10
    .db $01
    .db $10
    .db $00
    .db $00
    .db $00
    .db $01
    .db $01
    .db $10
    .db $00
    .db $10
    .db $01
    .db $01
    .db $00
    .db $01 ; TEXT_BITMAP_43
    .db $01
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $10
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $01
    .db $01
    .db $10
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $01 ; TEXT_BITMAP_44
    .db $00
    .db $00
    .db $00
    .db $01
    .db $01
    .db $01
    .db $00
    .db $11
    .db $00
    .db $01
    .db $10
    .db $00
    .db $00
    .db $11
    .db $00
    .db $11
    .db $10
    .db $00
    .db $00
    .db $00
    .db $00
    .db $11
    .db $00
    .db $84
    .db $FF
L_004A51: ; 0x004A51, $CA51
    PSHS  U,Y,X ; Save...
    LDU   #$C0D9 ; PTR
    BRA   L_004A5D
ANOTHER_RUG_FAIL_TEXT?: ; 0x004A58, $CA58
    PSHS  U,Y,X ; Save...
    LDU   #$C0BB
L_004A5D: ; 0x004A5D, $CA5D
    LDX   #$18CE
    JSR   TEXT_RELATED_ROUTINE?
    LDU   Y++
    BEQ   L_004A6D
    LDX   #$10DA
    JSR   TEXT_RELATED_ROUTINE?
L_004A6D: ; 0x004A6D, $CA6D
    LDU   Y++
    BEQ   L_004A77
    LDX   #$10E4
    JSR   TEXT_RELATED_ROUTINE?
L_004A77: ; 0x004A77, $CA77
    PULS  X,Y,U,PC ; Leave
L_004A79: ; 0x004A79, $CA79
    PSHS  U,Y,X,B,A,CC
    LDY   #$FFB6
    BRA   L_004A87
L_004A81: ; 0x004A81, $CA81
    PSHS  U,Y,X,B,A,CC
    LDY   #$FFB3
L_004A87: ; 0x004A87, $CA87
    LDD   #$CAED
    STY   TEXT_PTR_TO_CODE_JSR
    STD   TEXT_PTR_TO_CODE_JMP
    STX   SENTENCE_CURR_SCR_LOC_XXYY
    STX   SENTENCE_CURR_SCR_LOC_CR_XXYY?
    LDX   #$010A
    STX   TEXT_DATA_SPACING_XXYY?
    CLR   SENTENCE_FLAG_58
    LDU   5,S
    STU   SENTENCE_PTR_TO_WORD
    LEAU  32,U
    STU   SENTENCE_END_PTR
    STU   SENTENCE_PTR_WORD_ON
    BRA   SKIP_SENTENCE_INIT
TEXT_RELATED_ROUTINE?: ; 0x004AA7, $CAA7
    PSHS  U,Y,X,B,A,CC ; Save
    LDY   #$FFB3 ; Set, ptr to JMP to TEXT_CHAR_TO_SCREEN($F522)
    LDD   #$CAED ; Set, ptr to SKIP_SENTENCE_INIT
    BRA   SENTENCE_TO_SCREEN
L_004AB2: ; 0x004AB2, $CAB2
    PSHS  U,Y,X,B,A,CC
    LDY   #$FFB6 ; PTR to JMP, still unknown.
    LDD   #$CAED
    BRA   SENTENCE_TO_SCREEN
L_004ABD: ; 0x004ABD, $CABD
    PSHS  U,Y,X,B,A,CC
    LDY   #$FFB3
    LDD   #$CB5F ; PTR to 4B5F, Pulls state, clears a CC bit, RTS's.
    BRA   SENTENCE_TO_SCREEN
L_004AC8: ; 0x004AC8, $CAC8
    PSHS  U,Y,X,B,A,CC ; Save stuff
    LDY   #$FFB6
    LDD   #$CB5F
SENTENCE_TO_SCREEN: ; 0x004AD1, $CAD1
    STY   TEXT_PTR_TO_CODE_JSR ; Store ptr to TEXT_DATA_TO_SCREEN
    STD   TEXT_PTR_TO_CODE_JMP ; Store ptr to SKIP_SENTENCE_INIT
    TST   SENTENCE_PTR_WORD_ON ; Test if top byte not null
    BNE   SKIP_SENTENCE_INIT ; If is set, don't init.
    STX   SENTENCE_CURR_SCR_LOC_XXYY ; Screen location current?
    STX   SENTENCE_CURR_SCR_LOC_CR_XXYY? ; Screen location CR?
    LDX   #$010A ; Not sure of val. Add per char?
    STX   TEXT_DATA_SPACING_XXYY? ; Store
    CLR   SENTENCE_FLAG_58 ; Clear
    LDX   2,U ; Get end of sentence.
    STX   SENTENCE_END_PTR ; End of sentence.
    LDX   U ; Load X with beginning of sentence.
    BRA   MORE_THINGS_TO_DO ; Do things.
SKIP_SENTENCE_INIT: ; 0x004AED, $CAED
    TST   SENTENCE_FLAG_58 ; Test
    BNE   FLAG_58_NOT_SET
    LDX   SENTENCE_PTR_TO_WORD ; Get word ptr
    LDB   X+ ; Load
    CMPB  #$2F ; #$2F='\0' here.
    BNE   NOT_END_OF_STRING ; Not end, put to screen.
    LDB   #$20 ; Space in ascii.
    STB   SENTENCE_FLAG_58 ; Not sure why stored.
    BRA   NOT_END_OF_STRING ; Always space at end.
FLAG_58_NOT_SET: ; 0x004AFF, $CAFF
    CLR   SENTENCE_FLAG_58 ; clear
    LDX   SENTENCE_PTR_WORD_ON
DO_MORE_AFTER_CMD: ; 0x004B03, $CB03
    CMPX  SENTENCE_END_PTR ; Compare to end?
    BNE   MORE_THINGS_TO_DO
TOP_GT|E_8: ; 0x004B07, $CB07
    CLR   SENTENCE_PTR_WORD_ON ; Clear setup check loc.
    PULS  CC,A,B,X,Y,U ; Restore
    ORCC  #$01 ; Set CC.c
    RTS ; leave.
MORE_THINGS_TO_DO: ; 0x004B0E, $CB0E
    LDU   X++ ; Loads sentence word ptr.
    BMI   DATA_IS_NOT_CMD ; If top bit set. In ROM test?
    LEAX  -1,X ; Not PTR, command, minus 1 because CMD is byte.
    TFR   U>D ; Save U to D
    CMPA  #$08 ; Top byte
    BHI   TOP_GT|E_8 ; Leaves
    ASLA ; Make index to ptr
    LDY   #$CB64 ; ptr
    JSR   [A,Y] ; Run code.
    BRA   DO_MORE_AFTER_CMD
DATA_IS_NOT_CMD: ; 0x004B23, $CB23
    STX   SENTENCE_PTR_WORD_ON ; Store index into sentence, aka word
    STU   SENTENCE_PTR_TO_WORD ; Store word ptr
    BRA   SKIP_SENTENCE_INIT ; Goto
NOT_END_OF_STRING: ; 0x004B29, $CB29
    STX   SENTENCE_PTR_TO_WORD ; Store index into word.
    SUBB  #$20 ; B-=20
    CMPB  #$01 ; CMP 0x20-0x21
    BLS   TEXT_CASE_USE_B ; If <=21
    CMPB  #$0B
    BLS   TEXT_CASE_USE_3 ; Misc ascii. Control chars?
    SUBB  #$0A ; B-=0x2A
    CMPB  #$10 ; CMP 0x2A to 0x3A
    BLS   TEXT_CASE_USE_B ; if <=
    CMPB  #$14 ; CMP 0x3B to 0x3E
    BLS   TEXT_CASE_USE_3 ; if <=
    SUBB  #$04 ; B-=2E
    CMPB  #$2C ; CMP 0x2E to 5A
    BLS   TEXT_CASE_USE_B
TEXT_CASE_USE_3: ; 0x004B45, $CB45
    LDB   #$03 ; Turns to 0xC
TEXT_CASE_USE_B: ; 0x004B47, $CB47
    ASLB ; Multiply by 4
    ASLB
    LDX   #$C5E3 ; TEXT_POINTER_START
    ABX ; Add to X
    TFR   X>Y ; Put to Y
    LDD   SENTENCE_CURR_SCR_LOC_XXYY ; Load screen location
    LDX   TEXT_PTR_TO_CODE_JSR ; Load ptr to code
    JSR   X ; JSR to ptr
    ADDA  Y ; Add to A@Y
    ADDA  TEXT_DATA_SPACING_XXYY? ; Add to A from mem. Minimum movement?
    STA   SENTENCE_CURR_SCR_LOC_XXYY ; Store high byte. Horizontal pos?
    LDX   TEXT_PTR_TO_CODE_JMP ; Load...
    JMP   X ; JMP to loc.
    PULS  CC,A,B,X,Y,U ; Not gotten to? Pull state.
    ANDCC #$FE ; Clear CC.C
    RTS ; RTS
TEXT_FUNCTION_POINTERS: ; 0x004B64, $CB64
    .db $CB ; FORMAT: [ptr]
    .db $76
    .db $CB
    .db $7B
    .db $CB
    .db $80
    .db $CB
    .db $87
    .db $CB
    .db $8E
    .db $CB
    .db $95
    .db $CB
    .db $9C
    .db $CB
    .db $A3
    .db $CB
    .db $AC
TEXT_FUNC_CHANGE_SPACING_X: ; 0x004B76, $CB76
    LDA   X+ ; These functions called by table above front str/text routine
    STA   TEXT_DATA_SPACING_XXYY?
    RTS
TEXT_FUNC_CHANGE_SPACING_Y: ; 0x004B7B, $CB7B
    LDB   X+
    STB   TEXT_DATA_SPACING_XXYY?+1
    RTS
TEXT_FUNC_CR.X+DATA_TO_POSX: ; 0x004B80, $CB80
    LDA   SENTENCE_CURR_SCR_LOC_CR_XXYY?
    ADDA  X+
    STA   SENTENCE_CURR_SCR_LOC_XXYY
    RTS
TEXT_FUNC_POS.X+=DATA: ; 0x004B87, $CB87
    LDA   SENTENCE_CURR_SCR_LOC_XXYY
    ADDA  X+
    STA   SENTENCE_CURR_SCR_LOC_XXYY
    RTS
TEXT_FUNC_CR.Y+DATA_TO_POSY: ; 0x004B8E, $CB8E
    LDB   SENTENCE_CURR_SCR_LOC_CR_XXYY?+1
    ADDB  X+
    STB   SENTENCE_CURR_SCR_LOC_XXYY+1
    RTS
TEXT_FUNC_POS.Y+=DATA: ; 0x004B95, $CB95
    LDB   SENTENCE_CURR_SCR_LOC_XXYY+1
    ADDB  X+
    STB   SENTENCE_CURR_SCR_LOC_XXYY+1
    RTS
TEXT_FUNC_DATA_TO_CR+POS: ; 0x004B9C, $CB9C
    LDD   X++
    STD   SENTENCE_CURR_SCR_LOC_CR_XXYY?
    STD   SENTENCE_CURR_SCR_LOC_XXYY
    RTS
TEXT_FUNC_CR: ; 0x004BA3, $CBA3
    LDA   SENTENCE_CURR_SCR_LOC_CR_XXYY?
    LDB   SENTENCE_CURR_SCR_LOC_XXYY+1
    ADDB  TEXT_DATA_SPACING_XXYY?+1
    STD   SENTENCE_CURR_SCR_LOC_XXYY
    RTS
TEXT_FUNC_JSR_ADD_JMP_IDK: ; 0x004BAC, $CBAC
    LDY   X++ ; Y from X
    STX   SENTENCE_PTR_WORD_ON ; Store stream ptr.
    LDX   TEXT_PTR_TO_CODE_JSR ; X from var.
    JSR   X ; JSR to code...
    ADDA  Y ; A+=@Y
    ADDA  TEXT_DATA_SPACING_XXYY? ; Add spacing, too.
    STA   SENTENCE_CURR_SCR_LOC_XXYY ; Store to POS.X
    LEAS  2,S ; Clean up stack from JSR here.
    LDX   TEXT_PTR_TO_CODE_JMP ; Load from
    JMP   X ; Goto
TEXT_RTN_UNK_1: ; 0x004BC1, $CBC1
    PSHS  U,Y,X,B,A,CC ; Save state.
    LDY   #$FFB3 ; JMP to TEXT_CHAR_TO_SCREEN
    LDU   #$CC0F ; PTR to AND #$F0 below
    BRA   TEXT_RTN_UNK_BASE
TEXT_RTN_UNK_2: ; 0x004BCC, $CBCC
    PSHS  U,Y,X,B,A,CC ; Save state.
    LDY   #$FFB6 ; PTR to JMP to unknown code.
    LDU   #$CC0F ; PTR to CMPA #$F0 below.
    BRA   TEXT_RTN_UNK_BASE
TEXT_RTN_UNK_3: ; 0x004BD7, $CBD7
    PSHS  U,Y,X,B,A,CC ; Save state
    LDY   #$FFB3 ; JMP to TEXT_CHAR_TO_SCREEN
    LDU   #$CC39 ; PTR to restore and RTS
    BRA   TEXT_RTN_UNK_BASE
TEXT_RTN_UNK_4: ; 0x004BE2, $CBE2
    PSHS  U,Y,X,B,A,CC
    LDY   #$FFB6 ; PTR to JMP to unknown code.
    LDU   #$CC39 ; PTR to restore and RTS
TEXT_RTN_UNK_BASE: ; 0x004BEB, $CBEB
    STY   TEXT_PTR_TO_CODE_JSR ; Store to JSR
    STU   TEXT_PTR_TO_CODE_JMP ; Store to JMP.
    LDU   TEXT_PTR_UNK
    CMPU  #$FFFF ; Is..
    BNE   TEXT_PTR_NOT_FFFF ; != to FF, go here.
    STX   SENTENCE_CURR_SCR_LOC_XXYY ; Put stream to location, temp.
    STD   TEXT_PTR_UNK ; Put D to PTR?
    BNE   BIT_STUFF_IDK ; Get jumped in the middle of maybe?
    LDD   #$0FFF ; Just do it once?
    BRA   STD_UNK
BIT_STUFF_IDK: ; 0x004C03, $CC03
    BITA  #$F0 ; Test top bits.
    BNE   STD_UNK ; If any bits set, taken.
    BSR   MANIPULATE_D ; D << 4, D|= 0x000F
    BRA   BIT_STUFF_IDK
STD_UNK: ; 0x004C0B, $CC0B
    STD   TEXT_PTR_UNK ; Store D
TEXT_PTR_NOT_FFFF: ; 0x004C0D, $CC0D
    LDD   TEXT_PTR_UNK ; Load D
    ANDA  #$F0 ; Test top bits.
    CMPA  #$F0
    BNE   NOT_0xF0 ; Not 0xF0
    PULS  CC,A,B,X,Y,U ; Pull state
    LDX   SENTENCE_CURR_SCR_LOC_XXYY ; Get stream from temp.
    ORCC  #$01 ; CC.C = 1
    RTS ; Leave
NOT_0xF0: ; 0x004C1C, $CC1C
    LSRA ; A>>2...
    LSRA
    LDX   #$C5FB ; PTR to...
    LEAY  A,X ; Y from X+A
    LDD   SENTENCE_CURR_SCR_LOC_XXYY ; Load pos
    LDX   TEXT_PTR_TO_CODE_JSR ; Load JSR
    JSR   X ; Do JSR
    ADDA  Y ; Add A@Y
    ADDA  TEXT_DATA_SPACING_XXYY? ; Add to spacing X
    STA   SENTENCE_CURR_SCR_LOC_XXYY ; Store to POS.X
    LDD   TEXT_PTR_UNK ; Get unk
    BSR   MANIPULATE_D ; Manipulate
    STD   TEXT_PTR_UNK ; Store
    LDX   TEXT_PTR_TO_CODE_JMP ; Get code to jump to.
    JMP   X ; Jump to var.
    PULS  CC,A,B,X,Y,U ; Pull saved
    ANDCC #$FE ; Clear CC.C
    RTS ; RTS
MANIPULATE_D: ; 0x004C3E, $CC3E
    ASLB ; D << 4
    ROLA
    ASLB
    ROLA
    ASLB
    ROLA
    ASLB
    ROLA
    ORB   #$0F ; D |= 0x000F
    RTS
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $05
    .db $38
    .db $4E
    .db $CE
    .db $96
    .db $09
    .db $AC
    .db $42
    .db $90
    .db $16
    .db $52
    .db $A8
    .db $F2
    .db $12
    .db $96
    .db $6A
    .db $08
    .db $C0
    .db $DE
    .db $CA
    .db $A5
    .db $54
    .db $1B
    .db $88
    .db $2D
    .db $59
    .db $A3
    .db $96
    .db $41
    .db $DC
    .db $EF
    .db $A3
    .db $27
    .db $03
    .db $B6
    .db $1C
    .db $EF
    .db $5E
    .db $FF
    .db $D7
    .db $B0
    .db $56
    .db $A4
    .db $76
    .db $C3
    .db $A0
    .db $90
    .db $9B
    .db $D9
    .db $08
    .db $D3
    .db $04
    .db $CB
    .db $99
    .db $C8
    .db $70
    .db $43
    .db $94
    .db $33
    .db $7B
    .db $6B
    .db $8D
    .db $B2
    .db $F8
    .db $00
    .db $0C
    .db $CC
    .db $CC
    .db $CC
    .db $CC
    .db $0C
    .db $00
    .db $CC
    .db $CC
    .db $CC
    .db $CC
    .db $CC
    .db $CC
    .db $CC
    .db $CC
    .db $CC
    .db $CC
    .db $CC
    .db $CC
    .db $CC
    .db $CC
    .db $CC
    .db $CC
    .db $00
    .db $C0
    .db $CC
    .db $CC
    .db $CC
    .db $CC
    .db $C0
    .db $00
    .db $A0
    .db $0A
    .db $A0
    .db $A0
    .db $00
    .db $A0
    .db $0A
    .db $00
    .db $0A
    .db $0A
    .db $A0
    .db $0A
    .db $0A
    .db $AA
    .db $0A
    .db $00
    .db $A0
    .db $00
    .db $00
    .db $0A
    .db $00
    .db $A0
    .db $AA
    .db $A0
    .db $00
    .db $02
    .db $23
    .db $02
    .db $20
    .db $22
    .db $23
    .db $22
    .db $00
    .db $00
    .db $20
    .db $00
    .db $00
    .db $00
    .db $02
    .db $00
    .db $02
    .db $22
    .db $32
    .db $22
    .db $00
    .db $20
    .db $32
    .db $20
    .db $00
    .db $00
    .db $03
    .db $03
    .db $00
    .db $00
    .db $03
    .db $30
    .db $04
    .db $34
    .db $30
    .db $30
    .db $34
    .db $30
    .db $00
    .db $00
    .db $44
    .db $44
    .db $33
    .db $33
    .db $34
    .db $30
    .db $30
    .db $30
    .db $00
    .db $30
    .db $03
    .db $03
    .db $30
    .db $30
    .db $03
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $30
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $03
    .db $00
    .db $03
    .db $33
    .db $33
    .db $03
    .db $03
    .db $30
    .db $00
    .db $44
    .db $44
    .db $03
    .db $03
    .db $43
    .db $03
    .db $03
    .db $03
    .db $40
    .db $43
    .db $30
    .db $30
    .db $43
    .db $03
    .db $00
    .db $00
    .db $00
    .db $00
    .db $30
    .db $30
    .db $00
    .db $00
    .db $30
    .db $03
    .db $00
    .db $00
    .db $03
    .db $03
    .db $00
    .db $00
    .db $03
    .db $30
    .db $04
    .db $34
    .db $03
    .db $03
    .db $34
    .db $30
    .db $00
    .db $00
    .db $44
    .db $44
    .db $30
    .db $30
    .db $34
    .db $30
    .db $30
    .db $30
    .db $00
    .db $30
    .db $33
    .db $33
    .db $30
    .db $30
    .db $03
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $30
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $03
    .db $00
    .db $03
    .db $30
    .db $30
    .db $03
    .db $03
    .db $30
    .db $00
    .db $44
    .db $44
    .db $33
    .db $33
    .db $43
    .db $03
    .db $03
    .db $03
    .db $40
    .db $43
    .db $03
    .db $03
    .db $43
    .db $03
    .db $00
    .db $00
    .db $00
    .db $00
    .db $30
    .db $30
    .db $00
    .db $00
    .db $30
    .db $03
    .db $00
    .db $00
    .db $03
    .db $03
    .db $00
    .db $00
    .db $03
    .db $30
    .db $00
    .db $33
    .db $33
    .db $33
    .db $33
    .db $30
    .db $00
    .db $00
    .db $00
    .db $33
    .db $03
    .db $03
    .db $33
    .db $30
    .db $30
    .db $30
    .db $00
    .db $30
    .db $33
    .db $33
    .db $30
    .db $30
    .db $03
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $30
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $03
    .db $00
    .db $03
    .db $33
    .db $33
    .db $03
    .db $03
    .db $30
    .db $00
    .db $00
    .db $33
    .db $30
    .db $30
    .db $03
    .db $03
    .db $03
    .db $03
    .db $00
    .db $33
    .db $33
    .db $33
    .db $33
    .db $03
    .db $00
    .db $00
    .db $00
    .db $00
    .db $30
    .db $30
    .db $00
    .db $00
    .db $30
    .db $03
    .db $00
    .db $03
    .db $34
    .db $03
    .db $33
    .db $70
    .db $40
    .db $33
    .db $33
    .db $07
    .db $44
    .db $33
    .db $33
    .db $00
    .db $04
    .db $33
    .db $30
    .db $73
    .db $40
    .db $33
    .db $00
    .db $00
    .db $30
    .db $00
    .db $00
    .db $00
    .db $03
    .db $00
    .db $03
    .db $37
    .db $44
    .db $33
    .db $33
    .db $00
    .db $04
    .db $33
    .db $33
    .db $70
    .db $40
    .db $33
    .db $33
    .db $07
    .db $44
    .db $33
    .db $00
    .db $30
    .db $03
    .db $30
    .db $00
    .db $03
    .db $30
    .db $03
    .db $33
    .db $00
    .db $44
    .db $33
    .db $33
    .db $70
    .db $04
    .db $33
    .db $33
    .db $07
    .db $40
    .db $33
    .db $30
    .db $03
    .db $44
    .db $33
    .db $00
    .db $00
    .db $30
    .db $00
    .db $00
    .db $00
    .db $03
    .db $00
    .db $03
    .db $30
    .db $04
    .db $33
    .db $33
    .db $07
    .db $40
    .db $33
    .db $33
    .db $00
    .db $44
    .db $33
    .db $33
    .db $70
    .db $04
    .db $33
    .db $00
    .db $30
    .db $43
    .db $30
    .db $00
    .db $03
    .db $34
    .db $03
    .db $33
    .db $07
    .db $04
    .db $33
    .db $33
    .db $00
    .db $40
    .db $33
    .db $33
    .db $70
    .db $44
    .db $33
    .db $30
    .db $03
    .db $04
    .db $33
    .db $00
    .db $00
    .db $30
    .db $00
    .db $00
    .db $00
    .db $03
    .db $00
    .db $03
    .db $30
    .db $40
    .db $33
    .db $33
    .db $70
    .db $44
    .db $33
    .db $33
    .db $07
    .db $04
    .db $33
    .db $33
    .db $00
    .db $40
    .db $33
    .db $00
    .db $30
    .db $43
    .db $30
    .db $00
    .db $06
    .db $26
    .db $06
    .db $26
    .db $00
    .db $66
    .db $66
    .db $66
    .db $88
    .db $88
    .db $88
    .db $00
    .db $60
    .db $66
    .db $66
    .db $88
    .db $86
    .db $00
    .db $00
    .db $00
    .db $66
    .db $66
    .db $93
    .db $00
    .db $00
    .db $00
    .db $6D
    .db $66
    .db $00
    .db $00
    .db $00
    .db $00
    .db $EF
    .db $66
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $69
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $30
    .db $00
    .db $00
    .db $00
    .db $02
    .db $00
    .db $02
    .db $00
    .db $06
    .db $66
    .db $66
    .db $28
    .db $68
    .db $08
    .db $60
    .db $66
    .db $66
    .db $86
    .db $88
    .db $88
    .db $00
    .db $00
    .db $60
    .db $66
    .db $86
    .db $69
    .db $00
    .db $00
    .db $00
    .db $66
    .db $66
    .db $30
    .db $00
    .db $00
    .db $00
    .db $DE
    .db $66
    .db $00
    .db $00
    .db $00
    .db $00
    .db $F0
    .db $66
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $93
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $39
    .db $00
    .db $00
    .db $00
    .db $00
    .db $0F
    .db $66
    .db $00
    .db $00
    .db $00
    .db $00
    .db $ED
    .db $66
    .db $00
    .db $00
    .db $00
    .db $00
    .db $66
    .db $66
    .db $03
    .db $00
    .db $00
    .db $06
    .db $66
    .db $68
    .db $96
    .db $06
    .db $66
    .db $66
    .db $68
    .db $88
    .db $88
    .db $60
    .db $66
    .db $66
    .db $83
    .db $86
    .db $80
    .db $00
    .db $00
    .db $30
    .db $00
    .db $30
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $03
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $96
    .db $00
    .db $00
    .db $00
    .db $00
    .db $FE
    .db $66
    .db $00
    .db $00
    .db $00
    .db $00
    .db $D6
    .db $66
    .db $00
    .db $00
    .db $00
    .db $00
    .db $66
    .db $66
    .db $39
    .db $00
    .db $06
    .db $66
    .db $66
    .db $88
    .db $68
    .db $66
    .db $66
    .db $66
    .db $88
    .db $88
    .db $88
    .db $00
    .db $60
    .db $63
    .db $30
    .db $63
    .db $00
    .db $06
    .db $26
    .db $68
    .db $28
    .db $60
    .db $66
    .db $66
    .db $86
    .db $00
    .db $00
    .db $66
    .db $66
    .db $00
    .db $00
    .db $ED
    .db $66
    .db $00
    .db $00
    .db $00
    .db $63
    .db $90
    .db $09
    .db $90
    .db $99
    .db $99
    .db $99
    .db $90
    .db $CC
    .db $90
    .db $11
    .db $00
    .db $11
    .db $10
    .db $11
    .db $00
    .db $10
    .db $10
    .db $10
    .db $00
    .db $10
    .db $00
    .db $11
    .db $10
    .db $11
    .db $00
    .db $11
    .db $00
    .db $10
    .db $00
    .db $10
    .db $10
    .db $10
    .db $00
    .db $11
    .db $10
    .db $10
    .db $10
    .db $11
    .db $00
    .db $10
    .db $10
    .db $10
    .db $10
    .db $10
    .db $00
    .db $01
    .db $00
    .db $01
    .db $01
    .db $01
    .db $00
    .db $11
    .db $01
    .db $11
    .db $00
    .db $11
    .db $00
    .db $01
    .db $01
    .db $01
    .db $00
    .db $01
    .db $00
    .db $11
    .db $00
    .db $11
    .db $01
    .db $11
    .db $00
    .db $01
    .db $01
    .db $01
    .db $01
    .db $01
    .db $00
    .db $11
    .db $01
    .db $01
    .db $01
    .db $11
    .db $00
    .db $FF
    .db $F0
    .db $FF
    .db $00
    .db $FF
    .db $00
    .db $F0
    .db $00
    .db $F0
    .db $F0
    .db $F0
    .db $00
    .db $EE
    .db $E0
    .db $E0
    .db $E0
    .db $EE
    .db $00
    .db $E0
    .db $E0
    .db $E0
    .db $E0
    .db $E0
    .db $00
    .db $DD
    .db $D0
    .db $D0
    .db $D0
    .db $DD
    .db $00
    .db $D0
    .db $D0
    .db $D0
    .db $D0
    .db $D0
    .db $00
    .db $0F
    .db $0F
    .db $0F
    .db $00
    .db $0F
    .db $00
    .db $FF
    .db $00
    .db $FF
    .db $0F
    .db $FF
    .db $00
    .db $0E
    .db $0E
    .db $0E
    .db $0E
    .db $0E
    .db $00
    .db $EE
    .db $0E
    .db $0E
    .db $0E
    .db $EE
    .db $00
    .db $0D
    .db $0D
    .db $0D
    .db $0D
    .db $0D
    .db $00
    .db $DD
    .db $0D
    .db $0D
    .db $0D
    .db $DD
    .db $00
    .db $1C
    .db $0D
    .db $7F
    .db $E7
    .db $70
    .db $00
    .db $0F
    .db $71
    .db $71
    .db $07
    .db $DC
    .db $77
    .db $7C
    .db $0D
    .db $71
    .db $C7
    .db $77
    .db $DE
    .db $07
    .db $71
    .db $17
    .db $17
    .db $DE
    .db $F7
    .db $71
    .db $17
    .db $71
    .db $7C
    .db $DE
    .db $F0
    .db $07
    .db $77
    .db $C7
    .db $71
    .db $17
    .db $70
    .db $70
    .db $7C
    .db $D7
    .db $77
    .db $77
    .db $70
    .db $01
    .db $CD
    .db $FF
    .db $D7
    .db $70
    .db $F0
    .db $00
    .db $00
    .db $00

;Bank 3
	.org $C000

JMP_ROM_CHECK_PASS_STARTUP: ; 0x005000, $C000
    JMP   ROM_CHECK_STARTUP_PASSED?
    JMP   L_00509C
JMP_SUCCESS?: ; 0x005006, $C006
    JMP   SUCCESS_UNK?
JMP_SRAM_CHECK_UNK: ; 0x005009, $C009
    JMP   SRAM_CHECK_UNK
    JMP   L_005BE6
    JMP   L_005BE0
    JMP   L_005C2C
    JMP   L_005C20
    JMP   L_005C26
    JMP   L_005CAF
    JMP   MOVE_@X_TO_SRAM@Y
    JMP   SETTINGS_MENU?
    JMP   L_005127
    JMP   L_005146
RUG_MISMATCH: ; 0x00502A, $C02A
    JMP   RUG_MISMATCH_JMP
JMP_RUG_LEAVE?: ; 0x00502D, $C02D
    JMP   RUG_MENU_LEAVE?
JUMP_RUG_MATCH_UNK: ; 0x005030, $C030
    JMP   RUG_MATCH_UNK
    JMP   L_005CC1
JMP_STORE_B@X_BANK0: ; 0x005036, $C036
    JMP   JMP_STORE_B@X_BANK0
LOAD_B@X_BANK0: ; 0x005039, $C039
    JMP   LOAD_B@X_BANK0
GOTO_C002_B2: ; 0x00503C, $C03C
    JSR   JMP_GOTO_PAST_JSR
    .db $C0 ; $C002, bank 2
    .db $02
    .db $02
    RTS
    JSR   JMP_GOTO_PAST_JSR
    .db $C0
    .db $05
    .db $02
    RTS
L_00504A: ; 0x00504A, $C04A
    JSR   JMP_GOTO_PAST_JSR
    .db $C0
    .db $0E
    .db $02
    RTS
L_005051: ; 0x005051, $C051
    JSR   JMP_GOTO_PAST_JSR
    .db $C0
    .db $11
    .db $02
    RTS
L_005058: ; 0x005058, $C058
    JSR   JMP_GOTO_PAST_JSR
    .db $C0
    .db $1A
    .db $02
    RTS
L_00505F: ; 0x00505F, $C05F
    JSR   JMP_GOTO_PAST_JSR
    .db $C0
    .db $1D
    .db $02
    RTS
L_005066: ; 0x005066, $C066
    JSR   JMP_GOTO_PAST_JSR
    .db $C0
    .db $20
    .db $02
    RTS
GOTO_C023_B2: ; 0x00506D, $C06D
    JSR   JMP_GOTO_PAST_JSR
    .db $C0
    .db $23
    .db $02
    RTS
    ADCB  $FF
ROM_CHECK_STARTUP_PASSED?: ; 0x005076, $C076
    JSR   CLR+READ_AUTO/ADV+CLEAR_PALETTE+DEC_COUNTER
    LDB   #$7A ; R3/7,G6/7,B2/3
    JSR   SET_COLOR_$C001
    LDU   #$C069
    LDX   #$2870 ; XXYY on screen?
    JSR   GOTO_C002_B2 ; Initial tests indicate?
    LDU   #$C06B
    LDX   #$4090
    JSR   GOTO_C002_B2 ; Unit okay?
    LDB   #$0F
    JSR   L_005AC8
    LDY   #$0BB8
    JMP   AUTO/ADV_WAIT?
L_00509C: ; 0x00509C, $C09C
    JSR   CLR+READ_AUTO/ADV+CLEAR_PALETTE+DEC_COUNTER
    LDB   #$57 ; R2/7,G5/7,B3/3
    JSR   SET_COLOR_$C001
    LDU   #$C069
    LDX   #$2870
    JSR   GOTO_C002_B2
    LDU   #$C073
    LDX   #$3890
    JSR   GOTO_C002_B2
    BRA   WAS_FROM_BOOTUP
SUCCESS_UNK?: ; 0x0050B8, $C0B8
    JSR   CLR+READ_AUTO/ADV+CLEAR_PALETTE+DEC_COUNTER
    LDB   #$57 ; R2/7,G5/7,B3/3
    JSR   SET_COLOR_$C001
    LDU   #$C069
    LDX   #$2860
    JSR   GOTO_C002_B2
    LDU   #$C071
    LDX   #$3880
    JSR   GOTO_C002_B2
    TFR   DP>A
    CMPA  #$9E ; Value if DP was 0.
    BEQ   WAS_FROM_BOOTUP
    LDU   #$C073
    LDX   #$38A0
    JSR   GOTO_C002_B2
WAS_FROM_BOOTUP: ; 0x0050E1, $C0E1
    LDY   #$0BB8
L_0050E5: ; 0x0050E5, $C0E5
    JSR   LONG_MESSAGE_INITIAL_TEST_INDICATE?
    LDX   #$CC00
    JSR   LOAD_B@X_BANK0
    BITB  #$02
    BEQ   L_0050F7
    LSRB
    BLO   L_0050FB
    BRA   L_005146
L_0050F7: ; 0x0050F7, $C0F7
    LEAY  -1,Y
    BNE   L_0050E5
L_0050FB: ; 0x0050FB, $C0FB
    RTS
SRAM_CHECK_UNK: ; 0x0050FC, $C0FC
    ANDCC #$EF ; Clear IRQ mask.
    LDX   #$C47F
    JSR   JMP_GET_DATA_FROM_SRAM@X_IN_B
    CMPB  #$5A
    BNE   GOTO_SETTINGS_MENU ; Go if mismatch.
    LDX   #$C400
    JSR   LOAD_B@X_BANK0
    ANDB  #$0F
    BNE   C400_NOT_0 ; Some bits set.
    RTS
C400_NOT_0: ; 0x005113, $C113
    CLRB
    JSR   JMP_STORE_B@X_BANK0 ; Clear location.
    LDX   #$C47D
    JSR   JMP_GET_DATA_FROM_SRAM@X_IN_B ; Get data here
    CLRA ; Cleasr A
    LEAX  -2,X ; Fix location.
    JSR   JMP_STORE_A_TO_SRAM_@X_BANKED ; Clear location.
    CMPB  #$15 ; Previous value.
    BNE   PREV_NOT_0x15
L_005127: ; 0x005127, $C127
    ANDCC #$7F
    BRA   L_005146
PREV_NOT_0x15: ; 0x00512B, $C12B
    CMPB  #$25
    BNE   PREV_NOT_0x25
    JMP   L_005CAF
PREV_NOT_0x25: ; 0x005132, $C132
    CMPB  #$35
    BNE   PREV_NOT_35
    JMP   L_005BBF
PREV_NOT_35: ; 0x005139, $C139
    CMPB  #$45
    BEQ   GOTO_SETTINGS_MENU
    RTS ; Leave otherwise.
GOTO_SETTINGS_MENU: ; 0x00513E, $C13E
    LEAS  2,S ; Clean stack because we will not RTS.
    JSR   INIT_SRAM
    JMP   SETTINGS_MENU? ; Settings menu?
L_005146: ; 0x005146, $C146
    ORCC  #$10
    JSR   CLR+READ_AUTO/ADV+CLEAR_PALETTE+DEC_COUNTER
    JSR   L_002FBF
    PSHS  U
    LDU   L_002F9F
    LEAU  24,U
    STU   $43
    PULS  U
    CMPU  $43
    BEQ   L_0051CF
    STU   $5B
    LDB   #$08
    JSR   ROM_BOARD_LED_DISPLAY_B
    LDB   #$57
    JSR   SET_COLOR_$C001
    LDU   #$C071
    LDX   #$3860
    JSR   GOTO_C002_B2
    LDY   #$C035
    JSR   GOTO_C023_B2
    LDD   #$4266
    STD   $4A
L_005180: ; 0x005180, $C180
    LDX   $4A
    LEAX  10,X
    STX   $4A
    LDU   #$C06D
    JSR   GOTO_C002_B2
    LDU   L_002F9F
    STU   $43
    LDU   $5B
    LDD   $5B
    SUBD  $43
    LSRB
    BLO   L_00519C
    LEAU  1,U
L_00519C: ; 0x00519C, $C19C
    INCB
    STB   $3A
    JSR   L_005B23
    LDX   SENTENCE_CURR_SCR_LOC_XXYY
    JSR   L_00504A
    JSR   WATCHDOG/READ_AUTO+ADV_SWITCHES
    JSR   L_002FC2
    STU   $5B
    LDU   L_002F9F
    LEAU  24,U
    CMPU  $5B
    BNE   L_005180
    JSR   L_005A0E
    TST   $49
    BNE   L_0051F1
    LDB   $3A
    JSR   ROM_BOARD_LED_DISPLAY_B
    LDY   #$C039
    JSR   GOTO_C023_B2
    BRA   L_0051EE
L_0051CF: ; 0x0051CF, $C1CF
    TFR   CC>B
    TSTB
    BPL   L_005212
    LDB   #$7A
    JSR   SET_COLOR_$C001
    LDU   #$C077
    LDX   #$3880
    JSR   GOTO_C002_B2
    LDY   #$C039
    JSR   GOTO_C023_B2
    LDB   #$08
    JSR   L_005AC8
L_0051EE: ; 0x0051EE, $C1EE
    JSR   L_005A39
L_0051F1: ; 0x0051F1, $C1F1
    JSR   CLR+READ_AUTO/ADV+CLEAR_PALETTE+DEC_COUNTER
    CLRB
    JSR   ROM_BOARD_LED_DISPLAY_B
    JSR   SET_COLOR_#$A5_$C001
    LDU   #$C079
    LDX   #$4080
    JSR   GOTO_C002_B2
    LDY   #$C03D
    JSR   GOTO_C023_B2
    LDY   #$1388
    JSR   AUTO/ADV_WAIT?
L_005212: ; 0x005212, $C212
    JSR   LONG_MESSAGE_INITIAL_TEST_INDICATE?
    TST   $49
    LBNE  Y_IS_#$000A
    TST   $47
    BNE   L_005212
    LDX   #$C000
    LDB   #$C0
L_005224: ; 0x005224, $C224
    JSR   JMP_STORE_B@X_BANK0
    LDA   #$B5
    MUL
    EXG   A-B
    LEAX  1,X
    CMPX  #$C010
    BNE   L_005224
    LDD   #$0000
    LDY   #$000A
    JMP   JMP_RUG_SETUP
RUG_MISMATCH_JMP: ; 0x00523D, $C23D
    TFR   Y>D
    EORB  -X
    EORA  -X
    STD   $41
    STX   $43
    JSR   CLEAR_COLOR_PALETTE
    JSR   JMP_CLEAR_ALL_SCREEN
    JSR   SETUP_52+49+48+36+59
    JSR   WATCHDOG/READ_AUTO+ADV_SWITCHES
    LDB   #$04
    JSR   ROM_BOARD_LED_DISPLAY_B
    LDB   #$57
    JSR   SET_COLOR_$C001
    LDU   #$C073
    LDX   #$3870
    JSR   GOTO_C002_B2
    LDY   #$C041
    JSR   GOTO_C023_B2
    LDD   $41
    TSTA
    BNE   L_005274
    TFR   B>A
L_005274: ; 0x005274, $C274
    CLRB
L_005275: ; 0x005275, $C275
    INCB
    LSRA
    BHS   L_005275
    STB   $3A
    LDD   $43
L_00527D: ; 0x00527D, $C27D
    SUBA  #$03
    BHS   L_00527D
    ADDA  #$04
    STA   $3B
    LDU   #$C06F
    LDX   #$4290
    JSR   GOTO_C002_B2
    LDB   $3B
    ASLB
    ASLB
    ASLB
    ASLB
    ADDB  $3A
    CLRA
    LDX   SENTENCE_CURR_SCR_LOC_XXYY
    JSR   L_00504A
    JSR   L_005A0E
    TST   $49
    BNE   Y_IS_#$000A
    LDA   $3B
    LDB   #$10
L_0052A7: ; 0x0052A7, $C2A7
    LSRB
    DECA
    BNE   L_0052A7
    JSR   ROM_BOARD_LED_DISPLAY_B
    JSR   L_005A0E
    TST   $49
    BNE   Y_IS_#$000A
    LDB   $3A
    JSR   ROM_BOARD_LED_DISPLAY_B
    LDY   #$C045
    JSR   GOTO_C023_B2
    BRA   L_0052EF
RUG_MENU_LEAVE?: ; 0x0052C3, $C2C3
    JSR   CLEAR_COLOR_PALETTE
    JSR   JMP_CLEAR_ALL_SCREEN
    JSR   SETUP_52+49+48+36+59
    JSR   WATCHDOG/READ_AUTO+ADV_SWITCHES
    CMPY  #$000A
    BEQ   Y_IS_#$000A
    LDB   #$7A ; R3/7,B6/7,G2/3
    JSR   SET_COLOR_$C001
    LDU   #$C07B
    LDX   #$2880
    JSR   GOTO_C002_B2
    LDY   #$C045
    JSR   GOTO_C023_B2
    LDB   #$04
    JSR   L_005AC8
L_0052EF: ; 0x0052EF, $C2EF
    JSR   L_005A39
Y_IS_#$000A: ; 0x0052F2, $C2F2
    JSR   CLR+READ_AUTO/ADV+CLEAR_PALETTE+DEC_COUNTER
    TFR   DP>A
    CMPA  #$A2
    BNE   L_005318
    LDB   #$02
    JSR   ROM_BOARD_LED_DISPLAY_B
    LDB   #$57
    JSR   SET_COLOR_$C001
    LDU   #$C081
    LDX   #$2880
    JSR   GOTO_C002_B2
    LDY   #$C049
    JSR   GOTO_C023_B2
    JMP   L_0053BB
L_005318: ; 0x005318, $C318
    ADDA  #$03
    CLRB
    STD   $41
    LDU   $41
    LDX   #$C400
L_005322: ; 0x005322, $C322
    JSR   LOAD_B@X_BANK0
    STB   U+
    LEAX  1,X
    CMPX  #$C500
    BNE   L_005322
    LDD   #$0010
    STB   $3A
    CLRA
L_005334: ; 0x005334, $C334
    LDX   #$C400
    LDB   $3A
L_005339: ; 0x005339, $C339
    JSR   JMP_STORE_B@X_BANK0
    LEAX  1,X
    INCB
    CMPB  $3A
    BNE   L_005339
    LDX   #$C400
    INCA
L_005347: ; 0x005347, $C347
    JSR   LOAD_B@X_BANK0
    STB   $3B
    LEAX  1,X
    JSR   LOAD_B@X_BANK0
    SUBB  $3B
    DECB
    ANDB  #$0F
    BNE   L_005366
    INCA
    BNE   L_005347
    JSR   WATCHDOG/READ_AUTO+ADV_SWITCHES
    TST   $49
    BNE   L_005366
    DEC   $3A
    BNE   L_005334
L_005366: ; 0x005366, $C366
    LDU   $41
    LDX   #$C400
L_00536B: ; 0x00536B, $C36B
    LDB   U+
    JSR   JMP_STORE_B@X_BANK0
    LEAX  1,X
    CMPX  #$C500
    BNE   L_00536B
    TST   $49
    BNE   L_0053BE
    LDA   $3A
    BEQ   L_0053A1
    LDB   #$02
    JSR   ROM_BOARD_LED_DISPLAY_B
    LDB   #$57
    JSR   SET_COLOR_$C001
    JSR   WATCHDOG/READ_AUTO+ADV_SWITCHES
    LDU   #$C07D
    LDX   #$3080
    JSR   GOTO_C002_B2
    JSR   WATCHDOG/READ_AUTO+ADV_SWITCHES
    LDY   #$C049
    JSR   GOTO_C023_B2
    BRA   L_0053BB
L_0053A1: ; 0x0053A1, $C3A1
    LDB   #$7A
    JSR   SET_COLOR_$C001
    LDU   #$C07F
    LDX   #$3880
    JSR   GOTO_C002_B2
    LDY   #$C049
    JSR   GOTO_C023_B2
    LDB   #$02
    JSR   L_005AC8
L_0053BB: ; 0x0053BB, $C3BB
    JSR   L_005A39
L_0053BE: ; 0x0053BE, $C3BE
    JSR   CLR+READ_AUTO/ADV+CLEAR_PALETTE+DEC_COUNTER
    LDB   #$01
    JSR   ROM_BOARD_LED_DISPLAY_B
    JSR   SET_COLOR_#$A5_$C001
    LDU   #$C083
    LDX   #$3880
    JSR   GOTO_C002_B2
    LDY   #$C04D
    JSR   GOTO_C023_B2
    LDY   #$1388
    JSR   AUTO/ADV_WAIT?
    JSR   L_005B67
    LDY   #$07D0
L_0053E7: ; 0x0053E7, $C3E7
    LDU   #$C9D8
L_0053EA: ; 0x0053EA, $C3EA
    LDB   U+
    LDX   #$C000
L_0053EF: ; 0x0053EF, $C3EF
    JSR   JMP_STORE_B@X_BANK0
    LEAX  1,X
    CMPX  #$C010
    BNE   L_0053EF
    JSR   AUTO/ADV_WAIT?
    CMPU  #$C9E0
    BNE   L_0053EA
    TST   $49
    BEQ   L_0053E7
RUG_MATCH_UNK: ; 0x005406, $C406
    JSR   CLR+READ_AUTO/ADV+CLEAR_PALETTE+DEC_COUNTER
    CLRB
    STB   $41 ; Clear
    STB   $42 ; Set
    JSR   ROM_BOARD_LED_DISPLAY_B
    JSR   SET_COLOR_#$A5_$C001 ; Red?
    LDU   #$C085 ; Str?
    LDX   #$4078 ; Screen loc?
    JSR   GOTO_C002_B2 ; Text?
    LDY   #$C055
    JSR   GOTO_C023_B2 ; Text?
    LDY   #$0001 ; Set
L_005428: ; 0x005428, $C428
    LDU   #$C9F0 ; Load
    CLRA ; Clear
LOOP_ERROR?: ; 0x00542C, $C42C
    LDX   #$CC00
    JSR   LOAD_B@X_BANK0 ; Get ROM PIA
    BITB  #$01 ; Test auto/manual
    BNE   AUTO/MANUAL PRESSED
    BITB  #$02 ; Test advance switch
    BNE   ADVANCED_PRESSED
    JSR   LONG_MESSAGE_INITIAL_TEST_INDICATE?
    BRA   LOOP_ERROR?
AUTO/MANUAL PRESSED: ; 0x00543F, $C43F
    JSR   AUTO/ADV_WAIT?
L_005442: ; 0x005442, $C442
    INCA
    CMPA  U
    BNE   L_00544B
    LEAU  1,U
    BRA   L_005442
L_00544B: ; 0x00544B, $C44B
    STA   $3A
    EORA  #$3F
ADVANCED_PRESSED: ; 0x00544F, $C44F
    LDB   #$13
    JSR   L_005B0B
    TST   $49
    BNE   L_005486
    LDB   $3A
    JSR   L_005B0B
    LDY   #$03E8
    LDD   $41
    LDX   #$5A8C
    JSR   L_005051
    LDB   $3A
    JSR   L_005B23
    CLRA
    STD   $41
    LDX   #$5A8C
    JSR   L_00504A
    LDA   $3A
    CMPA  #$1F
    BNE   LOOP_ERROR?
    TFR   CC>B
    TSTB
    LBPL  L_005585
    BRA   L_005428
L_005486: ; 0x005486, $C486
    JSR   CLR+READ_AUTO/ADV+CLEAR_PALETTE+DEC_COUNTER
    JSR   SET_COLOR_#$A5_$C001
    LDU   #$C087
    LDX   #$3820
    JSR   GOTO_C002_B2
    LDY   #$C059
    JSR   GOTO_C023_B2
    TFR   DP>A
    LDB   #$62
    STD   $41
    ADDB  #$26
    TFR   D>X
    LDA   #$FF
L_0054A8: ; 0x0054A8, $C4A8
    STA   -X
    CMPX  $41
    BNE   L_0054A8
    CLR   $5D
    CLR   $5E
    CLR   $5F
    CLR   $60
    CLR   $61
L_0054B8: ; 0x0054B8, $C4B8
    LDA   #$01
    STA   $3C
    LDX   #$CC00
    LDU   $41
    LEAU  -5,U
    CLRA
L_0054C4: ; 0x0054C4, $C4C4
    JSR   LOAD_B@X_BANK0
    CMPX  #$CC06
    BNE   L_0054CE
    ANDB  #$7F
L_0054CE: ; 0x0054CE, $C4CE
    CMPA  #$18
    BNE   L_0054D4
    ANDB  #$CF
L_0054D4: ; 0x0054D4, $C4D4
    STB   $3A
    EORB  U+
    BNE   L_005512
    ADDA  #$08
L_0054DC: ; 0x0054DC, $C4DC
    LEAX  2,X
    CMPX  #$CC02
    BEQ   L_0054DC
    CMPX  #$CC08
    BNE   L_0054C4
    CMPA  #$28
    BEQ   L_005501
    LEAX  -2,X
    JSR   LOAD_B@X_BANK0
    TSTB
    BPL   L_005501
    LDB   #$34
    LEAX  1,X
    JSR   JMP_STORE_B@X_BANK0
    LEAX  -3,X
    INC   $3C
    BRA   L_0054C4
L_005501: ; 0x005501, $C501
    LDB   #$3C
    LDX   #$CC07
    JSR   JMP_STORE_B@X_BANK0
    JSR   WATCHDOG/READ_AUTO+ADV_SWITCHES
    TST   $49
    BEQ   L_0054B8
    BRA   L_005585
L_005512: ; 0x005512, $C512
    STB   $3B
    LDB   #$01
L_005516: ; 0x005516, $C516
    BITB  $3B
    BNE   L_00551E
    INCA
    ASLB
    BRA   L_005516
L_00551E: ; 0x00551E, $C51E
    LDX   $41
    BITB  $3A
    BNE   L_005538
    EORB  -U
    STB   U
L_005528: ; 0x005528, $C528
    CMPA  X+
    BNE   L_005528
    COM   -X
    BSR   L_00556C
    LDD   #$3808
    JSR   L_002FB9
    BRA   L_005501
L_005538: ; 0x005538, $C538
    EORB  -U
    STB   U
    LDB   #$08
    JSR   L_005B0B
L_005541: ; 0x005541, $C541
    TST   X+
    BPL   L_005541
    STA   -X
    PSHS  A
    BSR   L_00556C
    JSR   GOTO_C002_B2
    PULS  A
    CMPA  #$08
    BLO   L_005501
    LSRA
    CMPA  #$06
    BEQ   L_005501
    LDX   #$CC06
    JSR   LOAD_B@X_BANK0
    TSTB
    BPL   L_005501
    LDX   SENTENCE_CURR_SCR_LOC_XXYY
    CLRA
    LDB   $3C
    JSR   L_00504A
    BRA   L_005501
L_00556C: ; 0x00556C, $C56C
    LDU   #$C08B
    CMPA  #$18
    BLO   L_005575
    SUBA  #$10
L_005575: ; 0x005575, $C575
    ASLA
    LEAU  A,U
    TFR   X>D
    SUBD  $41
    LDA   #$0A
    MUL
    ADDD  #$3830
    TFR   D>X
    RTS
L_005585: ; 0x005585, $C585
    JSR   CLR+READ_AUTO/ADV+CLEAR_PALETTE+DEC_COUNTER
    JSR   SET_COLOR_#$A5_$C001
    LDU   #$C089
    LDX   #$2880
    JSR   GOTO_C002_B2
    LDY   #$C05D
    JSR   GOTO_C023_B2
    LDX   #$CC00
L_00559E: ; 0x00559E, $C59E
    LDU   #$C9F4
L_0055A1: ; 0x0055A1, $C5A1
    JSR   LOAD_B@X_BANK0
    BITB  #$01
    BEQ   L_0055BC
    LDY   #$1388
    JSR   AUTO/ADV_WAIT?
    TST   $49
    LBNE  SETTINGS_MENU?
    JSR   LOAD_B@X_BANK0
    BITB  #$01
    BNE   L_0055C5
L_0055BC: ; 0x0055BC, $C5BC
    JSR   L_005A0E
    TST   $49
    LBNE  SETTINGS_MENU?
L_0055C5: ; 0x0055C5, $C5C5
    PSHS  U,Y,X
    JSR   [U]
    PULS  X,Y,U
    LEAU  2,U
    CMPU  #$C9FE
    BNE   L_0055A1
    LDY   #$1388
    JSR   AUTO/ADV_WAIT?
    TFR   CC>B
    TSTB
    LBPL  L_005146
    BRA   L_00559E
    JSR   WATCHDOG/READ_AUTO+ADV_SWITCHES
    JSR   JMP_CLEAR_ALL_SCREEN
    JSR   CLEAR_COLOR_PALETTE
    LDX   #$C001
    LDB   #$FF
    JSR   JMP_STORE_B@X_BANK0
    LDX   #$C002
    LDB   #$C0
    JSR   JMP_STORE_B@X_BANK0
    LDX   #$C003
    LDB   #$38
    JSR   JMP_STORE_B@X_BANK0
    LDX   #$C004
    LDB   #$07
    JSR   JMP_STORE_B@X_BANK0
    JSR   WATCHDOG/READ_AUTO+ADV_SWITCHES
    LDY   #$C6F7
    LDD   #$0101
L_005616: ; 0x005616, $C616
    LDX   Y
L_005618: ; 0x005618, $C618
    STD   X++
    CMPX  2,Y
    BNE   L_005618
    LEAY  4,Y
    CMPY  #$C71F
    BNE   L_005616
    JSR   WATCHDOG/READ_AUTO+ADV_SWITCHES
    LDA   #$11
    LDY   #$C6D7
L_00562F: ; 0x00562F, $C62F
    LDX   Y
    STX   $45
L_005633: ; 0x005633, $C633
    STA   X
    INC   $45
    LDX   $45
    CMPX  2,Y
    BNE   L_005633
    LEAY  4,Y
    CMPY  #$C6F7
    BNE   L_00562F
    JSR   WATCHDOG/READ_AUTO+ADV_SWITCHES
    LDY   #$C71F
L_00564C: ; 0x00564C, $C64C
    LDX   Y
    STX   $45
    LDA   4,Y
L_005652: ; 0x005652, $C652
    STA   X
    INC   $45
    LDX   $45
    CMPX  2,Y
    BNE   L_005652
    LEAY  5,Y
    CMPY  #$C75B
    BNE   L_00564C
    JSR   WATCHDOG/READ_AUTO+ADV_SWITCHES
    LDY   #$C75B
L_00566B: ; 0x00566B, $C66B
    LDX   Y
    LDA   4,Y
L_00566F: ; 0x00566F, $C66F
    STA   X+
    CMPX  2,Y
    BNE   L_00566F
    LEAY  5,Y
    CMPY  #$C76F
    BNE   L_00566B
    JSR   WATCHDOG/READ_AUTO+ADV_SWITCHES
    LDA   #$21
    STA   R_467E
    LDA   #$20
    STA   R_967E
    LDX   #$4E0A
L_00568D: ; 0x00568D, $C68D
    LDA   X
    ANDA  #$F0
    ORA   #$02
    STA   X+
    CMPX  #$4E6D
    BNE   L_00568D
    LDX   #$4E90
L_00569D: ; 0x00569D, $C69D
    LDA   X
    ANDA  #$F0
    ORA   #$02
    STA   X+
    CMPX  #$4EF3
    BNE   L_00569D
    JSR   WATCHDOG/READ_AUTO+ADV_SWITCHES
    LDX   #$0E18
    STX   $45
L_0056B2: ; 0x0056B2, $C6B2
    LDX   $45
    LDA   X
    ANDA  #$F0
    ORA   #$01
    STA   X
    LDB   $46
    ADDB  #$22
    BLO   L_0056C6
    STB   $46
    BRA   L_0056B2
L_0056C6: ; 0x0056C6, $C6C6
    LDB   #$18
    STB   $46
    LDB   $45
    ADDB  #$10
    STB   $45
    CMPB  #$9E
    BNE   L_0056B2
    JMP   WATCHDOG/READ_AUTO+ADV_SWITCHES
    .db $07
    .db $07
    .db $97
    .db $07
    .db $07
    .db $29
    .db $97
    .db $29
    .db $07
    .db $4B
    .db $97
    .db $4B
    .db $07
    .db $6D
    .db $97
    .db $6D
    .db $07
    .db $8F
    .db $97
    .db $8F
    .db $07
    .db $B1
    .db $97
    .db $B1
    .db $07
    .db $D3
    .db $97
    .db $D3
    .db $07
    .db $F5
    .db $97
    .db $F5
    .db $06
    .db $07
    .db $06
    .db $F5
    .db $16
    .db $07
    .db $16
    .db $F5
    .db $26
    .db $07
    .db $26
    .db $F5
    .db $36
    .db $07
    .db $36
    .db $F5
    .db $46
    .db $07
    .db $46
    .db $F5
    .db $56
    .db $07
    .db $56
    .db $F5
    .db $66
    .db $07
    .db $66
    .db $F5
    .db $76
    .db $07
    .db $76
    .db $F5
    .db $86
    .db $07
    .db $86
    .db $F5
    .db $96
    .db $07
    .db $96
    .db $F5
    .db $48
    .db $05
    .db $55
    .db $05
    .db $44
    .db $48
    .db $06
    .db $55
    .db $06
    .db $44
    .db $48
    .db $07
    .db $55
    .db $07
    .db $00
    .db $48
    .db $08
    .db $55
    .db $08
    .db $33
    .db $48
    .db $09
    .db $55
    .db $09
    .db $33
    .db $48
    .db $F3
    .db $55
    .db $F3
    .db $33
    .db $48
    .db $F4
    .db $55
    .db $F4
    .db $33
    .db $48
    .db $F5
    .db $55
    .db $F5
    .db $00
    .db $48
    .db $F6
    .db $55
    .db $F6
    .db $44
    .db $48
    .db $F7
    .db $55
    .db $F7
    .db $44
    .db $07
    .db $7E
    .db $46
    .db $7E
    .db $22
    .db $57
    .db $7E
    .db $96
    .db $7E
    .db $22
    .db $05
    .db $6F
    .db $05
    .db $8E
    .db $04
    .db $06
    .db $6F
    .db $06
    .db $8E
    .db $30
    .db $96
    .db $6F
    .db $96
    .db $8E
    .db $00
    .db $97
    .db $6F
    .db $97
    .db $8E
    .db $34
    .db $BD
    .db $FF
    .db $BC
    .db $C6
    .db $05
L_005774: ; 0x005774, $C774
    LDX   #$C000
    BSR   L_00577C
    LDX   #$C00C
L_00577C: ; 0x00577C, $C77C
    JMP   JMP_STORE_B@X_BANK0
    LDB   #$28
    BRA   L_005774
    LDB   #$80
    BRA   L_005774
    LDY   #$C9FE
    JSR   L_005A97
    JMP   L_005B3B
SET_COLOR_#$A5_$C001: ; 0x005791, $C791
    LDB   #$A5
SET_COLOR_$C001: ; 0x005793, $C793
    LDX   #$C001
    JMP   JMP_STORE_B@X_BANK0
SETTINGS_MENU?: ; 0x005799, $C799
    JSR   WATCHDOG/READ_AUTO+ADV_SWITCHES
    JSR   CLR+READ_AUTO/ADV+CLEAR_PALETTE+DEC_COUNTER
    BSR   SET_COLOR_#$A5_$C001
    LDU   #$C0D7
    LDX   #$2820
    JSR   WATCHDOG/READ_AUTO+ADV_SWITCHES
    JSR   GOTO_C002_B2
    LDY   #$C061
    JSR   GOTO_C023_B2
    LDY   #$05DC
    JSR   AUTO/ADV_WAIT?
    TST   $49
    BNE   L_00581F
    CLR   $3C
    LDA   #$01
    STA   $3B
    LEAS  -32,S
    JSR   JMP_CLEAR_ALL_SCREEN
    LDU   #$C0D7
    LDX   #$2820
    JSR   WATCHDOG/READ_AUTO+ADV_SWITCHES
    JSR   GOTO_C002_B2
    CLR   $3A
    LDY   #$C065
    JSR   L_005066
    JSR   WATCHDOG/READ_AUTO+ADV_SWITCHES
    LDA   #$20
    TFR   A>B
    DECB
    LEAX  S
L_0057EA: ; 0x0057EA, $C7EA
    STA   X+
    DECB
    BNE   L_0057EA
    LDA   #$2F
    STA   X+
    LEAX  S
L_0057F5: ; 0x0057F5, $C7F5
    JSR   LONG_MESSAGE_INITIAL_TEST_INDICATE?
    LDX   #$CC00
    JSR   LOAD_B@X_BANK0
    BITB  #$02
    BEQ   L_005825
    BITB  #$01
    BNE   L_005812
    INC   $3B
    DEC   $3C
    BPL   L_005825
    LDB   #$1B
    STB   $3C
    BRA   L_005825
L_005812: ; 0x005812, $C812
    INC   $3C
    INC   $3B
    LDA   #$1C
    CMPA  $3C
    BNE   L_005825
    LEAS  32,S
L_00581F: ; 0x00581F, $C81F
    JSR   WATCHDOG/READ_AUTO+ADV_SWITCHES
    JMP   L_002FC8
L_005825: ; 0x005825, $C825
    JSR   L_00597A
    TST   $3B
    BEQ   L_0057F5
    LDB   $3C
    CMPB  #$09
    BNE   L_005857
    LDX   #$C487
    JSR   JMP_GET_DATA_FROM_SRAM@X_IN_B
    TSTB
    BEQ   L_005857
    CMPB  #$08
    BHI   L_005844
    JSR   L_005B99
    BRA   L_005857
L_005844: ; 0x005844, $C844
    LDX   #$C487
    PSHS  X
    LDB   #$01
    JSR   L_002FAD
    JSR   L_005B99
    CLRB
    PULS  X
    JSR   L_002FAD
L_005857: ; 0x005857, $C857
    BSR   L_005891
    LDA   $3A
    CMPA  #$06
    BEQ   L_00586D
    TSTA
    BNE   L_005866
    LDA   #$64
    BRA   L_005868
L_005866: ; 0x005866, $C866
    LDA   #$06
L_005868: ; 0x005868, $C868
    STA   $3A
    INCA
    LDB   #$FF
L_00586D: ; 0x00586D, $C86D
    JSR   LONG_MESSAGE_INITIAL_TEST_INDICATE?
    DECA
    BEQ   L_00588C
    LDX   #$CC00
    PSHS  B
    JSR   LOAD_B@X_BANK0
    BITB  #$0A
    BNE   L_005883
    ANDCC #$FE
    BRA   L_005885
L_005883: ; 0x005883, $C883
    ORCC  #$01
L_005885: ; 0x005885, $C885
    PULS  B
    RORB
    BNE   L_00586D
    CLR   $3A
L_00588C: ; 0x00588C, $C88C
    CLR   $3B
    JMP   L_0057F5
L_005891: ; 0x005891, $C891
    LEAY  2,S
    LDX   #$1080
    JSR   L_005058
    JSR   L_00591F
    LDA   $3C
    INCA
    JSR   L_005902
    JSR   L_005910
    STD   X
    LDB   $3C
    ASLB
    ASLB
    LDX   #$CCD6
    ABX
    LDY   X
    LDU   2,X
    LEAX  14,S
L_0058B6: ; 0x0058B6, $C8B6
    LDA   Y+
    CMPA  #$2F
    BEQ   L_0058C0
    STA   X+
    BRA   L_0058B6
L_0058C0: ; 0x0058C0, $C8C0
    TFR   U>D
    LEAU  2,S
    LDX   #$C400
    ABX
    JSR   JMP_GET_DATA_FROM_SRAM@X_IN_B
    PSHS  B,A
    LDB   $3C
    INCB
    CMPB  #$07
    BHI   L_0058E7
L_0058D4: ; 0x0058D4, $C8D4
    PULS  A,B
    TFR   B>A
    JSR   L_005910
    STD   7,U
    JSR   L_002FA1
L_0058E0: ; 0x0058E0, $C8E0
    JSR   L_005910
    STD   9,U
    BRA   L_0058FA
L_0058E7: ; 0x0058E7, $C8E7
    CMPB  #$08
    BNE   L_0058F4
    LDD   #$3030
    STD   9,U
    LEAU  -2,U
    BRA   L_0058D4
L_0058F4: ; 0x0058F4, $C8F4
    PULS  A,B
    TFR   B>A
    BRA   L_0058E0
L_0058FA: ; 0x0058FA, $C8FA
    LDX   #$1080
    LEAY  2,S
    JMP   L_00505F
L_005902: ; 0x005902, $C902
    PSHS  B
    TFR   A>B
    LDA   #$99
L_005908: ; 0x005908, $C908
    ADDA  #$01
    DAA
    DECB
    BPL   L_005908
    PULS  B,PC
L_005910: ; 0x005910, $C910
    TFR   A>B
    ANDA  #$F0
    LSRA
    LSRA
    LSRA
    LSRA
    ADDA  #$30
    ANDB  #$0F
    ADDB  #$30
    RTS
L_00591F: ; 0x00591F, $C91F
    LDA   #$20
    TFR   A>B
    DECB
    LEAX  4,S
L_005926: ; 0x005926, $C926
    STA   X+
    DECB
    BNE   L_005926
    LDA   #$2F
    STA   X+
    LEAX  4,S
    RTS
L_005932: ; 0x005932, $C932
    CMPX  #$C481
    BNE   L_005951
    JSR   JMP_GET_DATA_FROM_SRAM@X_IN_AB
    LEAX  -4,X
    EXG   A-B
    ADDA  #$10
    DAA
    BHS   L_00594A
    EXG   A-B
    ADDA  #$01
L_005947: ; 0x005947, $C947
    DAA
    EXG   A-B
L_00594A: ; 0x00594A, $C94A
    EXG   A-B
    INC   $3B
    JMP   L_002FB0
L_005951: ; 0x005951, $C951
    JSR   L_002FA1
    ADDA  #$01
L_005956: ; 0x005956, $C956
    DAA
    LEAX  -2,X
    INC   $3B
    JMP   JMP_STORE_A_TO_SRAM_@X_BANKED
L_00595E: ; 0x00595E, $C95E
    CMPX  #$C481
    BNE   L_005973
    JSR   JMP_GET_DATA_FROM_SRAM@X_IN_AB
    LEAX  -4,X
    EXG   A-B
    ADDA  #$90
    DAA
    EXG   A-B
    ADCA  #$99
    BRA   L_005947
L_005973: ; 0x005973, $C973
    JSR   L_002FA1
    ADDA  #$99
    BRA   L_005956
L_00597A: ; 0x00597A, $C97A
    LDB   $3C
    INCB
    CMPB  #$07
    BHI   L_005982
L_005981: ; 0x005981, $C981
    RTS
L_005982: ; 0x005982, $C982
    CMPB  #$09
    BLS   L_005997
    CMPB  #$10
    BHI   L_005997
    CMPB  #$0A
    BEQ   L_005997
    LDX   #$C487
    JSR   L_002FA1
    TSTA
    BNE   L_005981
L_005997: ; 0x005997, $C997
    DECB
    ASLB
    ASLB
    LDX   #$CCD6
    ABX
    LDB   3,X
    LDX   #$C400
    ABX
    PSHS  X
L_0059A6: ; 0x0059A6, $C9A6
    JSR   LONG_MESSAGE_INITIAL_TEST_INDICATE?
    LDX   #$CC00
    JSR   LOAD_B@X_BANK0
    BITB  #$02
    BEQ   L_0059B5
    PULS  X,PC
L_0059B5: ; 0x0059B5, $C9B5
    BITB  #$08
    BNE   L_0059BD
    CLR   $3A
    BRA   L_0059A6
L_0059BD: ; 0x0059BD, $C9BD
    PULS  X
    CMPX  #$C47D
    BNE   L_0059D0
    PSHS  X,B
    LDX   #$C400
    LDB   #$01
    JSR   JMP_STORE_B@X_BANK0
    PULS  B,X
L_0059D0: ; 0x0059D0, $C9D0
    LSRB
    LBLO  L_005932
    JMP   L_00595E
    .db $02
    .db $03
    .db $04
    .db $10
    .db $18
    .db $20
    .db $40
    .db $80
    .db $00
    .db $FF
    .db $11
    .db $EE
    .db $22
    .db $DD
    .db $33
    .db $CC
    .db $44
    .db $BB
    .db $55
    .db $AA
    .db $66
    .db $99
    .db $77
    .db $88
    .db $13
    .db $1B
    .db $1C
    .db $00
    .db $C5
    .db $E3
    .db $C7
    .db $6F
    .db $C7
    .db $7F
    .db $C7
    .db $83
    .db $C7
    .db $87
    .db $05
    .db $05
    .db $28
    .db $28
    .db $80
    .db $80
    .db $00
    .db $00
    .db $AD
    .db $AD
    .db $2D
    .db $2D
    .db $A8
    .db $A8
    .db $85
    .db $85
L_005A0E: ; 0x005A0E, $CA0E
    LDX   #$CC00
    LDY   #$0064
L_005A15: ; 0x005A15, $CA15
    JSR   AUTO/ADV_WAIT?
    JSR   LOAD_B@X_BANK0
    BITB  #$02
    BNE   L_005A15
L_005A1F: ; 0x005A1F, $CA1F
    JSR   AUTO/ADV_WAIT?
    JSR   LOAD_B@X_BANK0
    BITB  #$02
    BEQ   L_005A1F
    RTS
CLR+READ_AUTO/ADV+CLEAR_PALETTE+DEC_COUNTER: ; 0x005A2A, $CA2A
    JSR   JMP_CLEAR_ALL_SCREEN ; Clear screen.
    BSR   WATCHDOG/READ_AUTO+ADV_SWITCHES
    JSR   CLEAR_COLOR_PALETTE
    DEC   $49
    BPL   RTS ; DEC counter.
    CLR   $49 ; Set to 0
RTS: ; 0x005A38, $CA38
    RTS
L_005A39: ; 0x005A39, $CA39
    LDY   #$0001
L_005A3D: ; 0x005A3D, $CA3D
    BSR   AUTO/ADV_WAIT?
    TST   $49
    BEQ   L_005A3D
    RTS
AUTO/ADV_WAIT?: ; 0x005A44, $CA44
    PSHS  Y,A,CC
WAIT_FOR_SWITCHES_AGAIN: ; 0x005A46, $CA46
    BSR   WATCHDOG/READ_AUTO+ADV_SWITCHES
    TST   $49 ; Test value subrtn incs.
    BNE   LEAVE_RTN ; If not 0, leave.
    LDA   #$B2 ; Load timer.
MESSAGE_TIMER_LOOP: ; 0x005A4E, $CA4E
    DECA
    BNE   MESSAGE_TIMER_LOOP
    LEAY  -1,Y ; Only do 1 time.
    BNE   WAIT_FOR_SWITCHES_AGAIN
LEAVE_RTN: ; 0x005A55, $CA55
    PULS  CC,A,Y,PC ; Leaves
LONG_MESSAGE_INITIAL_TEST_INDICATE?: ; 0x005A57, $CA57
    PSHS  Y,B
    LDB   $49 ; Save?
    CLR   $49 ; Clear
    LDY   #$000A ; Display message for X cycles.
    BSR   AUTO/ADV_WAIT? ; Wait for switches?
    ADDB  $49 ; Add 
    STB   $49 ; Store?
    PULS  B,Y,PC ; RTS
WATCHDOG/READ_AUTO+ADV_SWITCHES: ; 0x005A69, $CA69
    PSHS  X,B,CC ; Save
    LDB   #$38 ; Setup watchdog.
    LDX   #$C3FC
    JSR   JMP_STORE_B@X_BANK0 ; Set watchdog.
    LDX   #$CC00
    JSR   LOAD_B@X_BANK0 ; Get ROM PIA-A
    COMB ; Invert
    ANDB  #$03
    BEQ   BOTH_PRESSED ; Both pressed.
    ANDCC #$FE ; Clear CC
BOTH_PRESSED: ; 0x005A80, $CA80
    LDB   $47 ; Get val
    RORB ; ROR
    STB   $47 ; Store
    BNE   NOT_0 ; If not 0
    STB   $48 ; Clear
NOT_0: ; 0x005A89, $CA89
    COMB ; Invert again
    BNE   RTS ; If not 0, RTS.
    LDB   $48 ; Load B from loc.
    BNE   RTS ; If not 0, rts
    COMB ; Invert
    STB   $48 ; Store.
    INC   $49 ; Inc
RTS: ; 0x005A95, $CA95
    PULS  CC,B,X,PC ; RTS
L_005A97: ; 0x005A97, $CA97
    PSHS  Y,X,B
    LDX   #$C000
L_005A9C: ; 0x005A9C, $CA9C
    LDB   Y+
    JSR   JMP_STORE_B@X_BANK0
    LEAX  1,X
    CMPX  #$C010
    BNE   L_005A9C
    PULS  B,X,Y,PC
ROM_BOARD_LED_DISPLAY_B: ; 0x005AAA, $CAAA
    PSHS  X,B ; Save
    LSRB ; Bring 0 in.
    RORB
    RORB
    RORB ; Shift 4x total here.
    BPL   DONT_INC ; If B bit 2 clear originally.
    INCB ; ++
DONT_INC: ; 0x005AB3, $CAB3
    RORB
    RORB ; Shift 6x total, this is to display the original bottom bits?
    LDX   #$CC00 ; Store to ROM_PIA_A_DATA
    JSR   JMP_STORE_B@X_BANK0 ; Store
    ASLB ; Shift in 3 zeros.
    ASLB
    ASLB
    ORB   #$3F ; Set bits to sound board. Silence?
    LDX   #$CC02 ; Store to ROM_PIA_B_DATA
    JSR   JMP_STORE_B@X_BANK0 ; Store
    PULS  B,X,PC
L_005AC8: ; 0x005AC8, $CAC8
    PSHS  Y,B,A
    LDA   #$02
    LDY   #$01F4
L_005AD0: ; 0x005AD0, $CAD0
    JSR   ROM_BOARD_LED_DISPLAY_B
    JSR   AUTO/ADV_WAIT?
    CLRB
    JSR   ROM_BOARD_LED_DISPLAY_B
    JSR   AUTO/ADV_WAIT?
    LDB   1,S
    DECA
    BNE   L_005AD0
    PULS  A,B,Y
SETUP_52+49+48+36+59: ; 0x005AE4, $CAE4
    PSHS  B,A
    CLR   SENTENCE_PTR_WORD_ON
    CLR   $49
    LDA   #$01
    STA   $48
    LDA   #$03
    STA   BANK_VAL_DP
    LDD   #$FFFF
    STD   TEXT_PTR_UNK
    PULS  A,B,PC
CLEAR_COLOR_PALETTE: ; 0x005AF9, $CAF9
    PSHS  X,B ; Save
    CLRB
    LDX   #$C000
CLEAR_PALETTE_LOOP: ; 0x005AFF, $CAFF
    JSR   JMP_STORE_B@X_BANK0 ; Write 0
    LEAX  1,X ; Next
    CMPX  #$C010 ; Bound
    BNE   CLEAR_PALETTE_LOOP ; Loop
    PULS  B,X,PC ; RTS
L_005B0B: ; 0x005B0B, $CB0B
    PSHS  X,B
    COMB
    ANDB  #$3F
    LDX   #$CC02
    JSR   JMP_STORE_B@X_BANK0
    JSR   LONG_MESSAGE_INITIAL_TEST_INDICATE?
    LDB   #$3F
    JSR   JMP_STORE_B@X_BANK0
    JSR   LONG_MESSAGE_INITIAL_TEST_INDICATE?
    PULS  B,X,PC
L_005B23: ; 0x005B23, $CB23
    PSHS  A
    TFR   B>A
    ANDA  #$0F
    ADDA  #$00
    DAA
    ANDB  #$F0
L_005B2E: ; 0x005B2E, $CB2E
    BEQ   L_005B37
    ADDA  #$16
    DAA
    SUBB  #$10
    BRA   L_005B2E
L_005B37: ; 0x005B37, $CB37
    TFR   A>B
    PULS  A,PC
L_005B3B: ; 0x005B3B, $CB3B
    PSHS  X,B,A
    LDD   #$0000
    LDX   #$0000
L_005B43: ; 0x005B43, $CB43
    STX   TEXT_PTR_TO_CODE_JSR
    LEAX  3840,X
L_005B49: ; 0x005B49, $CB49
    STD   --X
    CMPX  TEXT_PTR_TO_CODE_JSR
    BNE   L_005B49
    LEAX  2304,X
    TSTA
    BNE   L_005B59
    LDX   #$0F00
L_005B59: ; 0x005B59, $CB59
    JSR   WATCHDOG/READ_AUTO+ADV_SWITCHES
    TST   $49
    BNE   L_005B65
    ADDD  #$1111
    BHS   L_005B43
L_005B65: ; 0x005B65, $CB65
    PULS  A,B,X,PC
L_005B67: ; 0x005B67, $CB67
    JSR   CLEAR_COLOR_PALETTE
    LDX   #$0000
    LDY   #$C9E0
L_005B71: ; 0x005B71, $CB71
    STX   TEXT_PTR_TO_CODE_JSR
    LEAX  3840,X
    LDA   Y+
    TFR   A>B
L_005B7B: ; 0x005B7B, $CB7B
    STD   --X
    CMPX  TEXT_PTR_TO_CODE_JSR
    BNE   L_005B7B
    LEAX  2304,X
    TSTA
    BNE   L_005B8B
    LDX   #$0F00
L_005B8B: ; 0x005B8B, $CB8B
    JSR   WATCHDOG/READ_AUTO+ADV_SWITCHES
    TST   $49
    BNE   L_005B98
    CMPY  #$C9F0
    BNE   L_005B71
L_005B98: ; 0x005B98, $CB98
    RTS
L_005B99: ; 0x005B99, $CB99
    LDX   #$C487
    JSR   L_002FAD
    ASLB
    PSHS  B
    ASLB
    ADDB  S+
    LDX   #$CF10
    ABX
    LDY   #$C489
    LDB   #$06
MOVE_@X_TO_SRAM@Y: ; 0x005BAF, $CBAF
    PSHS  A ; Save
LOOP_INIT_SRAM: ; 0x005BB1, $CBB1
    LDA   X+ ; Get data from ROM pointer.
    EXG   X-Y ; Put SRAM pointer to X
    JSR   JMP_STORE_A_TO_SRAM_@X_BANKED ; Put to SRAM
    EXG   X-Y ; Move back to ROM pointer in X
    DECB ; Loop counter
    BNE   LOOP_INIT_SRAM
    PULS  A,PC
L_005BBF: ; 0x005BBF, $CBBF
    LDB   #$0E
    BRA   CLEAR_SRAM_TO_B
CLEAR_ALL_SRAM: ; 0x005BC3, $CBC3
    CLRB ; Loop counter.
CLEAR_SRAM_TO_B: ; 0x005BC4, $CBC4
    LDX   #$C400 ; Start of SRAM
    CLRA ; Clear
LOOP_WRITE_A_TO_SRAM_B_TIMES: ; 0x005BC8, $CBC8
    JSR   JMP_STORE_A_TO_SRAM_@X_BANKED ; Write location
    DECB ; loop--
    BNE   LOOP_WRITE_A_TO_SRAM_B_TIMES ; Loop
    RTS ; Leave
INIT_SRAM: ; 0x005BCF, $CBCF
    PSHS  Y,X,B,A ; Save
    BSR   CLEAR_ALL_SRAM ; Clear SRAM
    LDX   #$CECF ; CMOS_RAM_INIT_DATA
    LDY   #$C41D ; Pointer into CMOS RAM
    LDB   #$47 ; Times to loop
    BSR   MOVE_@X_TO_SRAM@Y ; Move data
    PULS  A,B,X,Y,PC ; RTS
L_005BE0: ; 0x005BE0, $CBE0
    PSHS  X,B,A
    LDA   #$01
    BRA   L_005BE8
L_005BE6: ; 0x005BE6, $CBE6
    PSHS  X,B,A
L_005BE8: ; 0x005BE8, $CBE8
    ANDB  #$07
    BEQ   L_005C0B
    ASLB
    ASLB
    LDX   #$C3FD
    ABX
    JSR   JMP_GET_DATA_FROM_SRAM@X_IN_B
    PSHS  B
    JSR   JMP_GET_DATA_FROM_SRAM@X_IN_B
    PSHS  B
    ADDA  S+
    DAA
    EXG   A-B
    PULS  A
    ADCA  #$00
    DAA
    LEAX  -4,X
    JSR   L_002FB0
L_005C0B: ; 0x005C0B, $CC0B
    PULS  A,B,X,PC
L_005C0D: ; 0x005C0D, $CC0D
    PSHS  X,A
    ADDA  $37
    DAA
    BHS   L_005C16
    LDA   #$99
L_005C16: ; 0x005C16, $CC16
    STA   $37
    LDX   #$C47D
    JSR   JMP_STORE_A_TO_SRAM_@X_BANKED
    PULS  A,X,PC
L_005C20: ; 0x005C20, $CC20
    PSHS  X,B,A
    LDB   #$03
    BRA   L_005C30
L_005C26: ; 0x005C26, $CC26
    PSHS  X,B,A
    LDB   #$02
    BRA   L_005C30
L_005C2C: ; 0x005C2C, $CC2C
    PSHS  X,B,A
    LDB   #$01
L_005C30: ; 0x005C30, $CC30
    JSR   L_005BE0
    ASLB
    LDX   #$C487
    ABX
    JSR   JMP_GET_DATA_FROM_SRAM@X_IN_B
    BSR   L_005C9F
    LDA   $39
    PSHS  B
    ADDA  S
    STA   $39
    LDA   $38
    ADDA  S+
    STA   $38
    LDX   #$C493
    JSR   JMP_GET_DATA_FROM_SRAM@X_IN_B
    BSR   L_005C9F
    PSHS  B
    CMPA  S+
    BHS   L_005C5B
    PULS  A,B,X,PC
L_005C5B: ; 0x005C5B, $CC5B
    LDX   #$C48F
    JSR   JMP_GET_DATA_FROM_SRAM@X_IN_B
    BSR   L_005C9F
    BSR   L_005C89
    PSHS  A
    STB   $38
    LDX   #$C491
    JSR   JMP_GET_DATA_FROM_SRAM@X_IN_B
    LDA   $39
    BSR   L_005C9F
    BSR   L_005C89
    TSTA
    BEQ   L_005C7C
    CLR   $38
    CLR   $39
L_005C7C: ; 0x005C7C, $CC7C
    ADDA  S+
    DAA
    LDB   #$04
    JSR   L_005BE6
    JSR   L_005C0D
    PULS  A,B,X,PC
L_005C89: ; 0x005C89, $CC89
    PSHS  B
    TSTB
    BNE   L_005C91
    CLRA
    PULS  B,PC
L_005C91: ; 0x005C91, $CC91
    EXG   A-B
    LDA   #$99
L_005C95: ; 0x005C95, $CC95
    ADDA  #$01
    DAA
    SUBB  S
    BHS   L_005C95
    ADDB  S+
    RTS
L_005C9F: ; 0x005C9F, $CC9F
    PSHS  A
    EXG   A-B
    CLRB
L_005CA4: ; 0x005CA4, $CCA4
    TSTA
    BNE   L_005CA9
    PULS  A,PC
L_005CA9: ; 0x005CA9, $CCA9
    ADDA  #$99
    DAA
    INCB
    BRA   L_005CA4
L_005CAF: ; 0x005CAF, $CCAF
    PSHS  Y,X,B,A
    LDX   #$CECF
    LDY   #$C41D
    LDB   #$30
    JSR   MOVE_@X_TO_SRAM@Y
    BSR   L_005CC1
    PULS  A,B,X,Y,PC
L_005CC1: ; 0x005CC1, $CCC1
    PSHS  Y,X,B,A
    LDY   #$CECF
    LDX   #$B260
    LDB   #$30
L_005CCC: ; 0x005CCC, $CCCC
    LDA   Y+
    JSR   JMP_STORE_A_TO_SRAM_@X_BANKED
    DECB
    BNE   L_005CCC
    PULS  A,B,X,Y,PC
    .db $CD
    .db $46
    .db $00
    .db $01
    .db $CD
    .db $51
    .db $00
    .db $05
    .db $CD
    .db $5E
    .db $00
    .db $09
    .db $CD
    .db $6A
    .db $00
    .db $0D
    .db $CD
    .db $75
    .db $00
    .db $11
    .db $CD
    .db $7F
    .db $00
    .db $15
    .db $CD
    .db $8A
    .db $00
    .db $19
    .db $CD
    .db $96
    .db $00
    .db $81
    .db $CD
    .db $A7
    .db $00
    .db $85
    .db $CD
    .db $B7
    .db $00
    .db $87
    .db $CD
    .db $C6
    .db $00
    .db $89
    .db $CD
    .db $D5
    .db $00
    .db $8B
    .db $CD
    .db $E6
    .db $00
    .db $8D
    .db $CD
    .db $F6
    .db $00
    .db $8F
    .db $CE
    .db $07
    .db $00
    .db $91
    .db $CE
    .db $17
    .db $00
    .db $93
    .db $CE
    .db $25
    .db $00
    .db $95
    .db $CE
    .db $2F
    .db $00
    .db $97
    .db $CE
    .db $3D
    .db $00
    .db $99
    .db $CE
    .db $4B
    .db $00
    .db $9B
    .db $CE
    .db $59
    .db $00
    .db $9D
    .db $CE
    .db $67
    .db $00
    .db $9F
    .db $CE
    .db $75
    .db $00
    .db $A1
    .db $CE
    .db $83
    .db $00
    .db $A3
    .db $CE
    .db $91
    .db $00
    .db $A5
    .db $CE
    .db $9F
    .db $00
    .db $A7
    .db $CE
    .db $AD
    .db $00
    .db $A9
    .db $CE
    .db $BC
    .db $00
    .db $7D
    .db $43 ; Coins Left
    .db $4F
    .db $49
    .db $4E
    .db $53
    .db $20
    .db $4C
    .db $45
    .db $46
    .db $54
    .db $2F
    .db $43 ; Coins center
    .db $4F
    .db $49
    .db $4E
    .db $53
    .db $20
    .db $43
    .db $45
    .db $4E
    .db $54
    .db $45
    .db $52
    .db $2F
    .db $43 ; Coins right
    .db $4F
    .db $49
    .db $4E
    .db $53
    .db $20
    .db $52
    .db $49
    .db $47
    .db $48
    .db $54
    .db $2F
    .db $54 ; Total paid
    .db $4F
    .db $54
    .db $41
    .db $4C
    .db $20
    .db $50
    .db $41
    .db $49
    .db $44
    .db $2F
    .db $53 ; Ships won
    .db $48
    .db $49
    .db $50
    .db $53
    .db $20
    .db $57
    .db $4F
    .db $4E
    .db $2F
    .db $54 ; Total time
    .db $4F
    .db $54
    .db $41
    .db $4C
    .db $20
    .db $54
    .db $49
    .db $4D
    .db $45
    .db $2F
    .db $54 ; Total ships
    .db $4F
    .db $54
    .db $41
    .db $4C
    .db $20
    .db $53
    .db $48
    .db $49
    .db $50
    .db $53
    .db $2F
    .db $42 ; Bonus ship level
    .db $4F
    .db $4E
    .db $55
    .db $53
    .db $20
    .db $53
    .db $48
    .db $49
    .db $50
    .db $20
    .db $4C
    .db $45
    .db $56
    .db $45
    .db $4C
    .db $2F
    .db $4E ; Number of ships
    .db $55
    .db $4D
    .db $42
    .db $45
    .db $52
    .db $20
    .db $4F
    .db $46
    .db $20
    .db $53
    .db $48
    .db $49
    .db $50
    .db $53
    .db $2F
    .db $43 ; Coinage select
    .db $4F
    .db $49
    .db $4E
    .db $41
    .db $47
    .db $45
    .db $20
    .db $53
    .db $45
    .db $4C
    .db $45
    .db $43
    .db $54
    .db $2F
    .db $4C ; Left coin mult
    .db $45
    .db $46
    .db $54
    .db $20
    .db $43
    .db $4F
    .db $49
    .db $4E
    .db $20
    .db $4D
    .db $55
    .db $4C
    .db $54
    .db $2F
    .db $43 ; Center coin mult
    .db $45
    .db $4E
    .db $54
    .db $45
    .db $52
    .db $20
    .db $43
    .db $4F
    .db $49
    .db $4E
    .db $20
    .db $4D
    .db $55
    .db $4C
    .db $54
    .db $2F
    .db $52 ; Right coin mult
    .db $49
    .db $47
    .db $48
    .db $54
    .db $20
    .db $43
    .db $4F
    .db $49
    .db $4E
    .db $20
    .db $4D
    .db $55
    .db $4C
    .db $54
    .db $2F
    .db $43 ; Coins for credit
    .db $4F
    .db $49
    .db $4E
    .db $53
    .db $20
    .db $46
    .db $4F
    .db $52
    .db $20
    .db $43
    .db $52
    .db $45
    .db $44
    .db $49
    .db $54
    .db $2F
    .db $43 ; Coins for bonus
    .db $4F
    .db $49
    .db $4E
    .db $53
    .db $20
    .db $46
    .db $4F
    .db $52
    .db $20
    .db $42
    .db $4F
    .db $4E
    .db $55
    .db $53
    .db $2F
    .db $4D ; Minimum coins
    .db $49
    .db $4E
    .db $49
    .db $4D
    .db $55
    .db $4D
    .db $20
    .db $43
    .db $4F
    .db $49
    .db $4E
    .db $53
    .db $2F
    .db $46 ; Free play
    .db $52
    .db $45
    .db $45
    .db $20
    .db $50
    .db $4C
    .db $41
    .db $59
    .db $2F
    .db $47 ; Game adjust 1
    .db $41
    .db $4D
    .db $45
    .db $20
    .db $41
    .db $44
    .db $4A
    .db $55
    .db $53
    .db $54
    .db $20
    .db $31
    .db $2F
    .db $47 ; Game adjust 2
    .db $41
    .db $4D
    .db $45
    .db $20
    .db $41
    .db $44
    .db $4A
    .db $55
    .db $53
    .db $54
    .db $20
    .db $32
    .db $2F
    .db $47 ; Game adjust 3
    .db $41
    .db $4D
    .db $45
    .db $20
    .db $41
    .db $44
    .db $4A
    .db $55
    .db $53
    .db $54
    .db $20
    .db $33
    .db $2F
    .db $47 ; Game adjust 4
    .db $41
    .db $4D
    .db $45
    .db $20
    .db $41
    .db $44
    .db $4A
    .db $55
    .db $53
    .db $54
    .db $20
    .db $34
    .db $2F
    .db $47 ; Game adjust 5
    .db $41
    .db $4D
    .db $45
    .db $20
    .db $41
    .db $44
    .db $4A
    .db $55
    .db $53
    .db $54
    .db $20
    .db $35
    .db $2F
    .db $47 ; Game adjust 6
    .db $41
    .db $4D
    .db $45
    .db $20
    .db $41
    .db $44
    .db $4A
    .db $55
    .db $53
    .db $54
    .db $20
    .db $36
    .db $2F
    .db $47 ; Game adjust 7
    .db $41
    .db $4D
    .db $45
    .db $20
    .db $41
    .db $44
    .db $4A
    .db $55
    .db $53
    .db $54
    .db $20
    .db $37
    .db $2F
    .db $47 ; Game adjust 8
    .db $41
    .db $4D
    .db $45
    .db $20
    .db $41
    .db $44
    .db $4A
    .db $55
    .db $53
    .db $54
    .db $20
    .db $38
    .db $2F
    .db $47 ; Game adjust 9
    .db $41
    .db $4D
    .db $45
    .db $20
    .db $41
    .db $44
    .db $4A
    .db $55
    .db $53
    .db $54
    .db $20
    .db $39
    .db $2F
    .db $47 ; Game adjust 10
    .db $41
    .db $4D
    .db $45
    .db $20
    .db $41
    .db $44
    .db $4A
    .db $55
    .db $53
    .db $54
    .db $20
    .db $31
    .db $30
    .db $2F
    .db $53 ; Special function
    .db $50
    .db $45
    .db $43
    .db $49
    .db $41
    .db $4C
    .db $20
    .db $46
    .db $55
    .db $4E
    .db $43
    .db $54
    .db $49
    .db $4F
    .db $4E
    .db $2F
    .db $FF
    .db $FF
CMOS_RAM_INIT_DATA: ; 0x005ECF, $CECF
    .db $02 ; High score table initial start. Score, BCD.
    .db $12
    .db $70
    .db $44 ; Initials, DRJ
    .db $52
    .db $4A
    .db $01 ; Score
    .db $83
    .db $15
    .db $53 ; SAM
    .db $41
    .db $4D
    .db $01 ; Score
    .db $59
    .db $20
    .db $4C ; LED
    .db $45
    .db $44
    .db $01 ; Score
    .db $42
    .db $85
    .db $50 ; PGD
    .db $47
    .db $44
    .db $01 ; Score
    .db $25
    .db $20
    .db $43 ; CRB
    .db $52
    .db $42
    .db $01 ; Score
    .db $10
    .db $35
    .db $4D ; MRS
    .db $52
    .db $53
    .db $00 ; Score
    .db $82
    .db $65
    .db $53 ; SSR
    .db $53
    .db $52
    .db $00 ; Score
    .db $60
    .db $10
    .db $54 ; TMH
    .db $4D
    .db $48
    .db $00
    .db $5A
    .db $01
    .db $00
    .db $03
    .db $03
    .db $01
    .db $04
    .db $01
    .db $01
    .db $00
    .db $00
    .db $00
    .db $05
    .db $15
    .db $01
    .db $05
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $01 ; END SRAM INIT DATA
    .db $04
    .db $01
    .db $02
    .db $04
    .db $00
    .db $06
    .db $00
    .db $01
    .db $01
    .db $00
    .db $00
    .db $01
    .db $04
    .db $01
    .db $01
    .db $00
    .db $00
    .db $01
    .db $16
    .db $06
    .db $02
    .db $00
    .db $00
    .db $01
    .db $04
    .db $01
    .db $02
    .db $00
    .db $00
    .db $01
    .db $00
    .db $04
    .db $01
    .db $00
    .db $00
    .db $01
    .db $00
    .db $02
    .db $01
    .db $00
    .db $00
    .db $01
    .db $00
    .db $02
    .db $02
    .db $00
    .db $00
    .db $43 ; Copyright 1980 - Williams Electronics
    .db $4F
    .db $50
    .db $59
    .db $52
    .db $49
    .db $47
    .db $48
    .db $54
    .db $20
    .db $31
    .db $39
    .db $38
    .db $30
    .db $20
    .db $2D
    .db $20
    .db $57
    .db $49
    .db $4C
    .db $4C
    .db $49
    .db $41
    .db $4D
    .db $53
    .db $20
    .db $45
    .db $4C
    .db $45
    .db $43
    .db $54
    .db $52
    .db $4F
    .db $4E
    .db $49
    .db $43
    .db $53
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $4A
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00

;Bank 7
	.org $C000

    JMP   L_006015
    JMP   L_006092
    JMP   L_006262
    JMP   L_00629A
    ANDB  #$50
    JMP   L_0065D0
    .db $C6
    .db $BA
    .db $C7
    .db $72
L_006015: ; 0x006015, $C015
    LDD   $20
    ANDB  #$E0
    STD   $17
    ADDD  #$2610
    STD   $15
    CLR   $0F
    LDX   #$C34F
    STX   $09
    LDA   #$E0
    STA   $11
    JSR   L_0062AA
    LDX   #$0010
L_006031: ; 0x006031, $C031
    CMPX  $15
    BEQ   L_006047
    LDA   $0D
    BPL   L_00603D
L_006039: ; 0x006039, $C039
    DEC   $11
    BRA   L_00603F
L_00603D: ; 0x00603D, $C03D
    INC   $11
L_00603F: ; 0x00603F, $C03F
    JSR   L_0062AA
    LEAX  32,X
    BRA   L_006031
L_006047: ; 0x006047, $C047
    LDD   $09
    STD   $03
    LDA   $0F
    STA   R_0000
    LDA   $0D
    STA   $01
    LDA   $11
    STA   $02
    LDX   #$B700
    STX   $05
    LDX   #$BA90
    STX   $07
L_006061: ; 0x006061, $C061
    LDD   $15
    SUBD  #$0020
L_006066: ; 0x006066, $C066
    STD   $15
    CMPD  $17
    BMI   L_006072
L_00606D: ; 0x00606D, $C06D
    JSR   L_00612C
    BRA   L_006061
L_006072: ; 0x006072, $C072
    LDD   $03
    STD   $0B
    LDA   R_0000
    STA   $10
    LDA   $01
    STA   $0E
    LDA   $02
    STA   $12
    LDY   #$BE20
    LDX   #$0000
L_006089: ; 0x006089, $C089
    STX   Y++
    CMPY  #$BF50
    BNE   L_006089
    RTS
L_006092: ; 0x006092, $C092
    LDD   $20
    ANDB  #$E0
    SUBD  $15
    ASLB
    ROLA
    ASLB
    ROLA
    ASLB
    ROLA
    STA   R_0000
    BEQ   L_0060C2
    BMI   L_0060B4
L_0060A4: ; 0x0060A4, $C0A4
    LDD   $15
    ADDD  #$0020
    STD   $15
    JSR   L_0061CD
    DEC   R_0000
    BNE   L_0060A4
    BRA   L_0060C2
L_0060B4: ; 0x0060B4, $C0B4
    LDD   $15
    SUBD  #$0020
    STD   $15
    JSR   L_00612C
    INC   R_0000
    BNE   L_0060B4
L_0060C2: ; 0x0060C2, $C0C2
    LDD   $20
    ANDB  #$E0
    STD   $15
    LDX   #$0000
    LDY   #$BE20
    STS   $13
    LDS   $05
    BITB  #$20
    BNE   L_0060DC
    LDS   $07
L_0060DC: ; 0x0060DC, $C0DC
    LDA   #$98
L_0060DE: ; 0x0060DE, $C0DE
    STX   [Y]
    PULS  B,U
    STD   Y
    STU   [Y++]
    DECA
    STX   [Y]
    PULS  B,U
    STD   Y
    STU   [Y++]
    DECA
    STX   [Y]
    PULS  B,U
    STD   Y
    STU   [Y++]
    DECA
    STX   [Y]
    PULS  B,U
    STD   Y
    STU   [Y++]
    DECA
    STX   [Y]
    PULS  B,U
    STD   Y
    STU   [Y++]
    DECA
    STX   [Y]
    PULS  B,U
    STD   Y
    STU   [Y++]
    DECA
    STX   [Y]
    PULS  B,U
    STD   Y
    STU   [Y++]
    DECA
    STX   [Y]
    PULS  B,U
    STD   Y
    STU   [Y++]
    DECA
    BNE   L_0060DE
    LDS   $13
    RTS
L_00612C: ; 0x00612C, $C12C
    JSR   L_006323
    BMI   L_006135
    DEC   $12
    BRA   L_006137
L_006135: ; 0x006135, $C135
    INC   $12
L_006137: ; 0x006137, $C137
    LDA   #$20
    BITA  $16
    BNE   L_006185
    LDX   $07
    JSR   L_0062F6
    BMI   L_006164
    DEC   $11
    LDA   $11
    STA   X
    STA   456,X
    LDD   #$7007
    STD   1,X
    STD   457,X
    LEAX  3,X
    CMPX  #$BC58
    BNE   L_006161
    LDX   #$BA90
L_006161: ; 0x006161, $C161
    STX   $07
    RTS
L_006164: ; 0x006164, $C164
    LDA   $11
    STA   X
    STA   456,X
    INCA
    STA   $11
    LDD   #$0770
    STD   1,X
    STD   457,X
    LEAX  3,X
    CMPX  #$BC58
    BNE   L_006182
    LDX   #$BA90
L_006182: ; 0x006182, $C182
    STX   $07
    RTS
L_006185: ; 0x006185, $C185
    LDX   $05
    JSR   L_0062F6
    BMI   L_0061AC
    DEC   $11
    LDA   $11
    STA   X
    STA   456,X
    LDD   #$7007
    STD   1,X
    STD   457,X
    LEAX  3,X
    CMPX  #$B8C8
    BNE   L_0061A9
    LDX   #$B700
L_0061A9: ; 0x0061A9, $C1A9
    STX   $05
    RTS
L_0061AC: ; 0x0061AC, $C1AC
    LDA   $11
    STA   X
    STA   456,X
    INCA
    STA   $11
    LDD   #$0770
    STD   1,X
    STD   457,X
    LEAX  3,X
    CMPX  #$B8C8
    BNE   L_0061CA
    LDX   #$B700
L_0061CA: ; 0x0061CA, $C1CA
    STX   $05
    RTS
L_0061CD: ; 0x0061CD, $C1CD
    LDA   $0D
    BPL   L_0061D5
    DEC   $11
    BRA   L_0061D7
L_0061D5: ; 0x0061D5, $C1D5
    INC   $11
L_0061D7: ; 0x0061D7, $C1D7
    JSR   L_0062AA
    LDA   #$20
    BITA  $16
    BEQ   L_006221
    LDX   $07
    LEAX  -3,X
    CMPX  #$BA8D
    BNE   L_0061EC
    LDX   #$BC55
L_0061EC: ; 0x0061EC, $C1EC
    STX   $07
    LDA   $0E
    BPL   L_006209
    DEC   $12
    LDA   $12
    STA   X
    STA   456,X
    LDD   #$0770
    STD   1,X
    STD   457,X
    JSR   L_0062D0
    RTS
L_006209: ; 0x006209, $C209
    LDA   $12
    STA   X
    STA   456,X
    INCA
    STA   $12
    LDD   #$7007
    STD   1,X
    STD   457,X
    JSR   L_0062D0
    RTS
L_006221: ; 0x006221, $C221
    LDX   $05
    LEAX  -3,X
    CMPX  #$B6FD
    BNE   L_00622D
L_00622A: ; 0x00622A, $C22A
    LDX   #$B8C5
L_00622D: ; 0x00622D, $C22D
    STX   $05
    LDA   $0E
    BPL   L_00624A
    DEC   $12
    LDA   $12
    STA   X
    STA   456,X
    LDD   #$0770
    STD   1,X
    STD   457,X
    JSR   L_0062D0
    RTS
L_00624A: ; 0x00624A, $C24A
    LDA   $12
    STA   X
    STA   456,X
    INCA
    STA   $12
    LDD   #$7007
    STD   1,X
    STD   457,X
    JSR   L_0062D0
    RTS
L_006262: ; 0x006262, $C262
    LDX   #$C350
    STX   $0B
    LDA   X
L_006269: ; 0x006269, $C269
    STA   $0E
    LDA   #$07
    STA   $10
    LDA   #$E0
    STA   $12
    LDX   #$B300
L_006276: ; 0x006276, $C276
    LDA   $12
    STA   X+
    LDA   $0E
    BPL   L_006282
    DEC   $12
    BRA   L_006284
L_006282: ; 0x006282, $C282
    INC   $12
L_006284: ; 0x006284, $C284
    JSR   L_0062D0
    LDA   $0E
    BPL   L_00628F
    DEC   $12
    BRA   L_006291
L_00628F: ; 0x00628F, $C28F
    INC   $12
L_006291: ; 0x006291, $C291
    JSR   L_0062D0
    CMPX  #$B700
L_006297: ; 0x006297, $C297
    BNE   L_006276
    RTS
L_00629A: ; 0x00629A, $C29A
    LDX   #$0000
    LDY   #$BE20
L_0062A1: ; 0x0062A1, $C2A1
    STX   [Y++]
    CMPY  #$BF50
    BNE   L_0062A1
    RTS
L_0062AA: ; 0x0062AA, $C2AA
    LDA   $0F
    BEQ   L_0062B8
    DEC   $0F
    LDA   $0D
    ASLA
    ADCA  #$00
    STA   $0D
    RTS
L_0062B8: ; 0x0062B8, $C2B8
    LDU   $09
    LEAU  1,U
    CMPU  #$C450
    BNE   L_0062C5
    LDU   #$C350
L_0062C5: ; 0x0062C5, $C2C5
    STU   $09
    LDA   #$07
    STA   $0F
    LDA   U
    STA   $0D
    RTS
L_0062D0: ; 0x0062D0, $C2D0
    LDA   $10
    BEQ   L_0062DE
    DEC   $10
    LDA   $0E
    ASLA
    ADCA  #$00
    STA   $0E
    RTS
L_0062DE: ; 0x0062DE, $C2DE
    LDU   $0B
    LEAU  1,U
    CMPU  #$C450
    BNE   L_0062EB
    LDU   #$C350
L_0062EB: ; 0x0062EB, $C2EB
    STU   $0B
    LDA   #$07
    STA   $10
    LDA   U
    STA   $0E
    RTS
L_0062F6: ; 0x0062F6, $C2F6
    LDA   $0F
    CMPA  #$07
    BEQ   L_006308
    INC   $0F
    LDA   $0D
    LSRA
    BHS   L_006305
    ADDA  #$80
L_006305: ; 0x006305, $C305
    STA   $0D
    RTS
L_006308: ; 0x006308, $C308
    LDU   $09
    CMPU  #$C350
    BNE   L_006313
    LDU   #$C450
L_006313: ; 0x006313, $C313
    LEAU  -1,U
    STU   $09
    CLR   $0F
    LDA   U
    LSRA
    BHS   L_006320
    ADDA  #$80
L_006320: ; 0x006320, $C320
    STA   $0D
    RTS
L_006323: ; 0x006323, $C323
    LDA   $10
    CMPA  #$07
    BEQ   L_006335
    INC   $10
    LDA   $0E
    LSRA
    BHS   L_006332
    ADDA  #$80
L_006332: ; 0x006332, $C332
    STA   $0E
    RTS
L_006335: ; 0x006335, $C335
    LDU   $0B
    CMPU  #$C350
L_00633B: ; 0x00633B, $C33B
    BNE   L_006340
    LDU   #$C450
L_006340: ; 0x006340, $C340
    LEAU  -1,U
    STU   $0B
    CLR   $10
    LDA   U
    LSRA
    BHS   L_00634D
    ADDA  #$80
L_00634D: ; 0x00634D, $C34D
    STA   $0E
    RTS
    .db $2A
    .db $AA
    .db $AA
    .db $AA
    .db $AA
    .db $AA
    .db $AB
    .db $A1
    .db $D5
    .db $55
    .db $55
    .db $55
    .db $55
    .db $55
    .db $AA
    .db $BF
    .db $FF
    .db $FF
    .db $FF
    .db $C0
    .db $00
    .db $00
    .db $00
    .db $55
    .db $55
    .db $57
    .db $FF
    .db $C0
    .db $01
    .db $55
    .db $55
    .db $55
    .db $55
    .db $55
    .db $55
    .db $5F
    .db $E0
    .db $15
    .db $55
    .db $55
    .db $57
    .db $FF
    .db $F0
    .db $00
    .db $15
    .db $55
    .db $5F
    .db $FF
    .db $FF
    .db $FF
    .db $FF
    .db $00
    .db $00
    .db $00
    .db $00
    .db $05
    .db $55
    .db $7F
    .db $FF
    .db $E0
    .db $00
    .db $05
    .db $55
    .db $55
    .db $55
    .db $55
    .db $FC
    .db $05
    .db $55
    .db $55
    .db $50
    .db $01
    .db $FF
    .db $FF
    .db $FF
    .db $C0
    .db $00
    .db $0A
    .db $AA
    .db $AA
    .db $AA
    .db $FF
    .db $00
    .db $00
    .db $FF
    .db $FF
    .db $FF
    .db $FF
    .db $F0
    .db $00
    .db $00
    .db $1F
    .db $E0
    .db $00
    .db $55
    .db $55
    .db $55
    .db $40
    .db $AA
    .db $AA
    .db $AA
    .db $AA
    .db $AA
    .db $AA
    .db $B5
    .db $57
    .db $AA
    .db $AA
    .db $AA
    .db $F5
    .db $7F
    .db $D5
    .db $55
    .db $55
    .db $57
    .db $FF
    .db $80
    .db $07
    .db $E0
    .db $7F
    .db $F1
    .db $55
    .db $7F
    .db $FF
    .db $FF
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $0F
    .db $EF
    .db $76
    .db $91
    .db $11
    .db $11
    .db $5E
    .db $DB
    .db $E9
    .db $84
    .db $77
    .db $EC
    .db $C4
    .db $87
    .db $47
    .db $98
    .db $08
    .db $98
    .db $3F
    .db $C3
    .db $CB
    .db $DB
    .db $9F
    .db $C7
    .db $5F
    .db $2F
    .db $C7
    .db $7D
    .db $EF
    .db $BF
    .db $FA
    .db $4C
    .db $57
    .db $2B
    .db $61
    .db $EF
    .db $EF
    .db $FB
    .db $F7
    .db $E8
    .db $00
    .db $20
    .db $40
    .db $00
    .db $14
    .db $04
    .db $04
    .db $3C
    .db $06
    .db $00
    .db $1D
    .db $07
    .db $3C
    .db $E1
    .db $A5
    .db $55
    .db $55
    .db $45
    .db $2A
    .db $AA
    .db $AA
    .db $AA
    .db $A8
    .db $55
    .db $55
    .db $55
    .db $55
    .db $55
    .db $55
    .db $55
    .db $55
    .db $55
    .db $55
    .db $56
    .db $AA
    .db $AA
    .db $FE
    .db $AA
    .db $AA
    .db $AA
    .db $AA
    .db $AA
    .db $AA
    .db $AA
    .db $AA
    .db $EA
    .db $AA
    .db $AA
    .db $A8
    .db $02
    .db $AA
    .db $AA
    .db $AA
    .db $AA
    .db $BF
    .db $BE
    .db $3E
    .db $63
    .db $FF
    .db $E0
    .db $D8
    .db $1C
    .db $18
    .db $2A
    .db $AB
    .db $1E
    .db $77
    .db $7A
    .db $AF
    .db $A8
    .db $40
    .db $70
    .db $7D
    .db $40
    .db $0B
    .db $FB
    .db $FA
    .db $FF
    .db $C1
    .db $53
    .db $54
    .db $75
    .db $70
    .db $03
    .db $00
    .db $00
    .db $25
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $26
    .db $07
    .db $70
    .db $24
    .db $07
    .db $70
    .db $23
    .db $07
    .db $70
    .db $23
    .db $70
    .db $07
    .db $24
    .db $07
    .db $70
    .db $25
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $25
    .db $07
    .db $70
    .db $24
    .db $07
    .db $70
    .db $23
    .db $07
    .db $70
    .db $21
    .db $07
    .db $70
    .db $22
    .db $70
    .db $07
    .db $24
    .db $77
    .db $00
    .db $24
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $26
    .db $77
    .db $00
    .db $25
    .db $77
    .db $00
    .db $25
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $24
    .db $07
    .db $70
    .db $23
    .db $70
    .db $07
    .db $25
    .db $77
    .db $00
    .db $26
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $26
    .db $77
    .db $00
    .db $25
    .db $07
    .db $70
    .db $23
    .db $07
    .db $70
    .db $22
    .db $07
    .db $70
    .db $21
    .db $77
    .db $00
    .db $21
    .db $70
    .db $07
    .db $23
    .db $70
    .db $07
    .db $25
    .db $70
    .db $07
    .db $25
    .db $07
    .db $70
    .db $25
    .db $77
    .db $00
    .db $25
    .db $77
    .db $00
    .db $24
    .db $77
    .db $00
    .db $22
    .db $07
    .db $70
    .db $20
    .db $07
    .db $70
    .db $1E
    .db $07
    .db $70
    .db $1C
    .db $07
    .db $70
    .db $1D
    .db $70
    .db $07
    .db $1F
    .db $70
    .db $07
    .db $21
    .db $70
    .db $07
    .db $22
    .db $70
    .db $07
    .db $24
    .db $70
    .db $07
    .db $26
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $26
    .db $77
    .db $00
    .db $26
    .db $77
    .db $00
    .db $26
    .db $77
    .db $00
    .db $26
    .db $77
    .db $00
    .db $25
    .db $77
    .db $00
    .db $25
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $24
    .db $07
    .db $70
    .db $23
    .db $77
    .db $00
    .db $24
    .db $77
    .db $00
    .db $22
    .db $07
    .db $70
    .db $23
    .db $70
    .db $07
    .db $22
    .db $07
    .db $70
    .db $21
    .db $70
    .db $07
    .db $23
    .db $70
    .db $07
    .db $25
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $26
    .db $07
    .db $70
    .db $24
    .db $07
    .db $70
    .db $23
    .db $07
    .db $70
    .db $23
    .db $70
    .db $07
    .db $24
    .db $07
    .db $70
    .db $25
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $25
    .db $07
    .db $70
    .db $24
    .db $07
    .db $70
    .db $23
    .db $07
    .db $70
    .db $21
    .db $07
    .db $70
    .db $22
    .db $70
    .db $07
    .db $24
    .db $77
    .db $00
    .db $24
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $26
    .db $77
    .db $00
    .db $25
    .db $77
    .db $00
    .db $25
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $24
    .db $07
    .db $70
    .db $23
    .db $70
    .db $07
    .db $25
    .db $77
    .db $00
    .db $26
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $26
    .db $77
    .db $00
    .db $25
    .db $07
    .db $70
    .db $23
    .db $07
    .db $70
    .db $22
    .db $07
    .db $70
    .db $21
    .db $77
    .db $00
    .db $21
    .db $70
    .db $07
    .db $23
    .db $70
    .db $07
    .db $25
    .db $70
    .db $07
    .db $25
    .db $07
    .db $70
    .db $25
    .db $77
    .db $00
    .db $25
    .db $77
    .db $00
    .db $24
    .db $77
    .db $00
    .db $22
    .db $07
    .db $70
    .db $20
    .db $07
    .db $70
    .db $1E
    .db $07
    .db $70
    .db $1C
    .db $07
    .db $70
    .db $1D
    .db $70
    .db $07
    .db $1F
    .db $70
    .db $07
    .db $21
    .db $70
    .db $07
    .db $22
    .db $70
    .db $07
    .db $24
    .db $70
    .db $07
    .db $26
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $26
    .db $77
    .db $00
    .db $26
    .db $77
    .db $00
    .db $26
    .db $77
    .db $00
    .db $26
    .db $77
    .db $00
    .db $25
    .db $77
    .db $00
    .db $25
    .db $70
    .db $07
    .db $26
    .db $77
    .db $00
    .db $24
    .db $07
    .db $70
    .db $23
    .db $77
    .db $00
    .db $24
    .db $77
    .db $00
    .db $22
    .db $07
    .db $70
    .db $23
    .db $70
    .db $07
    .db $22
    .db $07
    .db $70
    .db $21
    .db $70
    .db $07
    .db $23
    .db $70
    .db $07
L_0065D0: ; 0x0065D0, $C5D0
    PULS  A,B
    STD   9,U
    STX   R_0000
    LDD   #$0808
    STD   $04
    LDD   #$1732
    STD   $06
    LDY   #$B300
L_0065E4: ; 0x0065E4, $C5E4
    LDA   R_0000
    CLRB
    STD   2,Y
    LDA   $01
    STD   4,Y
    LDA   $05
    LSRA
    EORA  $05
    LSRA
    LSRA
    ROR   $04
    ROR   $05
    LDA   $04
    ANDA  #$01
    SUBA  #$01
    LDB   $05
    STD   6,Y
    BPL   L_006606
    COMA
    COMB
L_006606: ; 0x006606, $C606
    PSHS  B,A
    LDA   $07
    LSRA
    EORA  $07
    LSRA
    LSRA
    ROR   $06
    ROR   $07
    LDA   $06
    ANDA  #$03
    SUBA  #$02
    LDB   $07
    STD   8,Y
    BPL   L_006621
    COMA
    COMB
L_006621: ; 0x006621, $C621
    LSRA
    RORB
    ADDD  S++
    CMPD  #$016A
    BHS   L_0065E4
    LDX   #$0000
    STX   Y
    LEAY  10,Y
    CMPY  #$B800
    BNE   L_0065E4
    LDX   #$C6AB
    STX   $02
    LDA   #$38
    STA   $01
L_006641: ; 0x006641, $C641
    LDA   #$01
    LDX   #$C649
    JMP   L_002FD1
    LDX   #$0000
    LDY   #$B300
    LDA   [R_A002]
    STA   $31
    BEQ   L_0066A8
L_006658: ; 0x006658, $C658
    LDU   Y
    STX   U
    STX   256,U
    LDD   8,Y
    ADDD  4,Y
    CMPA  #$2A
    BLO   L_006690
    STD   4,Y
    STA   1,Y
    LDD   6,Y
    ADDD  2,Y
    CMPA  #$98
    BHI   L_006690
    STD   2,Y
    STA   Y
    TSTB
    BMI   L_006682
    LDD   #$BBBB
    STD   [Y]
    BRA   L_006690
L_006682: ; 0x006682, $C682
    LDU   Y
    LDD   #$0B0B
    STD   U
    LDD   #$B0B0
    STD   256,U
L_006690: ; 0x006690, $C690
    LEAY  10,Y
    CMPY  #$B800
    BNE   L_006658
    DEC   $01
    BNE   L_006641
    LDU   $02
    LEAU  1,U
    STU   $02
    LDA   #$04
    STA   $01
    BRA   L_006641
L_0066A8: ; 0x0066A8, $C6A8
    JMP   [9,U]
    .db $FF
    .db $7F
    .db $3F
    .db $37
    .db $2F
    .db $27
    .db $1F
    .db $17
    .db $07
    .db $06
    .db $05
    .db $04
    .db $03
    .db $02
    .db $00
    .db $14
    .db $00
    .db $00
    .db $00
    .db $0F
    .db $14
    .db $14
    .db $14
    .db $03
    .db $00
    .db $00
    .db $00
    .db $00
    .db $03
    .db $04
    .db $05
    .db $06
    .db $00
    .db $00
    .db $00
    .db $00
    .db $01
    .db $03
    .db $04
    .db $0A
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $0A
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $1E
    .db $00
    .db $00
    .db $00
    .db $1E
    .db $19
    .db $14
    .db $10
    .db $05
    .db $00
    .db $00
    .db $00
    .db $05
    .db $05
    .db $05
    .db $05
    .db $60
    .db $00
    .db $03
    .db $02
    .db $16
    .db $1E
    .db $26
    .db $2E
    .db $01
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $01
    .db $01
    .db $FF
    .db $00
    .db $10
    .db $00
    .db $70
    .db $B0
    .db $00
    .db $00
    .db $80
    .db $10
    .db $FC
    .db $FE
    .db $4A
    .db $3A
    .db $2A
    .db $2A
    .db $30
    .db $00
    .db $00
    .db $00
    .db $20
    .db $28
    .db $2C
    .db $30
    .db $02
    .db $00
    .db $00
    .db $00
    .db $01
    .db $01
    .db $02
    .db $02
    .db $01
    .db $00
    .db $00
    .db $00
    .db $00
    .db $00
    .db $01
    .db $01
    .db $FF
    .db $00
    .db $08
    .db $06
    .db $62
    .db $E0
    .db $02
    .db $12
    .db $60
    .db $00
    .db $08
    .db $04
    .db $0C
    .db $1C
    .db $24
    .db $28
    .db $FF
    .db $08
    .db $FE
    .db $FE
    .db $2A
    .db $22
    .db $1E
    .db $1C
    .db $60
    .db $00
    .db $08
    .db $02
    .db $16
    .db $1E
    .db $20
    .db $22
    .db $28
    .db $0A
    .db $FE
    .db $FF
    .db $19
    .db $19
    .db $19
    .db $19
    .db $3F
    .db $00
    .db $00
    .db $00
    .db $1F
    .db $1F
    .db $1F
    .db $3F
    .db $C0
    .db $18
    .db $F4
    .db $FC
    .db $D4
    .db $C4
    .db $A4
    .db $94
    .db $0A
    .db $03
    .db $FF
    .db $FF
    .db $0F
    .db $0D
    .db $0C
    .db $0A
    .db $C8
    .db $28
    .db $F4
    .db $F8
    .db $F0
    .db $DC
    .db $C8
    .db $C8
    .db $00
    .db $00
L_006774: ; 0x006774, $C774
    .db $00
    .db $00
    .db $00
    .db $00
    .db $03
    .db $8E
    .db $C0
    .db $0C
    JMP   L_006036
    LDB   #$28
    BRA   L_006774
    LDB   #$80
    BRA   L_006774
    LDY   #$C9FE
    JSR   L_006297
    JMP   L_00633B
L_006791: ; 0x006791, $C791
    LDB   #$A5
    LDX   #$C001
    JMP   L_006036
    JSR   L_006269
    JSR   L_00622A
    BSR   L_006791
    LDU   #$C0D7
    LDX   #$2820
    JSR   L_006269
    JSR   L_00603C
    LDY   #$C061
    JSR   L_00606D
    LDY   #$05DC
    JSR   L_006244
    TST   $49
    BNE   L_00601F
    CLR   $3C
    LDA   #$01
    STA   $3B
    LEAS  -32,S
    JSR   JMP_CLEAR_ALL_SCREEN
    LDU   #$C0D7
    LDX   #$2820
    JSR   L_006269
    JSR   L_00603C
    CLR   $3A
    LDY   #$C065
    JSR   L_006066
    JSR   L_006269
    LDA   #$20
    TFR   A>B
    DECB
    LEAX  S
L_0067EA: ; 0x0067EA, $C7EA
    STA   X+
    DECB
    BNE   L_0067EA
    LDA   #$17
    STA   X+
    LEAX  S
    JSR   L_006257
    LDX   #$CC00
    JSR   L_006039
    .db $C5
    .db $02
